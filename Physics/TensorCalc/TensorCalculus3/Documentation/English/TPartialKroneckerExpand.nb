(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 4.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[      9685,        288]*)
(*NotebookOutlinePosition[     10672,        322]*)
(*  CellTagsIndexPosition[     10597,        316]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["PartialKroneckerExpand", "ObjectName",
  CellTags->"Function?"],

Cell[TextData[{
  "\[FilledSmallSquare] ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["PartialKroneckerExpand",
            "MR"], 
          StyleBox["[",
            "MR"], 
          StyleBox[\(\[Delta], order, suborder, expandup : True\),
            "TI"], 
          StyleBox["]",
            "MR"]}], 
        StyleBox["[",
          "MR"], 
        StyleBox["expr",
          "TI"], 
        StyleBox["]",
          "MR"]}]]],
  " will expand tensors with label \[Delta], assumed to be generalized \
Kroneckers, and with order up and down indices, in terms of \[Delta]s with \
suborder and (order-suborder) indices."
}], "Usage",
  CellTags->"Function?"],

Cell["\<\
 The expansion is done on the first suborder up indices, unless the optional \
4th argument is set to False, in which case the first suborder down indices \
are used.\
\>", "MathCaption"],

Cell["\<\
 In Tensorial all Kronecker symbols must have one Void in each slot just like \
all other indexed objects. Many texts use indices in both the up and down \
positions, taking advantage of the fact that Kroneckers must be even order \
with equal number of up and down indices.\
\>", "MathCaption"],

Cell["\<\
Labels other that \[Delta] can be used to represent the Kronecker.\
\>", "MathCaption"],

Cell[TextData[{
  "See also: ",
  ButtonBox["FullKroneckerExpand",
    ButtonData:>{"FullKroneckerExpand"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["ContractKroneckers",
    ButtonData:>{"ContractKroneckers"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["KroneckerAbsorb",
    ButtonData:>{"KroneckerAbsorb"},
    ButtonStyle->"AddOnsLink"],
  "."
}], "MathCaption"],

Cell[CellGroupData[{

Cell["Examples", "ExampleSection"],

Cell[BoxData[
    \(Needs["\<TensorCalculus3`Tensorial`\>"]\)], "Input",
  CellLabel->"In[1]:="],

Cell[TextData[{
  "To avoid defining all ",
  Cell[BoxData[
      SuperscriptBox["2", "8"]]],
  "combinations of up/down indices..."
}], "Text"],

Cell[BoxData[{
    \(\[Delta]uuuudddd[i_, j_, k_, l_, r_, s_, t_, u_] := 
      Tensor[\[Delta], {i, j, k, l, Void, Void, Void, Void}, {Void, Void, 
          Void, Void, r, s, t, u}]\), "\n", 
    \(\[Kappa]uuuudddd[i_, j_, k_, l_, r_, s_, t_, u_] := 
      Tensor[\[Kappa], {i, j, k, l, Void, Void, Void, Void}, {Void, Void, 
          Void, Void, r, s, t, u}]\)}], "Input",
  CellLabel->"In[2]:="],

Cell["\<\
Here we do expansions of different suborders and, as a check, test them \
against the full expansion of the initial \[Delta]. The second line gives the \
partial expansion. The third line checks if the full expansion of the partial \
expansion is equal to the full expansion of the initial generalized \
Kronecker. Here the partial expansion is in terms of first order \
Kroneckers.\
\>", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 1]\), "\[IndentingNewLine]", 
    \(\(rhs = % // 
          FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[4]:="],

Cell["Here we expand in terms of second order Kroneckers.", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 2]\), "\[IndentingNewLine]", 
    \(\(rhs = % // 
          FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[9]:="],

Cell["Here we expand in terms of 3rd order Kroneckers.", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 3]\), "\[IndentingNewLine]", 
    \(\(rhs = % // 
          FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[14]:="],

Cell["\<\
The following first does a 3rd order expansion of the 4th order Kronecker. It \
then does a 2nd order expansion of the resulting 3rd order Kroneckers.  It \
then does a 1st order expansion of the resulting 2nd order Kroneckers. We \
then check that this is equal to full expansion of the initial Kronecker.\
\>", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 3]\), "\[IndentingNewLine]", 
    \(% // PartialKroneckerExpand[\[Delta], 3, 2]\), "\[IndentingNewLine]", 
    \(rhs = % // 
        PartialKroneckerExpand[\[Delta], 2, 1]\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[19]:="],

Cell["The following does an expansion on the down indices.", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 1, 
        False]\), "\[IndentingNewLine]", 
    \(\(rhs = % // 
          FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[25]:="],

Cell["The following is a multistep expansion on the down indices.", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 3, 
        False]\), "\[IndentingNewLine]", 
    \(% // PartialKroneckerExpand[\[Delta], 3, 2, 
        False]\), "\[IndentingNewLine]", 
    \(rhs = % // 
        PartialKroneckerExpand[\[Delta], 2, 1, 
          False]\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[30]:="],

Cell["\<\
In the following we alternately expand on the down and up indices.\
\>", "Text"],

Cell[BoxData[{
    \(gk1 = \[Delta]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Delta]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Delta], 4, 3, 
        False]\), "\[IndentingNewLine]", 
    \(% // PartialKroneckerExpand[\[Delta], 3, 2, 
        True]\), "\[IndentingNewLine]", 
    \(rhs = % // 
        PartialKroneckerExpand[\[Delta], 2, 1, 
          False]\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[36]:="],

Cell["\<\
Labels other than \[Delta] can be used to represent the generalized \
Kronecker.\
\>", "Text"],

Cell[BoxData[{
    \(gk1 = \[Kappa]uuuudddd[i, j, k, l, r, s, t, 
        u]\), "\[IndentingNewLine]", 
    \(\(lhs = 
        gk1 // FullKroneckerExpand[\[Kappa]];\)\), "\[IndentingNewLine]", 
    \(gk1 // 
      PartialKroneckerExpand[\[Kappa], 4, 3, 
        False]\), "\[IndentingNewLine]", 
    \(% // PartialKroneckerExpand[\[Kappa], 3, 2, 
        True]\), "\[IndentingNewLine]", 
    \(rhs = % // 
        PartialKroneckerExpand[\[Kappa], 2, 1, 
          False]\), "\[IndentingNewLine]", 
    \(lhs == rhs // ExpandAll\)}], "Input",
  CellLabel->"In[42]:="],

Cell[BoxData[{
    \(\[Delta]uuuudddd[i_, j_, k_, l_, r_, s_, t_, u_] =. \), "\n", 
    \(\[Kappa]uuuudddd[i_, j_, k_, l_, r_, s_, t_, u_] =. \)}], "Input",
  CellLabel->"In[48]:="]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"4.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 943}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{674, 474},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CommonDefaultFormatTypes->{"Output"->TraditionalForm},
StyleDefinitions -> "HelpBrowser.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Function?"->{
    Cell[1776, 53, 69, 1, 31, "ObjectName",
      CellTags->"Function?"],
    Cell[1848, 56, 686, 23, 49, "Usage",
      CellTags->"Function?"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Function?", 10426, 307}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 69, 1, 31, "ObjectName",
  CellTags->"Function?"],
Cell[1848, 56, 686, 23, 49, "Usage",
  CellTags->"Function?"],
Cell[2537, 81, 197, 4, 48, "MathCaption"],
Cell[2737, 87, 305, 5, 65, "MathCaption"],
Cell[3045, 94, 97, 2, 31, "MathCaption"],
Cell[3145, 98, 386, 14, 31, "MathCaption"],

Cell[CellGroupData[{
Cell[3556, 116, 34, 0, 40, "ExampleSection"],
Cell[3593, 118, 96, 2, 29, "Input"],
Cell[3692, 122, 144, 5, 25, "Text"],
Cell[3839, 129, 400, 7, 89, "Input"],
Cell[4242, 138, 406, 7, 59, "Text"],
Cell[4651, 147, 437, 10, 109, "Input"],
Cell[5091, 159, 67, 0, 25, "Text"],
Cell[5161, 161, 437, 10, 109, "Input"],
Cell[5601, 173, 64, 0, 25, "Text"],
Cell[5668, 175, 438, 10, 109, "Input"],
Cell[6109, 187, 330, 5, 59, "Text"],
Cell[6442, 194, 517, 11, 129, "Input"],
Cell[6962, 207, 68, 0, 25, "Text"],
Cell[7033, 209, 454, 11, 109, "Input"],
Cell[7490, 222, 75, 0, 25, "Text"],
Cell[7568, 224, 567, 14, 129, "Input"],
Cell[8138, 240, 90, 2, 25, "Text"],
Cell[8231, 244, 566, 14, 129, "Input"],
Cell[8800, 260, 104, 3, 25, "Text"],
Cell[8907, 265, 566, 14, 129, "Input"],
Cell[9476, 281, 181, 3, 49, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

