(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 4.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[      8342,        298]*)
(*NotebookOutlinePosition[      9328,        332]*)
(*  CellTagsIndexPosition[      9254,        326]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["ToArrayValues", "ObjectName",
  CellTags->"Function?"],

Cell[TextData[{
  "\[FilledSmallSquare] ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ToArrayValues[]\),
          "MR"], 
        StyleBox["[",
          "MR"], 
        StyleBox["expr",
          "TI"], 
        StyleBox["]",
          "MR"]}]]],
  " will convert the expression to a vector, matrix or array by expansion and \
substitution of any stored values.\n\[FilledSmallSquare] ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["ToArrayValues",
            "MR"], 
          StyleBox["[",
            "MR"], 
          StyleBox["baseindices",
            "TI"], 
          StyleBox["]",
            "MR"]}], 
        StyleBox["[",
          "MR"], 
        StyleBox["expr",
          "TI"], 
        StyleBox["]",
          "MR"]}]]],
  " expands only on the set of baseindices."
}], "Usage",
  CellTags->"Function?"],

Cell[TextData[{
  " This provides a quick method to convert a tensor expression in index form \
to a ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " array."
}], "MathCaption"],

Cell["\<\
 TensorValueRules as well as tensor value definitions are used.\
\>", "MathCaption"],

Cell["\<\
 The expansion of arrays is done in the natural sort order of the raw indices \
in the expression.\
\>", "MathCaption"],

Cell[TextData[{
  " If the baseindices form is used, the baseindices must be a subset of ",
  Cell[BoxData[
      \(BaseIndices\)]],
  "."
}], "MathCaption"],

Cell["\<\
No tensor label may be the same as one of the expansion indices, otherwise \
incorrect results will be obtained. If this unlikely case should occur you \
can reindex to avoid the problem.\
\>", "MathCaption"],

Cell[TextData[{
  "See also: ",
  ButtonBox["EinsteinSum",
    ButtonData:>{"EinsteinSum"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["EinsteinArray",
    ButtonData:>{"EinsteinArray"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["ArrayExpansion",
    ButtonData:>{"ArrayExpansion"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["BaseIndices",
    ButtonData:>{"BaseIndices"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["ContractArray",
    ButtonData:>{"ContractArray"},
    ButtonStyle->"AddOnsLink"],
  "."
}], "MathCaption"],

Cell[CellGroupData[{

Cell["Examples", "ExampleSection"],

Cell[BoxData[
    \(Needs["\<TensorCalculus3`Tensorial`\>"]\)], "Input",
  CellLabel->"In[1]:="],

Cell["Save the settings.", "Text"],

Cell[BoxData[{
    \(\(oldindices = BaseIndices;\)\), "\n", 
    \(DeclareBaseIndices[{1, 2, 3}]\)}], "Input",
  CellLabel->"In[2]:="],

Cell[BoxData[
    \(DefineTensorShortcuts[{{x, y}, 1}, {S, 2}]\)], "Input",
  CellLabel->"In[4]:="],

Cell["Set tensor value rules...", "Text"],

Cell[BoxData[{\(SetTensorValueRules[
      xu[i], {1, 2, 3}]\), "\[IndentingNewLine]", \(SetTensorValueRules[
      yu[i], {a, b, c}]\), "\[IndentingNewLine]", 
    RowBox[{"SetTensorValueRules", "[", 
      RowBox[{\(Sud[i, j]\), ",", 
        RowBox[{"(", GridBox[{
              {"4", "0", "1"},
              {"0", "1", "0"},
              {"1", "2", "0"}
              }], ")"}]}], "]"}]}], "Input",
  CellLabel->"In[5]:="],

Cell[BoxData[{
    \(xu[i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[8]:="],

Cell["\<\
An expansion on a subset of indices may be performed by specifying the subset \
as an argument.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[{1, 3}]\)}], "Input",
  CellLabel->"In[10]:="],

Cell["\<\
The free indices in the following expression are j and k.  The rows will \
correspond to increasing j and the columns to increasing k because that is \
the natural sort order of the free indices.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[12]:="],

Cell["\<\
There are various methods of calculating submatrices. The following expands \
on only the first two base indices. The third index is neither included in \
the sum nor in the array expansion.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[{1, 2}]\)}], "Input",
  CellLabel->"In[14]:="],

Cell["\<\
The following sums on all indices but expands only on the first two \
indices.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(% // EinsteinSum[]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[{1, 2}]\)}], "Input",
  CellLabel->"In[16]:="],

Cell["\<\
The following expands on all indices and extracts the first row.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(\((% // ToArrayValues[])\)\_\(\(\[LeftDoubleBracket]\)\(1\)\(\
\[RightDoubleBracket]\)\)\)}], "Input",
  CellLabel->"In[19]:="],

Cell["\<\
The following expands on all indices and extracts the first two columns.\
\>", "Text"],

Cell[BoxData[{
    \(xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(Part[% // ToArrayValues[], All, {1, 2}]\)}], "Input",
  CellLabel->"In[21]:="],

Cell[BoxData[{
    \(3  xu[i] yu[j] Sud[k, i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[23]:="],

Cell["\<\
In the next statement, the free indices are a and j. So now the rows will \
correspond to increasing a and the columns to increasing j, the transpose of \
the previous case. \
\>", "Text"],

Cell[BoxData[{
    \(3  xu[i] yu[j] Sud[a, i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[25]:="],

Cell["Here we remove the values for the x vector.", "Text"],

Cell[BoxData[{
    \(ClearTensorValues[xu[i]]\), "\n", 
    \(xu[i] yu[j] Sud[k, i]\), "\n", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[27]:="],

Cell["And for the y vector.", "Text"],

Cell[BoxData[{
    \(ClearTensorValues[yu[i]]\), "\n", 
    \(xu[i] yu[j] Sud[k, i]\), "\n", 
    \(\(% // ToArrayValues[]\) // MatrixForm\)}], "Input",
  CellLabel->"In[30]:="],

Cell["And for S.", "Text"],

Cell[BoxData[{
    \(ClearTensorValues[Sud[i, j]]\), "\n", 
    \(xu[i] yu[j] Sud[k, i]\), "\n", 
    \(% // ToArrayValues[]\)}], "Input",
  CellLabel->"In[33]:="],

Cell["Restore settings.", "Text"],

Cell[BoxData[
    \(ClearTensorShortcuts[{{x, y}, 1}, {S, 2}]\)], "Input",
  CellLabel->"In[36]:="],

Cell[BoxData[{
    \(DeclareBaseIndices[oldindices]\), "\[IndentingNewLine]", 
    \(Clear[oldindices]\)}], "Input",
  CellLabel->"In[37]:="]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"4.2 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 943}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{674, 474},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CommonDefaultFormatTypes->{"Output"->TraditionalForm},
StyleDefinitions -> "HelpBrowser.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Function?"->{
    Cell[1776, 53, 60, 1, 31, "ObjectName",
      CellTags->"Function?"],
    Cell[1839, 56, 852, 33, 72, "Usage",
      CellTags->"Function?"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Function?", 9083, 317}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 60, 1, 31, "ObjectName",
  CellTags->"Function?"],
Cell[1839, 56, 852, 33, 72, "Usage",
  CellTags->"Function?"],
Cell[2694, 91, 186, 6, 31, "MathCaption"],
Cell[2883, 99, 94, 2, 31, "MathCaption"],
Cell[2980, 103, 129, 3, 31, "MathCaption"],
Cell[3112, 108, 157, 5, 31, "MathCaption"],
Cell[3272, 115, 218, 4, 48, "MathCaption"],
Cell[3493, 121, 562, 22, 31, "MathCaption"],

Cell[CellGroupData[{
Cell[4080, 147, 34, 0, 40, "ExampleSection"],
Cell[4117, 149, 96, 2, 29, "Input"],
Cell[4216, 153, 34, 0, 25, "Text"],
Cell[4253, 155, 134, 3, 49, "Input"],
Cell[4390, 160, 99, 2, 29, "Input"],
Cell[4492, 164, 41, 0, 25, "Text"],
Cell[4536, 166, 428, 10, 99, "Input"],
Cell[4967, 178, 118, 3, 49, "Input"],
Cell[5088, 183, 119, 3, 25, "Text"],
Cell[5210, 188, 125, 3, 49, "Input"],
Cell[5338, 193, 219, 4, 42, "Text"],
Cell[5560, 199, 135, 3, 49, "Input"],
Cell[5698, 204, 214, 4, 42, "Text"],
Cell[5915, 210, 141, 3, 49, "Input"],
Cell[6059, 215, 102, 3, 25, "Text"],
Cell[6164, 220, 193, 4, 69, "Input"],
Cell[6360, 226, 88, 2, 25, "Text"],
Cell[6451, 230, 203, 4, 50, "Input"],
Cell[6657, 236, 96, 2, 25, "Text"],
Cell[6756, 240, 154, 3, 49, "Input"],
Cell[6913, 245, 138, 3, 49, "Input"],
Cell[7054, 250, 198, 4, 42, "Text"],
Cell[7255, 256, 138, 3, 49, "Input"],
Cell[7396, 261, 59, 0, 25, "Text"],
Cell[7458, 263, 159, 4, 69, "Input"],
Cell[7620, 269, 37, 0, 25, "Text"],
Cell[7660, 271, 177, 4, 69, "Input"],
Cell[7840, 277, 26, 0, 25, "Text"],
Cell[7869, 279, 163, 4, 69, "Input"],
Cell[8035, 285, 33, 0, 25, "Text"],
Cell[8071, 287, 99, 2, 29, "Input"],
Cell[8173, 291, 141, 3, 49, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

