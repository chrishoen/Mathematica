(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.1'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[      7755,        272]*)
(*NotebookOutlinePosition[      8762,        307]*)
(*  CellTagsIndexPosition[      8688,        301]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["TotalD", "ObjectName",
  CellTags->"Function?"],

Cell[TextData[{
  "\[FilledSmallSquare] ",
  Cell[BoxData[
      RowBox[{
        StyleBox["TotalD",
          "MR"], 
        StyleBox["[",
          "MR"], 
        StyleBox[\(f, t\),
          "TI"], 
        StyleBox["]",
          "MR"]}]]],
  " gives the total derivative of f with respect to t.\n\[FilledSmallSquare] \
",
  Cell[BoxData[
      RowBox[{
        StyleBox["TotalD",
          "MR"], 
        StyleBox["[",
          "MR"], 
        StyleBox[\(f, {t, v,  ... }\),
          "TI"], 
        StyleBox["]",
          "MR"]}]]],
  " gives multiple derivatives."
}], "Usage",
  CellTags->"Function?"],

Cell["\<\
 Tensors are funtions of the coordinates and any variation of the Tensor is \
due to the variation of the coordiates over the parameter of differentiation \
used.   Tensors are not allowed to depend on the parameters directly but only \
through the coordinates. See ExpandTotalD.\
\>", "MathCaption"],

Cell["\<\
 This derivative is ambiguous until we expand the partial derivative \
providing the specific coordinates using ExpandTotalD.\
\>", "MathCaption"],

Cell["\<\
 TotalD bears the same relation to AbsoluteD as PartialD does to CovariantD, \
i.e., it takes no notice of the metric.\
\>", "MathCaption"],

Cell["\<\
 Total derivative expressions are fully evaluated when a tensor is expanded \
to its components.\
\>", "MathCaption"],

Cell["\<\
 Total derivatives are formatted on output and can't be copied.\
\>", "MathCaption"],

Cell[TextData[{
  "See also: ",
  ButtonBox["ExpandTotalD",
    ButtonData:>{"ExpandTotalD"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["CovariantD",
    ButtonData:>{"CovariantD"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["PartialD",
    ButtonData:>{"PartialD"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["AbsoluteD",
    ButtonData:>{"AbsoluteD"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["SetDerivativeSymbols",
    ButtonData:>{"SetDerivativeSymbols"},
    ButtonStyle->"AddOnsLink"],
  "."
}], "MathCaption"],

Cell[CellGroupData[{

Cell["Examples", "ExampleSection"],

Cell[BoxData[
    \(Needs["\<TensorCalculus3`Tensorial`\>"]\)], "Input",
  CellLabel->"In[1]:="],

Cell["Save the Settings", "Text"],

Cell[BoxData[{
    \(\(oldindices = BaseIndices;\)\), "\[IndentingNewLine]", 
    \(\(oldflavors = IndexFlavors;\)\), "\n", 
    \(\(ClearIndexFlavor /@ oldflavors;\)\), "\[IndentingNewLine]", 
    \(DeclareIndexFlavor[{red, Red}]\)}], "Input",
  CellLabel->"In[2]:="],

Cell[BoxData[
    \(DefineTensorShortcuts[{{x, S, T}, 1}, {{S, T}, 2}]\)], "Input",
  CellLabel->"In[6]:="],

Cell["\<\
The total derivative works like a regular derivative, but allows the tensor \
formalism to be used. It is formatted on output but maintained with a TotalD \
header internally.\
\>", "Text"],

Cell[BoxData[{
    \(Su[i]\), "\[IndentingNewLine]", 
    \(TotalD[%, t]\), "\[IndentingNewLine]", 
    \(% // FullForm\)}], "Input",
  CellLabel->"In[7]:="],

Cell["Higher order derivatives can be performed.", "Text"],

Cell[BoxData[
    \(NestList[TotalD[#1, t] &, Su[m], 3]\)], "Input",
  CellLabel->"In[10]:="],

Cell["It can also be written...", "Text"],

Cell[BoxData[{
    \(Su[i]\), "\[IndentingNewLine]", 
    \(TotalD[%, {t, t, t}]\)}], "Input",
  CellLabel->"In[11]:="],

Cell["\<\
Or you can differentiate with respect to different variables.\
\>", "Text"],

Cell[BoxData[{
    \(Su[i]\), "\[IndentingNewLine]", 
    \(TotalD[%, {t, u, v}]\)}], "Input",
  CellLabel->"In[13]:="],

Cell["\<\
Here are the first two derivatives of a tensor contraction. Nothing extra has \
to be done to accommodate flavored expressions.\
\>", "Text"],

Cell[BoxData[{
    \(Td[m] Tu[m] // ToFlavor[red]\), "\[IndentingNewLine]", 
    \(TotalD[%, {t, t}]\)}], "Input",
  CellLabel->"In[15]:="],

Cell["With no arguments, we obtain a differential expression.", "Text"],

Cell[BoxData[{
    \(Td[m] Tu[m] // ToFlavor[red]\), "\[IndentingNewLine]", 
    \(TotalD[%]\)}], "Input",
  CellLabel->"In[17]:="],

Cell["\<\
Here, we define the coordinate functions to be moving on a helix. We set the \
attributes of a and b to be Constant.\
\>", "Text"],

Cell[BoxData[{
    \(SetTensorValues[xu[i], {a\ Cos[t], a\ Sin[t], b\ t}, 
      True]\), "\[IndentingNewLine]", 
    \(\(\(SetAttributes[#, Constant] &\) /@ {a, b};\)\)}], "Input",
  CellLabel->"In[19]:="],

Cell["Here is the vector expanded.", "Text"],

Cell[BoxData[{
    \(xu[i]\), "\[IndentingNewLine]", 
    \(% // EinsteinArray[]\)}], "Input",
  CellLabel->"In[21]:="],

Cell[TextData[{
  "When we use ",
  Cell[BoxData["TotalD"]],
  " and expand, we obtain the velocity vector."
}], "Text"],

Cell[BoxData[{
    \(xu[i]\), "\[IndentingNewLine]", 
    \(TotalD[%, t]\), "\[IndentingNewLine]", 
    \(% // EinsteinArray[]\)}], "Input",
  CellLabel->"In[23]:="],

Cell["The second derivative gives the acceleration.", "Text"],

Cell[BoxData[{
    \(xu[i]\), "\[IndentingNewLine]", 
    \(TotalD[%, {t, t}]\), "\[IndentingNewLine]", 
    \(% // EinsteinArray[]\), "\[IndentingNewLine]", 
    \(ClearTensorValues[xu[i]]\)}], "Input",
  CellLabel->"In[26]:="],

Cell[TextData[{
  Cell[BoxData[
      \(TotalD\)]],
  " will take derivatives of functions of components."
}], "Text"],

Cell[BoxData[
    \(\(\(\ \)\(Sin[xu[1]]^2\[IndentingNewLine]
    TotalD[%, {t, t}] // Expand\)\)\)], "Input",
  CellLabel->"In[30]:="],

Cell["Restore settings.", "Text"],

Cell[BoxData[{
    \(\(ClearTensorValues /@ {xu[i]};\)\), "\[IndentingNewLine]", 
    \(ClearTensorShortcuts[{{x, S, T}, 1}, {{S, T}, 2}]\)}], "Input",
  CellLabel->"In[32]:="],

Cell[BoxData[{
    \(DeclareBaseIndices[oldindices]\), "\[IndentingNewLine]", 
    \(\(ClearIndexFlavor /@ IndexFlavors;\)\), "\[IndentingNewLine]", 
    \(\(DeclareIndexFlavor /@ oldflavors;\)\), "\[IndentingNewLine]", 
    \(ClearAll[oldindices, oldflavors, metric, a, b]\)}], "Input",
  CellLabel->"In[34]:="]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.1 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 941}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{665, 474},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
CommonDefaultFormatTypes->{"Output"->TraditionalForm},
StyleDefinitions -> "HelpBrowser.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Function?"->{
    Cell[1776, 53, 53, 1, 41, "ObjectName",
      CellTags->"Function?"],
    Cell[1832, 56, 615, 26, 56, "Usage",
      CellTags->"Function?"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Function?", 8517, 292}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 53, 1, 41, "ObjectName",
  CellTags->"Function?"],
Cell[1832, 56, 615, 26, 56, "Usage",
  CellTags->"Function?"],
Cell[2450, 84, 310, 5, 75, "MathCaption"],
Cell[2763, 91, 156, 3, 58, "MathCaption"],
Cell[2922, 96, 149, 3, 41, "MathCaption"],
Cell[3074, 101, 127, 3, 41, "MathCaption"],
Cell[3204, 106, 94, 2, 41, "MathCaption"],
Cell[3301, 110, 556, 22, 41, "MathCaption"],

Cell[CellGroupData[{
Cell[3882, 136, 34, 0, 39, "ExampleSection"],
Cell[3919, 138, 96, 2, 29, "Input"],
Cell[4018, 142, 33, 0, 25, "Text"],
Cell[4054, 144, 268, 5, 89, "Input"],
Cell[4325, 151, 107, 2, 29, "Input"],
Cell[4435, 155, 199, 4, 42, "Text"],
Cell[4637, 161, 157, 4, 69, "Input"],
Cell[4797, 167, 58, 0, 25, "Text"],
Cell[4858, 169, 93, 2, 29, "Input"],
Cell[4954, 173, 41, 0, 25, "Text"],
Cell[4998, 175, 119, 3, 49, "Input"],
Cell[5120, 180, 85, 2, 25, "Text"],
Cell[5208, 184, 119, 3, 49, "Input"],
Cell[5330, 189, 151, 3, 42, "Text"],
Cell[5484, 194, 139, 3, 49, "Input"],
Cell[5626, 199, 71, 0, 25, "Text"],
Cell[5700, 201, 131, 3, 49, "Input"],
Cell[5834, 206, 140, 3, 25, "Text"],
Cell[5977, 211, 206, 4, 49, "Input"],
Cell[6186, 217, 44, 0, 25, "Text"],
Cell[6233, 219, 119, 3, 49, "Input"],
Cell[6355, 224, 120, 4, 25, "Text"],
Cell[6478, 230, 165, 4, 69, "Input"],
Cell[6646, 236, 61, 0, 25, "Text"],
Cell[6710, 238, 228, 5, 89, "Input"],
Cell[6941, 245, 118, 4, 25, "Text"],
Cell[7062, 251, 135, 3, 49, "Input"],
Cell[7200, 256, 33, 0, 25, "Text"],
Cell[7236, 258, 176, 3, 49, "Input"],
Cell[7415, 263, 312, 5, 89, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

