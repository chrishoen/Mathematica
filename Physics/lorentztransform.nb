(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    681060,      14630]
NotebookOptionsPosition[    663557,      14032]
NotebookOutlinePosition[    664060,      14051]
CellTagsIndexPosition[    664017,      14048]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialize", "Section",
 CellChangeTimes->{{3.39871069521875*^9, 3.3987107076875*^9}}],

Cell[CellGroupData[{

Cell["Packages etc.", "Subsection",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}, {
  3.412844706421875*^9, 3.41284471440625*^9}, {3.4181994788095026`*^9, 
  3.4181994873973885`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "\"\<VectorAnalysis`\>\""}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\\"VectorAnalysis`\\\"\\)\[NoBreak] is \
now obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.617961283883012*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "\"\<PhysicalConstants`\>\""}]], "Input",
 CellChangeTimes->{{3.3986138020471277`*^9, 3.3986138130302377`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\\"PhysicalConstants`\\\"\\)\[NoBreak] is \
now obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.617961284148212*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gamma", "Subsection",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}, {
  3.412844706421875*^9, 3.41284471440625*^9}, {3.4181994705333366`*^9, 
  3.4181994711879487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gamma", "=", 
   RowBox[{"1", "/", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["v", "2"], "/", 
       SuperscriptBox["c", "2"]}]}]]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vsq", "=", 
   RowBox[{
    SuperscriptBox["v", "2"], "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"\[Gamma]", "\[Equal]", "gamma"}], ",", "v"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", "v_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", "gamma", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"{", 
    RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "}"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"gamma", "/.", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["v", "2"], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], ")"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.41284587196875*^9, 3.412845921546875*^9}, {
  3.412846317015625*^9, 3.412846391265625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lorentz Transform", "Subsection",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}, {
  3.412844706421875*^9, 3.41284471440625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lorentz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "v"}], "/", "c"}], "  ", "\[Gamma]"}], ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "v"}], "/", "c"}], "  ", "\[Gamma]"}], ",", "\[Gamma]", 
       ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lorentzGeneral", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", 
       RowBox[{
        RowBox[{"-", "\[Beta]x"}], " ", "\[Gamma]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Beta]y"}], " ", "\[Gamma]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Beta]z"}], " ", "\[Gamma]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]x"}], " ", "\[Gamma]"}], ",", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "1"}], ")"}], 
         RowBox[{
          SuperscriptBox["\[Beta]x", "2"], "/", 
          SuperscriptBox["\[Beta]", "2"]}]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]x", " ", 
        RowBox[{"\[Beta]y", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]x", " ", 
        RowBox[{"\[Beta]z", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]y"}], " ", "\[Gamma]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]x", " ", 
        RowBox[{"\[Beta]y", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}], ",", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "1"}], ")"}], 
         RowBox[{
          SuperscriptBox["\[Beta]y", "2"], "/", 
          SuperscriptBox["\[Beta]", "2"]}]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]z", " ", 
        RowBox[{"\[Beta]y", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]z"}], " ", "\[Gamma]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]x", " ", 
        RowBox[{"\[Beta]z", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "1"}], ")"}], "\[Beta]z", " ", 
        RowBox[{"\[Beta]y", "/", 
         SuperscriptBox["\[Beta]", "2"]}]}], ",", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "1"}], ")"}], 
         RowBox[{
          SuperscriptBox["\[Beta]z", "2"], "/", 
          SuperscriptBox["\[Beta]", "2"]}]}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.412844739765625*^9, 3.41284476975*^9}, {
  3.412844848765625*^9, 3.412844851515625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lor", "[", "v_", "]"}], ":=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"lorentz", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"\[Gamma]", "[", "v", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lor", "[", 
   RowBox[{"{", 
    RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "}"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"lorentzGeneral", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]x", "\[Rule]", 
       RowBox[{"vx", "/", "c"}]}], ",", 
      RowBox[{"\[Beta]y", "\[Rule]", 
       RowBox[{"vy", "/", "c"}]}], ",", 
      RowBox[{"\[Beta]z", "\[Rule]", 
       RowBox[{"vz", "/", "c"}]}], ",", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"\[Beta]", ",", 
         RowBox[{"-", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "2"], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], ")"}]}], ")"}]}], 
      ",", 
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"{", 
         RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.412844917546875*^9, 3.412844993984375*^9}, {
   3.412845788203125*^9, 3.412845812859375*^9}, {3.4128464936875*^9, 
   3.412846648484375*^9}, {3.41284686653125*^9, 3.4128468675625*^9}, 
   3.4128469360625*^9, {3.4128469814375*^9, 3.412847023546875*^9}, {
   3.412847454921875*^9, 3.412847458515625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minkowski Norm", "Subsection",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}, {
  3.412844706421875*^9, 3.41284471440625*^9}, {3.4181994568488283`*^9, 
  3.4181994604959526`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mink", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ct1_", ",", "x1_", ",", "y1_", ",", "z1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ct2_", ",", "x2_", ",", "y2_", ",", "z2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ct1", " ", "ct2"}], "-", 
   RowBox[{"x1", " ", "x2"}], "-", 
   RowBox[{"y1", " ", "y2"}], "-", 
   RowBox[{"z1", " ", "z2"}]}]}]], "Input",
 CellChangeTimes->{{3.4180583895*^9, 3.41805844978125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mink", "[", 
   RowBox[{"{", 
    RowBox[{"ct1_", ",", "x1_", ",", "y1_", ",", "z1_"}], "}"}], "]"}], ":=", 
  RowBox[{"mink", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ct1", ",", "x1", ",", "y1", ",", "z1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ct1", ",", "x1", ",", "y1", ",", "z1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.41347683096875*^9, 3.413476895625*^9}, {
  3.41347698428125*^9, 3.41347698828125*^9}, {3.4180584815*^9, 
  3.418058501125*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Velocities", "Subsection",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}, {
  3.412844706421875*^9, 3.41284471440625*^9}, {3.418199450863805*^9, 
  3.4181994528276405`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vel4", "[", "v3_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"Norm", "[", "v3", "]"}], "]"}], " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"v3", ",", "c"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.3986141169810686`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vel3", "[", "v4_", "]"}], ":=", 
  RowBox[{"c", " ", 
   RowBox[{
    RowBox[{"Rest", "[", "v4", "]"}], "/", 
    RowBox[{"First", "[", "v4", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.398697517683421*^9, 3.3986975181991777`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["temp", "Section"]], "Section",
 CellChangeTimes->{{3.412791375078125*^9, 3.412791375828125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Gamma]", "[", 
  RowBox[{".6", " ", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.412871744203125*^9, 3.412871782828125*^9}, {
  3.421223865262355*^9, 3.421223870744755*^9}, {3.507136241984375*^9, 
  3.507136246296875*^9}}],

Cell[BoxData["1.25`"], "Output",
 CellChangeTimes->{{3.412871752203125*^9, 3.412871783578125*^9}, 
   3.4212238713243227`*^9, 3.48139639508775*^9, 3.481462885249669*^9, 
   3.4815292426150255`*^9, 3.481549547734857*^9, 3.482501166655345*^9, 
   3.482511285928625*^9, 3.482568235045148*^9, 3.482578499740404*^9, 
   3.4825792591561365`*^9, 3.4826046703575*^9, 3.4885850995652366`*^9, 
   3.4893423886956253`*^9, 3.48934445309087*^9, 3.4893999365611954`*^9, 
   3.4895735482866755`*^9, 3.492073016578125*^9, 3.5010745342226334`*^9, 
   3.5012457597788324`*^9, 3.50127248397775*^9, 3.5042220820637503`*^9, {
   3.507136236265625*^9, 3.507136246890625*^9}, 3.507885601635827*^9, 
   3.5218765870290227`*^9, {3.5219224681873927`*^9, 3.5219224750623927`*^9}, 
   3.522870107051*^9, 3.6179612850218134`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problems", "Section",
 CellChangeTimes->{{3.398710774*^9, 3.39871078125*^9}}],

Cell[CellGroupData[{

Cell["Twin paradox", "Subsection",
 CellChangeTimes->{{3.398710784296875*^9, 3.398710784953125*^9}, {
  3.42062121146875*^9, 3.4206212179375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a0", "=", 
   RowBox[{"b0", "=", 
    RowBox[{"c0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{"1.5625`", 
    RowBox[{"{", 
     RowBox[{"10", ",", "6", ",", "0", ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", "=", 
   RowBox[{"1.5625`", 
    RowBox[{"{", 
     RowBox[{"10", ",", "6", ",", "0", ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "=", 
   RowBox[{"1.5625`", 
    RowBox[{"{", 
     RowBox[{"10", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.420621266609375*^9, 3.4206212891875*^9}, {
  3.42062162828125*^9, 3.420621707265625*^9}, {3.420622291984375*^9, 
  3.420622294109375*^9}, {3.420622459734375*^9, 3.420622501390625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"a1", "-", "a0"}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"a2", "-", "a1"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.420625255859375*^9, 3.420625288484375*^9}}],

Cell[BoxData["15.625`"], "Output",
 CellChangeTimes->{3.42062529003125*^9, 3.6179612850374136`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"b1", "-", "b0"}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"b2", "-", "b1"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.420625255859375*^9, 3.420625303703125*^9}}],

Cell[BoxData["10.`"], "Output",
 CellChangeTimes->{{3.42062529003125*^9, 3.420625304671875*^9}, 
   3.6179612850374136`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"c1", "-", "c0"}], "]"}]], "+", 
  SqrtBox[
   RowBox[{"mink", "[", 
    RowBox[{"c2", "-", "c1"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.420625255859375*^9, 3.420625313*^9}}],

Cell[BoxData["12.5`"], "Output",
 CellChangeTimes->{{3.42062529003125*^9, 3.4206253140625*^9}, 
   3.617961285053014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"a0", ",", "a1", ",", "a2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"b0", ",", "b1", ",", "b2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"c0", ",", "c1", ",", "c2"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "3", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.420621604546875*^9, 3.42062162690625*^9}, {
  3.420621749859375*^9, 3.420621755875*^9}, {3.420621828578125*^9, 
  3.420621870015625*^9}, {3.420621914046875*^9, 3.420622000640625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], LineBox[{{0., 0.}, {0., 5.}, {0., 15.625}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], LineBox[{{0., 0.}, {0., 5.}, {9.375, 15.625}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], 
     LineBox[{{0., 0.}, {3., 5.}, {9.375, 15.625}}]}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 9.375}, {0, 15.625}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617961285209014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lor", "[", 
             RowBox[{".6", " ", "c"}], "]"}], ".", "#"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"a0", ",", "a1", ",", "a2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lor", "[", 
             RowBox[{".6", " ", "c"}], "]"}], ".", "#"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"b0", ",", "b1", ",", "b2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lor", "[", 
             RowBox[{".6", " ", "c"}], "]"}], ".", "#"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"c0", ",", "c1", ",", "c2"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "3", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4206221194375*^9, 3.420622144078125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], 
     LineBox[{{0., 0.}, {-3.75, 6.25}, {-11.71875, 19.53125}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], LineBox[{{0., 0.}, {-3.75, 6.25}, {0., 12.5}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[3], LineBox[{{0., 0.}, {0., 4.}, {0., 12.5}}]}}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-11.71875, 0}, {0, 19.53125}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6179612852402143`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relative Velocities", "Subsection",
 CellChangeTimes->{{3.398710784296875*^9, 3.398710784953125*^9}, {
  3.409229994921875*^9, 3.40923001078125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Va", "=", 
  RowBox[{"vel4", "[", 
   RowBox[{"{", 
    RowBox[{"v", " ", ",", "0", ",", "0"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409230044203125*^9, 3.40923009853125*^9}, {
   3.409230149*^9, 3.4092301571875*^9}, 3.409230839828125*^9, {
   3.409231121953125*^9, 3.409231122796875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["c", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Abs", "[", "v", "]"}], "2"], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["v", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Abs", "[", "v", "]"}], "2"], 
       SuperscriptBox["c", "2"]]}]]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.4092300934375*^9, 3.40923009959375*^9}, 
   3.409230157734375*^9, 3.40923112421875*^9, 3.617961285255814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vb", "=", 
  RowBox[{"vel4", "[", 
   RowBox[{"{", 
    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409230166734375*^9, 3.409230200765625*^9}, {
  3.409230845671875*^9, 3.4092308530625*^9}, {3.40923112728125*^9, 
  3.409231127921875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["c", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["vx", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["vy", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   FractionBox["vz", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
       SuperscriptBox["c", "2"]]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.409230188046875*^9, 3.409230201453125*^9}, 
   3.409230854515625*^9, 3.409231128765625*^9, 3.617961285255814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"La", "=", 
  RowBox[{"lor", "[", "v", "]"}]}]], "Input",
 CellChangeTimes->{{3.409230418421875*^9, 3.4092304423125*^9}, {
  3.40923087303125*^9, 3.409230873390625*^9}, {3.4092311318125*^9, 
  3.409231132578125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["v", "2"], 
         SuperscriptBox["c", "2"]]}]]], ",", 
     RowBox[{"-", 
      FractionBox["v", 
       RowBox[{"c", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["c", "2"]]}]]}]]}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["v", 
       RowBox[{"c", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["c", "2"]]}]]}]]}], ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["v", "2"], 
         SuperscriptBox["c", "2"]]}]]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.409230426984375*^9, 3.409230443734375*^9}, 
   3.4092308741875*^9, 3.4092311331875*^9, 3.617961285271414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"mink", "[", "#", "]"}], ",", 
      RowBox[{"vel3", "[", "#", "]"}]}], "}"}], "&"}], "[", 
   RowBox[{"La", ".", "Vb"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.409230609015625*^9, 3.409230713984375*^9}, {
  3.409230899296875*^9, 3.409230900453125*^9}, {3.40923113746875*^9, 
  3.409231138265625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["c", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["c", "2"]]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
           SuperscriptBox["c", "2"]]}]]}]], "-", 
      FractionBox[
       RowBox[{"v", " ", "vx"}], 
       RowBox[{"c", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["c", "2"]]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
           SuperscriptBox["c", "2"]]}]]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["v", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]]}], "+", 
      FractionBox["vx", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["c", "2"]]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
           SuperscriptBox["c", "2"]]}]]}]]}], ",", 
     FractionBox["vy", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
         SuperscriptBox["c", "2"]]}]]], ",", 
     FractionBox["vz", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
         SuperscriptBox["c", "2"]]}]]]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["vy", "2"], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
        SuperscriptBox["c", "2"]]}]]}], "-", 
    FractionBox[
     SuperscriptBox["vz", "2"], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
       SuperscriptBox["c", "2"]]}]], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["v", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             SuperscriptBox["v", "2"], 
             SuperscriptBox["c", "2"]]}]], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
             SuperscriptBox["c", "2"]]}]]}]]}], "+", 
       FractionBox["vx", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["c", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]], "-", 
       FractionBox[
        RowBox[{"v", " ", "vx"}], 
        RowBox[{"c", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]]}], ")"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["v", 
           RowBox[{
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               SuperscriptBox["v", "2"], 
               SuperscriptBox["c", "2"]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
               SuperscriptBox["c", "2"]]}]]}]]}], "+", 
         FractionBox["vx", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox["v", "2"], 
              SuperscriptBox["c", "2"]]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
              SuperscriptBox["c", "2"]]}]]}]]}], ")"}]}], 
      RowBox[{
       FractionBox["c", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]], "-", 
       FractionBox[
        RowBox[{"v", " ", "vx"}], 
        RowBox[{"c", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["c", "2"]]}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
            SuperscriptBox["c", "2"]]}]]}]]}]], ",", 
     FractionBox[
      RowBox[{"c", " ", "vy"}], 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
          SuperscriptBox["c", "2"]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["c", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox["v", "2"], 
              SuperscriptBox["c", "2"]]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
              SuperscriptBox["c", "2"]]}]]}]], "-", 
         FractionBox[
          RowBox[{"v", " ", "vx"}], 
          RowBox[{"c", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox["v", "2"], 
              SuperscriptBox["c", "2"]]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
              SuperscriptBox["c", "2"]]}]]}]]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"c", " ", "vz"}], 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
          SuperscriptBox["c", "2"]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["c", 
          RowBox[{
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox["v", "2"], 
              SuperscriptBox["c", "2"]]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
              SuperscriptBox["c", "2"]]}]]}]], "-", 
         FractionBox[
          RowBox[{"v", " ", "vx"}], 
          RowBox[{"c", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox["v", "2"], 
              SuperscriptBox["c", "2"]]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", "vx", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vy", "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", "vz", "]"}], "2"]}], 
              SuperscriptBox["c", "2"]]}]]}]]}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.40923065878125*^9, 3.409230714890625*^9}, {
   3.40923088309375*^9, 3.409230902390625*^9}, 3.409231138984375*^9, 
   3.617961285302614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"tmp", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.40923090378125*^9, 3.40923091934375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "v"}], "+", "vx"}], ")"}]}], 
    RowBox[{
     SuperscriptBox["c", "2"], "-", 
     RowBox[{"v", " ", "vx"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        SuperscriptBox["v", "2"], 
        SuperscriptBox["c", "2"]]}]], " ", "vy"}], 
    RowBox[{
     SuperscriptBox["c", "2"], "-", 
     RowBox[{"v", " ", "vx"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        SuperscriptBox["v", "2"], 
        SuperscriptBox["c", "2"]]}]], " ", "vz"}], 
    RowBox[{
     SuperscriptBox["c", "2"], "-", 
     RowBox[{"v", " ", "vx"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.409230908546875*^9, 3.40923092128125*^9}, {
   3.409230993953125*^9, 3.409231023390625*^9}, 3.409231141546875*^9, 
   3.6179612854586143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tmp", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{
     SuperscriptBox["v", "2"], "\[Rule]", "vsq"}]}], ",", 
   RowBox[{"\[Gamma]", ">", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.40923099540625*^9, 3.40923106009375*^9}, {
  3.4092311125625*^9, 3.409231113515625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "v"}], "+", "vx"}], ")"}]}], 
    RowBox[{
     SuperscriptBox["c", "2"], "-", 
     RowBox[{"v", " ", "vx"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", "vy"}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["c", "2"], " ", "\[Gamma]"}], "-", 
     RowBox[{"v", " ", "vx", " ", "\[Gamma]"}]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", "vz"}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["c", "2"], " ", "\[Gamma]"}], "-", 
     RowBox[{"v", " ", "vx", " ", "\[Gamma]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.409231005328125*^9, 3.409231061078125*^9}, 
   3.409231151703125*^9, 3.6179612855054145`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativistic rolling", "Subsection",
 CellChangeTimes->{{3.4193542729747734`*^9, 3.4193542753609457`*^9}, {
  3.4193545064850397`*^9, 3.4193545077662077`*^9}}],

Cell[CellGroupData[{

Cell["Relativistic bike tire", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", "0"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[Rule]", "1"}], ",", 
      RowBox[{"t", "\[Rule]", 
       RowBox[{"\[Theta]", "/", "\[Omega]"}]}]}], "}"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"lor", "[", 
       RowBox[{
        RowBox[{"-", "r"}], " ", "\[Omega]"}], "]"}], ".", "s"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "\[Rule]", "1"}], ",", 
       RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"s", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{"s", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}]}], ")"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617961285677015*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"sp", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{"sp", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", "\[Rule]", "0"}], "}"}]}], ")"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], 
    RowBox[{"\[Omega]", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Omega]", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179612856926146`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"Dt", "[", 
     RowBox[{"s", ",", "\[Tau]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Dt", "[", 
        RowBox[{"\[Omega]", ",", "\[Tau]"}], "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"Dt", "[", 
        RowBox[{"\[Phi]", ",", "\[Tau]"}], "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"Dt", "[", 
        RowBox[{"\[Theta]", ",", "\[Tau]"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"\[Omega]", " ", "c"}], "]"}], " ", "\[Omega]"}]}]}], 
     "}"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"up", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"lor", "[", 
       RowBox[{
        RowBox[{"-", "r"}], " ", "\[Omega]"}], "]"}], ".", "u"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "\[Rule]", "1"}], ",", 
       RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simult", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"mink", "[", 
      RowBox[{"u", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}], "-", "s"}]}], 
      "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]", "+", 
   RowBox[{"y", " ", 
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], "\[Equal]", 
  RowBox[{"\[Omega]", " ", 
   RowBox[{"(", 
    RowBox[{"t", "+", 
     RowBox[{"x", " ", "\[Omega]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.617961286301016*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thetasimul", "[", 
   RowBox[{
   "\[Omega]in_", ",", "\[Theta]a_", ",", "\[Phi]a_", ",", "\[Phi]b_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"simula", ",", "worldb"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simula", "=", 
      RowBox[{"simult", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]", "\[Rule]", "\[Omega]in"}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", "\[Theta]a"}], ",", 
         RowBox[{"\[Phi]", "\[Rule]", "\[Phi]a"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"worldb", "=", 
      RowBox[{"s", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]", "\[Rule]", "\[Omega]in"}], ",", 
         RowBox[{"\[Phi]", "\[Rule]", "\[Phi]b"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"simula", "=", 
      RowBox[{"simula", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "\[Rule]", 
          RowBox[{"worldb", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"worldb", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"y", "\[Rule]", 
          RowBox[{"worldb", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"simula", ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Theta]a"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thetasimul", "[", 
  RowBox[{".9", ",", "0.", ",", 
   RowBox[{"0.", "\[Degree]"}], ",", 
   RowBox[{"5.", "\[Degree]"}]}], "]"}]], "Input"],

Cell[BoxData["0.323277889474838`"], "Output",
 CellChangeTimes->{3.6179612865038157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thetasimul", "[", 
  RowBox[{".9", ",", "%", " ", ",", 
   RowBox[{"5.", "\[Degree]"}], ",", 
   RowBox[{"10.", "\[Degree]"}]}], "]"}]], "Input"],

Cell[BoxData["0.6465557789496763`"], "Output",
 CellChangeTimes->{3.6179612865038157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thetasimul", "[", 
  RowBox[{".9", ",", "%", ",", 
   RowBox[{"10.", "\[Degree]"}], ",", 
   RowBox[{"0.", "\[Degree]"}]}], "]"}]], "Input"],

Cell[BoxData["0.13074760113077688`"], "Output",
 CellChangeTimes->{3.617961286519416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thetasimul", "[", 
  RowBox[{".9", ",", "0.", ",", 
   RowBox[{"0.", "\[Degree]"}], ",", 
   RowBox[{"10.", "\[Degree]"}]}], "]"}]], "Input"],

Cell[BoxData["0.5158081778188995`"], "Output",
 CellChangeTimes->{3.617961286519416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"ArcLengthFactor", "[", 
       RowBox[{
        RowBox[{"Rest", "[", "s", "]"}], ",", "\[Phi]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dt", "[", 
          RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"Dt", "[", 
          RowBox[{"\[Omega]", ",", "\[Phi]"}], "]"}], "\[Rule]", "0"}]}], 
       "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6179612865506163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "u", "]"}], 
       RowBox[{"ArcLengthFactor", "[", 
        RowBox[{
         RowBox[{"Rest", "[", "s", "]"}], ",", "\[Phi]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dt", "[", 
          RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"Dt", "[", 
          RowBox[{"\[Omega]", ",", "\[Phi]"}], "]"}], "\[Rule]", "0"}]}], 
       "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]"}], 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox["\[Omega]", "2"]}]]]], "Output",
 CellChangeTimes->{3.6179612865662165`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", "\[Phi]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6179612866286163`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[Theta]"}], "-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"-", 
        FractionBox["\[Theta]", 
         SuperscriptBox["\[Omega]", "2"]]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[Theta]"}], "+", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"-", 
        FractionBox["\[Theta]", 
         SuperscriptBox["\[Omega]", "2"]]}], "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179612866286163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sp", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "/.", "sol"}], "/.", 
     RowBox[{"\[Omega]", "\[Rule]", ".9"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", 
      SuperscriptBox[".9", "2"]}], ",", 
     SuperscriptBox[".9", "2"]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
VQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.43588989435406733`, 
   0.43588989435406733`}, {-0.9999999881591171, 0.9999999881591171}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617961287595818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"2", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcLengthFactor", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rest", "[", "sp", "]"}], "/.", 
            RowBox[{"sol", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[Theta]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dt", "[", 
            RowBox[{"\[Omega]", ",", "\[Theta]"}], "]"}], "\[Rule]", "0"}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"-", 
       SuperscriptBox["\[Omega]", "2"]}], ",", 
      SuperscriptBox["\[Omega]", "2"]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox["\[Omega]", "2"]}]], " ", 
  RowBox[{"EllipticE", "[", 
   FractionBox[
    SuperscriptBox["\[Omega]", "2"], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], "]"}]}]], "Output",
 CellChangeTimes->{3.617961292556627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int", "/.", 
  RowBox[{"\[Omega]", "\[Rule]", ".9"}]}]], "Input"],

Cell[BoxData["4.686788211126456`"], "Output",
 CellChangeTimes->{3.617961292759427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "1"}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"1", "/", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{".9", "c"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", "=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"a", "-", "b"}], ")"}], "2"], "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"a", "+", "b"}], ")"}], "2"]}]}], "}"}], ",", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", 
         RowBox[{"h", "/", 
          RowBox[{"(", 
           RowBox[{"10", "+", 
            SqrtBox[
             RowBox[{"4", "-", 
              RowBox[{"3", "h"}]}]]}], ")"}]}]}]}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData["4.686788199302943`"], "Output",
 CellChangeTimes->{3.6179612927750273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", " ", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"up", "/.", 
            RowBox[{"sol", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
          RowBox[{"ArcLengthFactor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Rest", "[", "sp", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[Theta]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dt", "[", 
            RowBox[{"\[Omega]", ",", "\[Theta]"}], "]"}], "\[Rule]", "0"}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}], "]"}], "+", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"up", "/.", 
            RowBox[{"sol", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], 
          RowBox[{"ArcLengthFactor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Rest", "[", "sp", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[Theta]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dt", "[", 
            RowBox[{"\[Omega]", ",", "\[Theta]"}], "]"}], "\[Rule]", "0"}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"-", 
       SuperscriptBox["\[Omega]", "2"]}], ",", 
      SuperscriptBox["\[Omega]", "2"]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", "<", "\[Omega]", "<", "1"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"EllipticE", "[", 
    FractionBox[
     SuperscriptBox["\[Omega]", "2"], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Omega]", "2"]}]], "]"}]}], 
  SqrtBox[
   RowBox[{"1", "-", 
    SuperscriptBox["\[Omega]", "2"]}]]]], "Output",
 CellChangeTimes->{3.6179612953178315`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int", "/.", 
  RowBox[{"\[Omega]", "\[Rule]", ".9"}]}]], "Input"],

Cell[BoxData["24.667306374349774`"], "Output",
 CellChangeTimes->{3.617961295536232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "\[Pi]", " ", 
  RowBox[{"\[Gamma]", "[", 
   RowBox[{".9", " ", "c"}], "]"}]}]], "Input"],

Cell[BoxData["14.414615682913361`"], "Output",
 CellChangeTimes->{3.617961295536232*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relativistic bike tire2", "Subsubsection",
 CellChangeTimes->{3.417973380225542*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", " ", "t"}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", "0"}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.417973393959857*^9, 3.4179734134672403`*^9}, {
  3.41805769146875*^9, 3.418057701296875*^9}, {3.42014361120475*^9, 
  3.420143614564125*^9}, {3.420155087251625*^9, 3.42015508739225*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.617961295551832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Dt", "[", 
     RowBox[{"s", ",", "\[Tau]", ",", 
      RowBox[{"Constants", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "\[Phi]"}], "}"}]}]}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dt", "[", 
       RowBox[{"t", ",", "\[Tau]", ",", 
        RowBox[{"Constants", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
       "]"}], "\[Rule]", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4179736886737676`*^9, 3.417973694733182*^9}, {
  3.417973731027359*^9, 3.4179737408408055`*^9}, {3.4179737754371004`*^9, 
  3.4179738135849285`*^9}, {3.4179738877932806`*^9, 3.4179738883540487`*^9}, {
  3.418057749078125*^9, 3.41805775575*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Omega]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Omega]", "2"]}]]]}], ",", 
   FractionBox[
    RowBox[{"\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.617961295551832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"u", "\[Equal]", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"D", "[", 
       RowBox[{"s", ",", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}], "]"}]]]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42015635707975*^9, 3.420156364501625*^9}, {
  3.420156522751625*^9, 3.420156525095375*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.617961295598632*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Dt", "[", 
     RowBox[{"u", ",", "\[Tau]", ",", 
      RowBox[{"Constants", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "\[Phi]"}], "}"}]}]}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dt", "[", 
       RowBox[{"t", ",", "\[Tau]", ",", 
        RowBox[{"Constants", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
       "]"}], "\[Rule]", 
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.41805810471875*^9, 3.41805814065625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.617961295614232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"a", "\[Equal]", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"D", "[", 
       RowBox[{"u", ",", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}], "]"}]]]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.420156477032875*^9, 3.42015648145475*^9}, {
  3.420156539751625*^9, 3.420156563689125*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.617961295645432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"mink", "[", "u", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.417973890784045*^9, 3.4179739019371057`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.617961295645432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mink", "[", 
  RowBox[{"u", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.4180585594375*^9, 3.418058567609375*^9}, 
   3.418058598703125*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6179612956610317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sp", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lor", "[", 
      RowBox[{
       RowBox[{"-", "r"}], " ", "\[Omega]"}], "]"}], ".", "s"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.417973408377008*^9, 3.4179734201714478`*^9}, {
  3.418057721921875*^9, 3.41805772578125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"t", "+", 
     RowBox[{"\[Omega]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"t", " ", "\[Omega]"}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "+", 
     RowBox[{"t", " ", "\[Omega]"}]}], "]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6179612958014326`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"D", "[", 
      RowBox[{"sp", ",", "t"}], "]"}]}], 
    SqrtBox[
     RowBox[{"mink", "[", 
      RowBox[{"D", "[", 
       RowBox[{"sp", ",", "t"}], "]"}], "]"}]]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.420156413595375*^9, 3.420156415720375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", 
   FractionBox[
    RowBox[{"\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", 
   FractionBox[
    RowBox[{"\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6179612958482323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"up", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"sp", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "\[Phi]"}], "}"}]}]}], 
      "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dt", "[", 
        RowBox[{"t", ",", "\[Tau]", ",", 
         RowBox[{"Constants", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}],
         "]"}], "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4179736886737676`*^9, 3.417973694733182*^9}, {
  3.417973731027359*^9, 3.4179737408408055`*^9}, {3.4179737754371004`*^9, 
  3.4179738135849285`*^9}, {3.4179738877932806`*^9, 3.4179738883540487`*^9}, {
  3.418057749078125*^9, 3.41805775575*^9}, {3.4180586479375*^9, 
  3.418058666953125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", 
   FractionBox[
    RowBox[{"\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", 
   FractionBox[
    RowBox[{"\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Omega]", "2"]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.617961295973033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"up", "\[Equal]", 
    RowBox[{
     RowBox[{"lor", "[", 
      RowBox[{
       RowBox[{"-", "r"}], " ", "\[Omega]"}], "]"}], ".", "u"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.418058688484375*^9, 3.418058691875*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.617961296004233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ap", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"up", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "\[Phi]"}], "}"}]}]}], 
      "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dt", "[", 
        RowBox[{"t", ",", "\[Tau]", ",", 
         RowBox[{"Constants", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}],
         "]"}], "\[Rule]", 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.41805810471875*^9, 3.41805814065625*^9}, {
  3.418058704890625*^9, 3.418058717421875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]", "3"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Omega]", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Omega]", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.617961296144633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ap", "\[Equal]", 
    RowBox[{
     RowBox[{"lor", "[", 
      RowBox[{
       RowBox[{"-", "r"}], " ", "\[Omega]"}], "]"}], ".", "a"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"r", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4179741338423433`*^9, 3.417974144058837*^9}, {
  3.41805874146875*^9, 3.41805877640625*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.617961296160233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "tp"}], ",", "\[Phi]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.418060476453125*^9, 3.418060490421875*^9}, {
  3.41806066965625*^9, 3.418060674921875*^9}, {3.418061966171875*^9, 
  3.4180619673125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "t"}], " ", "\[Omega]"}], "-", 
        RowBox[{"ArcCos", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "t"}], "+", 
           RowBox[{"tp", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], "]"}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "t"}], " ", "\[Omega]"}], "+", 
        RowBox[{"ArcCos", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "t"}], "+", 
           RowBox[{"tp", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], "]"}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.617961296191433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spsol", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"sp", "/.", "sol"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.41806101703125*^9, 3.418061077015625*^9}, {
   3.418061176390625*^9, 3.418061198921875*^9}, 3.418061287046875*^9, {
   3.4180613669375*^9, 3.418061367734375*^9}, {3.4182003768748226`*^9, 
   3.418200378152875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{"tp", ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"tp", "-", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"ArcCos", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "t"}], "+", 
             RowBox[{"tp", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], "]"}], 
          "-", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{"tp", ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"tp", "-", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"ArcSin", "[", 
          FractionBox[
           RowBox[{"t", "-", 
            RowBox[{"tp", " ", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["\[Omega]", "2"]}]]}]}], "\[Omega]"], "]"}], 
         "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}], 
     ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6179612978294363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trange", "=", 
  RowBox[{"t", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t", "-", 
          RowBox[{"tp", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["\[Omega]", "2"]}]]}]}], ")"}], "2"], 
       SuperscriptBox["\[Omega]", "2"]], "==", " ", "1"}], ",", "t"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.418200415964511*^9, 3.4182004340286846`*^9}, {
  3.4182004808334427`*^9, 3.4182005686449666`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Omega]"}], "+", 
    RowBox[{"tp", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Omega]", "2"]}]]}]}], ",", 
   RowBox[{"\[Omega]", "+", 
    RowBox[{"tp", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Omega]", "2"]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.617961297891836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "\[Rule]", ".9"}], ",", 
     RowBox[{"tp", "\[Rule]", "0"}]}], "}"}]}], ";", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"spsol", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "/.", "tmp"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"trange", "/.", "tmp"}], ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"AbsoluteThickness", "[", "4", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "t"}], "}"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", ">", "0"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{".18", "+", 
              FractionBox["\[Phi]", 
               RowBox[{" ", 
                RowBox[{"30.", " ", "\[Degree]"}]}]]}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "/.", "tmp"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{".18", "+", 
              FractionBox["\[Phi]", 
               RowBox[{" ", 
                RowBox[{"30.", " ", "\[Degree]"}]}]]}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "/.", "tmp"}], "]"}]}], "]"}],
         "]"}]}], "]"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "360"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4182006400444326`*^9, 3.4182006872076683`*^9}, {
   3.418200734074771*^9, 3.4182007971980705`*^9}, {3.4182009055987005`*^9, 
   3.4182009416335325`*^9}, {3.4182009773722305`*^9, 
   3.4182010007668166`*^9}, {3.4182010799904547`*^9, 
   3.4182011302397184`*^9}, {3.418201202247039*^9, 3.4182012249402547`*^9}, {
   3.4182012557693624`*^9, 3.4182012847125645`*^9}, 3.4182013164300747`*^9, {
   3.4182013472903547`*^9, 3.4182013480540686`*^9}, 3.4182022562502885`*^9, {
   3.4182022992832346`*^9, 3.4182023061099024`*^9}, {3.4182043236352415`*^9, 
   3.4182043269257946`*^9}, {3.418216784523447*^9, 3.4182168125902185`*^9}, {
   3.4182170626410565`*^9, 3.418217136328065*^9}, {3.4182175961913157`*^9, 
   3.4182177198008804`*^9}, {3.4182178203343654`*^9, 
   3.4182178399529448`*^9}, {3.418217898370628*^9, 3.41821796662889*^9}, {
   3.4182180475750856`*^9, 3.4182181692134056`*^9}, 3.418218233748205*^9, {
   3.4186606645576496`*^9, 3.418660666495199*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617961298001036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "\[Rule]", ".9"}], ",", 
     RowBox[{"tp", "\[Rule]", "1"}]}], "}"}]}], ";", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"spsol", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "/.", "tmp"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"trange", "/.", "tmp"}], ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"AbsoluteThickness", "[", "4", "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "t"}], "}"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y", ">", "0"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{".18", "+", 
              FractionBox["\[Phi]", 
               RowBox[{" ", 
                RowBox[{"30.", " ", "\[Degree]"}]}]]}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "/.", "tmp"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{".18", "+", 
              FractionBox["\[Phi]", 
               RowBox[{" ", 
                RowBox[{"30.", " ", "\[Degree]"}]}]]}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "/.", "tmp"}], "]"}]}], "]"}],
         "]"}]}], "]"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "360"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4182006400444326`*^9, 3.4182006872076683`*^9}, {
   3.418200734074771*^9, 3.4182007971980705`*^9}, {3.4182009055987005`*^9, 
   3.4182009416335325`*^9}, {3.4182009773722305`*^9, 
   3.4182010007668166`*^9}, {3.4182010799904547`*^9, 
   3.4182011302397184`*^9}, {3.418201202247039*^9, 3.4182012249402547`*^9}, {
   3.4182012557693624`*^9, 3.4182012847125645`*^9}, 3.4182013164300747`*^9, {
   3.4182013472903547`*^9, 3.4182013480540686`*^9}, 3.4182022562502885`*^9, {
   3.4182022992832346`*^9, 3.4182023061099024`*^9}, {3.4182043236352415`*^9, 
   3.4182043269257946`*^9}, {3.418216784523447*^9, 3.4182168125902185`*^9}, {
   3.4182170626410565`*^9, 3.418217136328065*^9}, {3.4182175961913157`*^9, 
   3.4182177198008804`*^9}, {3.4182178203343654`*^9, 
   3.4182178399529448`*^9}, {3.418217898370628*^9, 3.41821796662889*^9}, {
   3.4182180475750856`*^9, 3.4182181692134056`*^9}, {3.418218233748205*^9, 
   3.418218253288561*^9}, {3.41866065090105*^9, 3.4186606509635515`*^9}, {
   3.4186606813393292`*^9, 3.418660682886244*^9}, {3.4186615098136625`*^9, 
   3.418661522970249*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6179612980946364`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativistic barbell", "Subsubsection",
 CellChangeTimes->{
  3.417973380225542*^9, {3.418683124446375*^9, 3.418683125633875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", " ", "t"}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.417973393959857*^9, 3.4179734134672403`*^9}, {
  3.41805769146875*^9, 3.418057701296875*^9}, {3.4185580963612957`*^9, 
  3.4185581094390025`*^9}, {3.418558175796254*^9, 3.418558195764365*^9}, {
  3.418558243215972*^9, 3.418558285511176*^9}, {3.418683208727625*^9, 
  3.418683213540125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c", " ", "t"}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", " ", "\[Omega]"}], "]"}]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "\[Omega]"}], "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.4186832557745*^9, 3.6179612980946364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"s", ",", "\[Tau]", ",", 
     RowBox[{"Constants", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", "r", ",", "\[Omega]"}], "}"}]}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"t", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Omega]"}], "}"}]}]}], "]"}], 
     "\[Rule]", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"r", " ", "\[Omega]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.418558306681425*^9, 3.418558440561767*^9}, {
  3.4185585743327427`*^9, 3.418558588050686*^9}, {3.418683216852625*^9, 
  3.4186832207745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["c", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"r", " ", "\[Omega]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], 
        SuperscriptBox["c", "2"]]}]]]}], ",", 
   FractionBox[
    RowBox[{"r", " ", "\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.41868325868075*^9, 3.617961298110236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"m", " ", "u"}]}]], "Input",
 CellChangeTimes->{{3.418558642344781*^9, 3.418558657015905*^9}, {
  3.41868322405575*^9, 3.418683227321375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", "m"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], 
        SuperscriptBox["c", "2"]]}]]]}], ",", 
   FractionBox[
    RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.418683267337*^9, 3.6179612981258364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"p", ",", "\[Tau]", ",", 
     RowBox[{"Constants", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "m"}], "}"}]}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"t", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Omega]", ",", "m"}], "}"}]}]}], "]"}],
      "\[Rule]", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"r", " ", "\[Omega]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.418559076090728*^9, 3.418559135744687*^9}, {
  3.418683232633875*^9, 3.418683236133875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"m", " ", "r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"m", " ", "r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.41868327199325*^9, 3.6179612981258364`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"u", " ", 
    RowBox[{"\[Rho]", "[", "r", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"-", "R"}], ",", "R"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.418683318962*^9, 3.418683364602625*^9}, {
  3.418683396696375*^9, 3.418683402087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "R"}], "R"], 
    RowBox[{
     FractionBox[
      RowBox[{"c", " ", 
       RowBox[{"\[Rho]", "[", "r", "]"}]}], 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}]]], 
     RowBox[{"\[DifferentialD]", "r"}]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "R"}], "R"], 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"r", " ", "\[Omega]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}], " ", 
        RowBox[{"\[Rho]", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}]]]}], 
     RowBox[{"\[DifferentialD]", "r"}]}]}], ",", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "R"}], "R"], 
    RowBox[{
     FractionBox[
      RowBox[{"r", " ", "\[Omega]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "\[Omega]"}], "]"}], " ", 
       RowBox[{"\[Rho]", "[", "r", "]"}]}], 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}]]], 
     RowBox[{"\[DifferentialD]", "r"}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4186833597745*^9, {3.418683391290125*^9, 3.41868340636825*^9}, 
   3.617961298749838*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativistic rotation", "Subsubsection",
 CellChangeTimes->{{3.4193542729747734`*^9, 3.4193542753609457`*^9}}],

Cell["\<\
Expression for any particle on a wheel centered on the origin and rotating in \
the counter - clockwise direction with angular frequency \[Omega].  R >= r >= \
0 and - \[Pi] < \[Phi] <= \[Pi].\
\>", "Text",
 CellChangeTimes->{{3.419354572668304*^9, 3.419354732322256*^9}, {
  3.4193549624093056`*^9, 3.4193549787641616`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", " ", "t"}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"\[Omega]", " ", "t"}]}], "]"}]}], ",", "0"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.4193543601246624`*^9, 3.419354394492208*^9}, {
  3.41935464397624*^9, 3.419354647788496*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c", " ", "t"}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "+", 
      RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "+", 
      RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.419354372931088*^9, 3.4193543995856323`*^9}, 
   3.4193547470652122`*^9, 3.4193548015187826`*^9, 3.419603192724099*^9, 
   3.41961561696541*^9, 3.420156649736*^9, 3.4507448811100225`*^9, {
   3.48146286539004*^9, 3.481462889905979*^9}, 3.6179612987654376`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"s", ",", "\[Tau]", ",", 
     RowBox[{"Constants", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
    "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"t", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
      "]"}], "\[Rule]", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4193555026633883`*^9, 3.419355559496625*^9}, {
  3.419355646107622*^9, 3.4193556647654266`*^9}, {3.41935569882804*^9, 
  3.41935569986024*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["c", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"r", " ", "\[Omega]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], 
        SuperscriptBox["c", "2"]]}]]]}], ",", 
   FractionBox[
    RowBox[{"r", " ", "\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.419355509153615*^9, {3.419355540447836*^9, 3.4193555606070223`*^9}, 
   3.4193556664388423`*^9, 3.419355701142671*^9, 3.4196031930052953`*^9, 
   3.4196156188274865`*^9, 3.4201566529235*^9, 3.450744887094666*^9, 
   3.4814628913747473`*^9, 3.6179612987810373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"u", "\[Equal]", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"c", " ", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}], "]"}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4201566645485*^9, 3.420156683189125*^9}, {
  3.420156714345375*^9, 3.420156758595375*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.4201566610485*^9, 3.42015672464225*^9}, 
   3.420156762861*^9, 3.450744889704158*^9, 3.4814629046561675`*^9, 
   3.617961299046238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"mink", "[", "u", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.419355703598057*^9, 3.419355713106812*^9}}],

Cell[BoxData[
 SuperscriptBox["c", "2"]], "Output",
 CellChangeTimes->{{3.419355706585182*^9, 3.419355714483079*^9}, 
   3.419603194973667*^9, 3.41961562281765*^9, 3.420156796611*^9, 
   3.4507448925636606`*^9, 3.4814000419300594`*^9, 3.4814629060624356`*^9, 
   3.617961299186638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"Dt", "[", 
    RowBox[{"u", ",", "\[Tau]", ",", 
     RowBox[{"Constants", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
    "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dt", "[", 
      RowBox[{"t", ",", "\[Tau]", ",", 
       RowBox[{"Constants", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "r", ",", "\[Phi]", ",", "\[Omega]"}], "}"}]}]}], 
      "]"}], "\[Rule]", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"\[Omega]", " ", "r"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.4507448985951815`*^9, 3.450744922643133*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], 
       SuperscriptBox["c", "2"]]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.450744930252849*^9, 3.4814000465397005`*^9, 
  3.4814629082343383`*^9, 3.617961299186638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"a", "\[Equal]", 
    FractionBox[
     RowBox[{"c", "  ", 
      RowBox[{"D", "[", 
       RowBox[{"u", ",", "t"}], "]"}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}], "]"}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481400056571528*^9, 3.4814001198713408`*^9}, {
  3.4814001587788353`*^9, 3.4814001615289235`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.4814001042145896`*^9, 3.4814001216526475`*^9}, 
   3.4814001635602384`*^9, 3.4814629121093884`*^9, 3.6179612994206386`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"mink", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.481400519554066*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["c", "4"], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["\[Omega]", "4"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.481400520960352*^9, 3.4814629154844313`*^9, 
  3.6179612994674387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"r", " ", "\[Omega]"}], "]"}], "4"]], "Input",
 CellChangeTimes->{{3.4814629370628324`*^9, 3.481462948047348*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox["c", "2"]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.481462941359762*^9, 3.4814629501567497`*^9}, 
   3.6179612994674387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mink", "[", "a", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"r", " ", "\[Omega]"}], "]"}], "4"]}], 
     SuperscriptBox["r", "2"], 
     SuperscriptBox["\[Omega]", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4814006435884914`*^9, 3.481400702496249*^9}, {
  3.4814629670944667`*^9, 3.481462970782014*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.481400692245987*^9, 3.4814007034337735`*^9}, 
   3.481444590449375*^9, 3.4814629185469704`*^9, 3.481462972672663*^9, 
   3.617961299545439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mink", "[", 
  RowBox[{"u", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.4507449447847505`*^9, 3.4507449517538123`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.450744952519472*^9, 3.481444595105625*^9, 
  3.481463000923025*^9, 3.617961299561039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sp", "=", 
  RowBox[{
   RowBox[{"lor", "[", 
    RowBox[{"R", " ", "\[Omega]"}], "]"}], ".", "s"}]}]], "Input",
 CellChangeTimes->{{3.4193547597131987`*^9, 3.419354780397113*^9}, {
  3.4193553073779464`*^9, 3.4193553089105787`*^9}, {3.4814447514025*^9, 
  3.481444751480625*^9}, {3.481444860355625*^9, 3.481444861168125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"c", " ", "t"}], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], 
        SuperscriptBox["c", "2"]]}]]], "-", 
    FractionBox[
     RowBox[{"r", " ", "R", " ", "\[Omega]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{"c", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["R", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}]]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"R", " ", "t", " ", "\[Omega]"}], 
      SqrtBox[
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["R", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}]]]}], "+", 
    FractionBox[
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["R", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}], 
        SuperscriptBox["c", "2"]]}]]]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "+", 
      RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.419354783820981*^9, 3.419354802863315*^9}, 
   3.419355319795392*^9, 3.4196031961765614`*^9, 3.4196156240381703`*^9, 
   3.42015681020475*^9, 3.481444665215*^9, 3.481444752636875*^9, 
   3.4814448634025*^9, 3.481463022048295*^9, 3.6179612995766387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"up", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{"c", " ", 
       RowBox[{"D", "[", 
        RowBox[{"sp", ",", "t"}], "]"}]}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"sp", ",", "t"}], "]"}], "]"}]]], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", ">", "0"}], ",", 
      RowBox[{"R", ">", "r", ">", "0"}], ",", 
      RowBox[{
       SuperscriptBox["c", "2"], ">", 
       RowBox[{
        SuperscriptBox["R", "2"], 
        SuperscriptBox["\[Omega]", "2"]}], ">", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.48144469393375*^9, 3.4814447477775*^9}, {
  3.481444883074375*^9, 3.481444884980625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "3"], "+", 
     RowBox[{"c", " ", "r", " ", "R", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "-", 
        RowBox[{"r", " ", "\[Omega]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"r", " ", "\[Omega]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"c", "-", 
        RowBox[{"R", " ", "\[Omega]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"R", " ", "\[Omega]"}]}], ")"}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", "\[Omega]", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "+", 
           RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"c", "-", 
         RowBox[{"r", " ", "\[Omega]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"c", "+", 
         RowBox[{"r", " ", "\[Omega]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["R", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}], ")"}]}]]]}], ",", 
   FractionBox[
    RowBox[{"c", " ", "r", " ", "\[Omega]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "-", 
        RowBox[{"r", " ", "\[Omega]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"r", " ", "\[Omega]"}]}], ")"}]}]]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.481444696418125*^9, 3.481444721105625*^9}, 
   3.48144475605875*^9, {3.481444864918125*^9, 3.481444889230625*^9}, 
   3.4814630387828846`*^9, 3.617961300746641*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"mink", "[", "up", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"R", ">", "r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Omega]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4814630408766613`*^9, 3.4814630596425266`*^9}}],

Cell[BoxData[
 SuperscriptBox["c", "2"]], "Output",
 CellChangeTimes->{{3.481463044407956*^9, 3.4814630602675343`*^9}, 
   3.617961300777841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"up", "\[Equal]", 
    RowBox[{
     RowBox[{"lor", "[", 
      RowBox[{"R", " ", "\[Omega]"}], "]"}], ".", "u"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"R", ">", "r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Omega]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4193558576934657`*^9, 3.419355902641963*^9}, {
  3.4814695913796663`*^9, 3.4814695977547474`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.419355872832695*^9, 3.4193559036116247`*^9, 3.4196032063777275`*^9, 
   3.419605452758839*^9, 3.4196156343813*^9, 3.420156872095375*^9, {
   3.481469576395099*^9, 3.481469601332918*^9}, 3.6179613016358423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ap", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{"c", " ", 
       RowBox[{"D", "[", 
        RowBox[{"up", ",", "t"}], "]"}]}]}], 
     SqrtBox[
      RowBox[{"mink", "[", 
       RowBox[{"D", "[", 
        RowBox[{"sp", ",", "t"}], "]"}], "]"}]]], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", ">", "0"}], ",", 
      RowBox[{"R", ">", "r", ">", "0"}], ",", 
      RowBox[{
       SuperscriptBox["c", "2"], ">", 
       RowBox[{
        SuperscriptBox["R", "2"], 
        SuperscriptBox["\[Omega]", "2"]}], ">", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.481444897574375*^9, 3.48144490218375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", "r", " ", "R", " ", 
     SuperscriptBox["\[Omega]", "3"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["c", "2"], "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["c", "2"], "-", 
       RowBox[{
        SuperscriptBox["R", "2"], " ", 
        SuperscriptBox["\[Omega]", "2"]}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["c", "3"], " ", "r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c", "2"], "-", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["c", "2"], "-", 
        RowBox[{
         SuperscriptBox["R", "2"], " ", 
         SuperscriptBox["\[Omega]", "2"]}]}]]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["c", "2"], " ", "r", " ", 
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"t", " ", "\[Omega]"}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["c", "2"], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.48144490687125*^9, 3.481463077580256*^9, 
  3.6179613020882435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mink", "[", "ap", "]"}], "/.", 
    RowBox[{"R", "\[Rule]", "r"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"R", ">", "r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Omega]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4814449112775*^9, 3.481444937418125*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["c", "4"], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["\[Omega]", "4"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.481444914965*^9, 3.48144493818375*^9}, 
   3.4814630890960283`*^9, 3.617961302135043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"mink", "[", 
    RowBox[{"ap", ",", "up"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"R", ">", "r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Omega]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.48146310442435*^9, 3.4814631227683344`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.481463109158785*^9, 3.4814631240496006`*^9}, 
   3.617961302571844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ap", "\[Equal]", 
    RowBox[{
     RowBox[{"lor", "[", 
      RowBox[{"R", " ", "\[Omega]"}], "]"}], ".", "a"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ">", "0"}], ",", 
     RowBox[{"R", ">", "r", ">", "0"}], ",", 
     RowBox[{
      SuperscriptBox["c", "2"], ">", 
      RowBox[{
       SuperscriptBox["R", "2"], 
       SuperscriptBox["\[Omega]", "2"]}], ">", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], ">", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4193558576934657`*^9, 3.419355902641963*^9}, {
  3.4814695913796663`*^9, 3.4814696262863626`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.419355872832695*^9, 3.4193559036116247`*^9, 3.4196032063777275`*^9, 
   3.419605452758839*^9, 3.4196156343813*^9, 3.420156872095375*^9, {
   3.481469576395099*^9, 3.481469628942647*^9}, 3.6179613028370447`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativistic rotation in cylindrical rotating frame", "Subsubsection",
 CellChangeTimes->{{3.4193542729747734`*^9, 3.4193542753609457`*^9}, {
  3.48152925939649*^9, 3.4815292628652844`*^9}, {3.481529344147575*^9, 
  3.4815293478038716`*^9}}],

Cell[TextData[{
 "The metric in a rotating frame in cylindrical coordinates is given by\n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["ds", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}], ")"}]}], 
     SuperscriptBox["c", "2"], 
     SuperscriptBox["dt", "2"]}], "+", 
    SuperscriptBox["dr", "2"], "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], "\[Omega]", " ", "dt", " ", "d\[Theta]"}], "+", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     SuperscriptBox["d\[Theta]", "2"]}], "+", 
    SuperscriptBox["dz", "2"]}]}]],
  CellChangeTimes->{{3.4815293024751663`*^9, 3.481529317444108*^9}, {
   3.481529417617265*^9, 3.48152942385172*^9}, {3.481529465414752*^9, 
   3.4815295696035852`*^9}, {3.4815302737219734`*^9, 
   3.4815302819877043`*^9}, {3.4815491237233076`*^9, 3.481549132629671*^9}}],
 "\nor if parameterized by \[Lambda]\n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["ds", "d\[Lambda]"], ")"}], "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}], ")"}]}], 
     SuperscriptBox["c", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["dt", "d\[Lambda]"], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["dr", "d\[Lambda]"], ")"}], "2"], "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], "\[Omega]", " ", 
     FractionBox["dt", "d\[Lambda]"], " ", 
     FractionBox["d\[Theta]", "d\[Lambda]"]}], "+", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["d\[Theta]", "d\[Lambda]"], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["dz", "d\[Lambda]"], ")"}], "2"]}]}]],
  CellChangeTimes->{{3.4815488867046485`*^9, 3.481548891439084*^9}, {
   3.481548959127451*^9, 3.481548959314953*^9}, {3.481549057300582*^9, 
   3.481549164005073*^9}}],
 "\nalso make the substitution\nG=\[Gamma][r \[Omega]]=",
 Cell[BoxData[
  FractionBox["1", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox["c", "2"]]}]]]],
  CellChangeTimes->{3.4816242871544757`*^9}]
}], "Text",
 CellChangeTimes->{{3.419354572668304*^9, 3.419354732322256*^9}, {
  3.4193549624093056`*^9, 3.4193549787641616`*^9}, {3.481529622073007*^9, 
  3.4815296484483447`*^9}, {3.4815602149308195`*^9, 3.481560267134612*^9}, {
  3.481624254993904*^9, 3.4816242930771465`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"g", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["G", 
          RowBox[{"-", "2"}]]}], 
        SuperscriptBox["c", "2"]}], ",", "0", ",", 
       RowBox[{
        SuperscriptBox["r", "2"], "\[Omega]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], "\[Omega]"}], ",", "0", ",", 
       SuperscriptBox["r", "2"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4815499795402255`*^9, 3.4815500559831066`*^9}, {
  3.481550093782643*^9, 3.4815501681605663`*^9}, {3.4815600504755893`*^9, 
  3.4815600528037443`*^9}, {3.481571751197625*^9, 3.481571753447625*^9}, {
  3.48161963844175*^9, 3.481619642301125*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["c", "2"], 
        SuperscriptBox["G", "2"]]}], "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Omega]"}], "0"},
     {"0", "1", "0", "0"},
     {
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Omega]"}], "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4815501431441407`*^9, 3.4815501694887342`*^9}, 
   3.48156005405376*^9, 3.481561362023627*^9, 3.481571759197625*^9, 
   3.481571842682*^9, 3.4816162233934193`*^9, 3.481619645348*^9, 
   3.481623374524*^9, 3.4816241462136607`*^9, 3.482499010563421*^9, 
   3.482501191374253*^9, 3.617961302868245*^9}]
}, Open  ]],

Cell["\<\
The worldline in this coordinate system for a particle undergoing uniform \
circular motion with angular velocity \[Omega] at radius r=r0, \[Theta]=0, \
and z=0 is given by\
\>", "Text",
 CellChangeTimes->{{3.481529796622116*^9, 3.481529954249134*^9}, {
  3.4815299869839277`*^9, 3.4815299889683285`*^9}, {3.4816144425268745`*^9, 
  3.4816144429018793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "r0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4815299569991693`*^9, 3.4815299928902535`*^9}, {
   3.481530136423341*^9, 3.4815301416577826`*^9}, {3.481549612151824*^9, 
   3.481549612386238*^9}, {3.481560069444582*^9, 3.48156006967896*^9}, {
   3.481614436854927*^9, 3.481614437229932*^9}, {3.4816206670612535`*^9, 
   3.481620667295699*^9}, 3.4816207381294994`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4815303010191975`*^9, 3.4815492863035135`*^9, 3.481549553204517*^9, 
   3.4815496151992064`*^9, {3.4815600604757175`*^9, 3.4815600716633606`*^9}, 
   3.4815604786373196`*^9, 3.481561207912279*^9, 3.48156136419553*^9, 
   3.48157184490075*^9, 3.4816144472613106`*^9, 3.4816162261434546`*^9, 
   3.481619657598*^9, 3.4816206685148163`*^9, 3.4816207388797255`*^9, 
   3.481623378258375*^9, 3.481624148385828*^9, 3.4824990138603168`*^9, 
   3.4825011946086483`*^9, 3.617961302868245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"I", " ", "c", 
     FractionBox[
      RowBox[{"D", "[", 
       RowBox[{"s", ",", "t"}], "]"}], 
      SqrtBox[
       RowBox[{"g", ".", 
        RowBox[{"D", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"s", ",", "t"}], "]"}]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "c"}], ",", 
      RowBox[{"1", "<", "G"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4825009678884478`*^9, 3.482500977826011*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"G", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.4825009809041557`*^9, 3.4825011959992824`*^9, 
  3.6179613028994446`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", ".", "u"}]], "Input",
 CellChangeTimes->{{3.481620456957375*^9, 3.48162045744175*^9}}],

Cell[BoxData[
 SuperscriptBox["G", "2"]], "Output",
 CellChangeTimes->{
  3.48162045812925*^9, {3.481623408899*^9, 3.48162342180525*^9}, {
   3.48162357499275*^9, 3.481623583352125*^9}, 3.4816241758582697`*^9, 
   3.482501016873136*^9, 3.4825011972805405`*^9, 3.6179613028994446`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"g", ".", "u"}], ")"}], ".", "u"}]], "Input",
 CellChangeTimes->{{3.481549882252127*^9, 3.4815498904870815`*^9}, {
  3.481549943928344*^9, 3.481549950178784*^9}, {3.481550192739478*^9, 
  3.48155019373951*^9}, {3.481553083798956*^9, 3.4815530844708395`*^9}, {
  3.4815531795922203`*^9, 3.481553180498621*^9}, {3.481553299549678*^9, 
  3.4815533096763625`*^9}, {3.481568038609086*^9, 3.481568040046604*^9}, {
  3.4816234457115*^9, 3.48162344793025*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["c", "2"]}]], "Output",
 CellChangeTimes->{
  3.4815499511944804`*^9, 3.481550194520785*^9, 3.481553085345851*^9, 
   3.4815531811706076`*^9, {3.481553301753169*^9, 3.481553310238956*^9}, 
   3.48155406813105*^9, {3.48156006225699*^9, 3.4815600753196573`*^9}, 
   3.481560149476856*^9, 3.481560481809235*^9, 3.4815612348813744`*^9, 
   3.4815614033210306`*^9, 3.4815680407184877`*^9, 3.48157184758825*^9, 
   3.481616228455984*^9, 3.481619696144875*^9, 3.481619771332375*^9, {
   3.481623423289625*^9, 3.4816234484615*^9}, 3.481623585383375*^9, 
   3.4816241786398935`*^9, 3.4825010199044056`*^9, 3.482501198452423*^9, 
   3.617961302915045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"I", " ", "c", 
    FractionBox[
     RowBox[{"D", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{"g", ".", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]]]}], "+", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Omega]", "2"]}], " ", "r"}], ",", "0", ",", "0"}], 
     "}"}], 
    RowBox[{"(", 
     RowBox[{"u", ".", "u"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.481553141492131*^9, 3.481553146743005*^9}, {
   3.481553557734645*^9, 3.48155356320378*^9}, {3.481559565219378*^9, 
   3.481559570860075*^9}, {3.481559695236667*^9, 3.481559700799238*^9}, {
   3.4815601534925327`*^9, 3.4815601725240264`*^9}, {3.4816198162855*^9, 
   3.481619818457375*^9}, 3.481623467945875*^9, {3.481623608320875*^9, 
   3.481623609524*^9}, 3.482501039248279*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["G", "2"]}], " ", "r", " ", 
    SuperscriptBox["\[Omega]", "2"]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.4815531482432547`*^9, 3.4815535642194767`*^9, 
  3.481554073537404*^9, 3.481559571781962*^9, 3.481559702346133*^9, 
  3.481560085632289*^9, 3.481560154117541*^9, 3.481560487574934*^9, 
  3.48156140953986*^9, 3.48157184865075*^9, 3.481619820144875*^9, 
  3.481623468945875*^9, 3.481623611149*^9, 3.4816241881880517`*^9, 
  3.482501044467063*^9, 3.4825011998899326`*^9, 3.617961302930645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", ".", "a", ".", "a"}]], "Input",
 CellChangeTimes->{{3.48161983506675*^9, 3.481619836363625*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["G", "4"], " ", 
  SuperscriptBox["r", "2"], " ", 
  SuperscriptBox["\[Omega]", "4"]}]], "Output",
 CellChangeTimes->{3.48161983706675*^9, 3.481623471070875*^9, 
  3.481623615789625*^9, 3.481624190360218*^9, 3.482501047279581*^9, 
  3.4825012013586917`*^9, 3.617961302930645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", ".", "a", ".", "a"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"r", " ", "\[Omega]"}], "]"}], "4"], 
     SuperscriptBox["r", "2"], 
     SuperscriptBox["\[Omega]", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "<", 
     RowBox[{"r", " ", "\[Omega]"}], "<", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4815605540445347`*^9, 3.4815605720135145`*^9}, {
  3.481568006452424*^9, 3.481568006546176*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox["\[Omega]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["G", "4"], "-", 
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}], ")"}], "2"]]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{{3.4815605626852703`*^9, 3.4815605724353952`*^9}, 
   3.4815614131180305`*^9, 3.481568007577439*^9, 3.481571850135125*^9, 
   3.4816241994864445`*^9, 3.48250105104523*^9, 3.482501202999327*^9, 
   3.617961303008645*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Relativistic rotation in cylindrical rotating frame (gamma expanded)\
\>", "Subsubsection",
 CellChangeTimes->{{3.4193542729747734`*^9, 3.4193542753609457`*^9}, {
  3.48152925939649*^9, 3.4815292628652844`*^9}, {3.481529344147575*^9, 
  3.4815293478038716`*^9}, {3.481624221692554*^9, 3.4816242290372906`*^9}}],

Cell[TextData[{
 "The metric in a rotating frame in cylindrical coordinates is given by\n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["ds", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}], ")"}]}], 
     SuperscriptBox["c", "2"], 
     SuperscriptBox["dt", "2"]}], "+", 
    SuperscriptBox["dr", "2"], "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], "\[Omega]", " ", "dt", " ", "d\[Theta]"}], "+", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     SuperscriptBox["d\[Theta]", "2"]}], "+", 
    SuperscriptBox["dz", "2"]}]}]],
  CellChangeTimes->{{3.4815293024751663`*^9, 3.481529317444108*^9}, {
   3.481529417617265*^9, 3.48152942385172*^9}, {3.481529465414752*^9, 
   3.4815295696035852`*^9}, {3.4815302737219734`*^9, 
   3.4815302819877043`*^9}, {3.4815491237233076`*^9, 3.481549132629671*^9}}],
 "\nor if parameterized by \[Lambda]\n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["ds", "d\[Lambda]"], ")"}], "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}], ")"}]}], 
     SuperscriptBox["c", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["dt", "d\[Lambda]"], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["dr", "d\[Lambda]"], ")"}], "2"], "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], "\[Omega]", " ", 
     FractionBox["dt", "d\[Lambda]"], " ", 
     FractionBox["d\[Theta]", "d\[Lambda]"]}], "+", 
    RowBox[{
     SuperscriptBox["r", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["d\[Theta]", "d\[Lambda]"], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["dz", "d\[Lambda]"], ")"}], "2"]}]}]],
  CellChangeTimes->{{3.4815488867046485`*^9, 3.481548891439084*^9}, {
   3.481548959127451*^9, 3.481548959314953*^9}, {3.481549057300582*^9, 
   3.481549164005073*^9}}]
}], "Text",
 CellChangeTimes->{{3.419354572668304*^9, 3.419354732322256*^9}, {
  3.4193549624093056`*^9, 3.4193549787641616`*^9}, {3.481529622073007*^9, 
  3.4815296484483447`*^9}, {3.4815602149308195`*^9, 3.481560267134612*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4838867250107627`*^9, 3.4838867431053233`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.483886746058581*^9, 3.4838897968774357`*^9, 
  3.617961303008645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"g", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], 
             SuperscriptBox["\[Omega]", "2"]}], 
            SuperscriptBox["c", "2"]]}], ")"}]}], 
        SuperscriptBox["c", "2"]}], ",", "0", ",", 
       RowBox[{
        SuperscriptBox["r", "2"], "\[Omega]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], "\[Omega]"}], ",", "0", ",", 
       SuperscriptBox["r", "2"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4815499795402255`*^9, 3.4815500559831066`*^9}, {
  3.481550093782643*^9, 3.4815501681605663`*^9}, {3.4815600504755893`*^9, 
  3.4815600528037443`*^9}, {3.481571751197625*^9, 3.481571753447625*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["c", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}], ")"}]}], "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Omega]"}], "0"},
     {"0", "1", "0", "0"},
     {
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Omega]"}], "0", 
      SuperscriptBox["r", "2"], "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4815501431441407`*^9, 3.4815501694887342`*^9}, 
   3.48156005405376*^9, 3.481561362023627*^9, 3.481571759197625*^9, 
   3.481571842682*^9, 3.4816162233934193`*^9, 3.481624313236106*^9, 
   3.4825011812648134`*^9, 3.482501224046337*^9, 3.483886464011535*^9, 
   3.4838867499962573`*^9, 3.48388979823695*^9, 3.617961303024245*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"\[CapitalGamma]", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Inverse", "[", "g", "]"}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "m"}], "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", 
                 RowBox[{"m", ",", "k"}], "]"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"[", "l", "]"}], "]"}]}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", 
                 RowBox[{"m", ",", "l"}], "]"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "-", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "l"}], "]"}], "]"}], ",", 
               RowBox[{"x", "[", 
                RowBox[{"[", "m", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", "<", "R", "<", "r"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"TableDepth", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.482511360834875*^9, 3.48251142475675*^9}, 
   3.4825114706005*^9, {3.482512068288*^9, 3.482512145538*^9}, {
   3.482515130709875*^9, 3.482515362897375*^9}, {3.482515401366125*^9, 
   3.482515407647375*^9}, {3.482515487241125*^9, 3.482515495397375*^9}, {
   3.4825157888505*^9, 3.482515790038*^9}, {3.4825163612114706`*^9, 
   3.4825163817668934`*^9}, {3.482516470710128*^9, 3.4825164729766955`*^9}, {
   3.482516767514024*^9, 3.4825167705144844`*^9}, {3.4825703233815002`*^9, 
   3.4825703759127502`*^9}, {3.4825704911002502`*^9, 3.4825704979752502`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", 
         SuperscriptBox["\[Omega]", "2"]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Omega]"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Omega]"}], ",", "0", ",", 
        RowBox[{"-", "r"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox["\[Omega]", "r"], ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Omega]", "r"], ",", "0", ",", 
        FractionBox["1", "r"], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox["1", "r"], ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$, TableDepth -> 2]]]], "Output",
 CellChangeTimes->{3.483886754465207*^9, 3.4838897993464384`*^9, 
  3.6179613031022453`*^9}]
}, Open  ]],

Cell["\<\
The worldline in this coordinate system for a particle undergoing uniform \
circular motion with angular velocity \[Omega] at radius r=r0, \[Theta]=0, \
and z=0 is given by\
\>", "Text",
 CellChangeTimes->{{3.481529796622116*^9, 3.481529954249134*^9}, {
  3.4815299869839277`*^9, 3.4815299889683285`*^9}, {3.4816144425268745`*^9, 
  3.4816144429018793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", "r0", ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4815299569991693`*^9, 3.4815299928902535`*^9}, {
   3.481530136423341*^9, 3.4815301416577826`*^9}, {3.481549612151824*^9, 
   3.481549612386238*^9}, {3.481560069444582*^9, 3.48156006967896*^9}, {
   3.481614436854927*^9, 3.481614437229932*^9}, {3.4816206670612535`*^9, 
   3.481620667295699*^9}, 3.4816207381294994`*^9, 3.4838869814894834`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4815303010191975`*^9, 3.4815492863035135`*^9, 3.481549553204517*^9, 
   3.4815496151992064`*^9, {3.4815600604757175`*^9, 3.4815600716633606`*^9}, 
   3.4815604786373196`*^9, 3.481561207912279*^9, 3.48156136419553*^9, 
   3.48157184490075*^9, 3.4816144472613106`*^9, 3.4816162261434546`*^9, 
   3.481619657598*^9, 3.4816206685148163`*^9, 3.4816207388797255`*^9, 
   3.481623378258375*^9, 3.481624317830473*^9, 3.4825012265619783`*^9, 
   3.4838864831536303`*^9, 3.4838868593761573`*^9, 3.483886994224266*^9, 
   3.483889803346848*^9, 3.617961303211445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"I", " ", "c", 
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"x", ",", "t"}], "]"}], 
    SqrtBox[
     RowBox[{"g", ".", 
      RowBox[{"D", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ".", 
      RowBox[{"D", "[", 
       RowBox[{"x", ",", "t"}], "]"}]}]]]}]}]], "Input",
 CellChangeTimes->{{3.481549292366091*^9, 3.4815492991786785`*^9}, {
   3.48154935792943*^9, 3.4815495007750087`*^9}, {3.481560146836198*^9, 
   3.4815601697896166`*^9}, {3.4815612175530276`*^9, 3.481561306257288*^9}, 
   3.481561337210809*^9, {3.4815613920865116`*^9, 3.4815613969928246`*^9}, 
   3.481623416320875*^9, {3.481623558695875*^9, 3.481623561149*^9}, 
   3.482501124686326*^9, {3.4838869831614122`*^9, 3.4838869861771336`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c"}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox["c", "2"]]}], ")"}]}]]], ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4815492997568107`*^9, {3.481549425555296*^9, 3.4815495024156547`*^9}, 
   3.481549555548657*^9, 3.481549616621318*^9, {3.4815600411160946`*^9, 
   3.481560074288394*^9}, 3.4815601479299617`*^9, 3.48156048023109*^9, 
   3.4815612241937375`*^9, {3.4815612653348894`*^9, 3.4815613072885513`*^9}, {
   3.4815613381795716`*^9, 3.4815613651174164`*^9}, 3.481561399524107*^9, 
   3.481571846182*^9, 3.4816144485894527`*^9, 3.4816162274715967`*^9, 
   3.481623407727125*^9, 3.481623564539625*^9, 3.481624333301302*^9, 
   3.482501230140126*^9, 3.483886484591241*^9, 3.4838868609231014`*^9, 
   3.4838869289565525`*^9, {3.4838869901460104`*^9, 3.483886996802473*^9}, 
   3.4838898044094567`*^9, 3.617961303227045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"u", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "<", "c"}], ",", 
     RowBox[{"1", "<", "G"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481619919598*^9, 3.48161993012925*^9}, {
  3.481623531227125*^9, 3.481623547945875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}]]], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.48161993075425*^9, 3.4816206823158407`*^9, {3.481623382524*^9, 
   3.481623420070875*^9}, {3.48162352386775*^9, 3.481623581570875*^9}, 
   3.481624334363945*^9, 3.482501232640142*^9, 3.4838864862944965`*^9, 
   3.4838868623450403`*^9, 3.4838869995994377`*^9, 3.483889805722091*^9, 
   3.6179613032582455`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"g", ".", "u"}], ")"}], ".", "u"}]], "Input",
 CellChangeTimes->{{3.481549882252127*^9, 3.4815498904870815`*^9}, {
  3.481549943928344*^9, 3.481549950178784*^9}, {3.481550192739478*^9, 
  3.48155019373951*^9}, {3.481553083798956*^9, 3.4815530844708395`*^9}, {
  3.4815531795922203`*^9, 3.481553180498621*^9}, {3.481553299549678*^9, 
  3.4815533096763625`*^9}, {3.481568038609086*^9, 3.481568040046604*^9}, {
  3.4816234457115*^9, 3.48162344793025*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["c", "2"]}]], "Output",
 CellChangeTimes->{
  3.4815499511944804`*^9, 3.481550194520785*^9, 3.481553085345851*^9, 
   3.4815531811706076`*^9, {3.481553301753169*^9, 3.481553310238956*^9}, 
   3.48155406813105*^9, {3.48156006225699*^9, 3.4815600753196573`*^9}, 
   3.481560149476856*^9, 3.481560481809235*^9, 3.4815612348813744`*^9, 
   3.4815614033210306`*^9, 3.4815680407184877`*^9, 3.48157184758825*^9, 
   3.481616228455984*^9, 3.481619696144875*^9, 3.481619771332375*^9, {
   3.481623423289625*^9, 3.4816234484615*^9}, 3.481623585383375*^9, 
   3.4816243441308823`*^9, 3.4825012357182865`*^9, 3.4838864884352856`*^9, 
   3.483886863595086*^9, 3.483887002583908*^9, 3.483889806894086*^9, 
   3.6179613032582455`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", "c", 
      RowBox[{
       FractionBox[
        RowBox[{"D", "[", 
         RowBox[{"u", ",", "t"}], "]"}], 
        SqrtBox[
         RowBox[{"g", ".", 
          RowBox[{"D", "[", 
           RowBox[{"x", ",", "t"}], "]"}], ".", 
          RowBox[{"D", "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]]], "[", 
       RowBox[{"[", "\[Lambda]", "]"}], "]"}]}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"[", 
           RowBox[{"\[Lambda]", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], 
         ")"}], 
        RowBox[{"u", "[", 
         RowBox[{"[", "\[Mu]", "]"}], "]"}], 
        RowBox[{"u", "[", 
         RowBox[{"[", "\[Nu]", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "4"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483886871720346*^9, 3.483886951066635*^9}, {
  3.4838870056777573`*^9, 3.4838870157718306`*^9}, {3.483889811941478*^9, 
  3.483889812519662*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{"r", " ", 
     SuperscriptBox["\[Omega]", "2"]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox["c", "2"]]}]], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.483886893142906*^9, 3.48388695247293*^9}, 
   3.48388701872505*^9, 3.483889814254215*^9, 3.6179613032894454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", ".", "a", ".", "u"}]], "Input",
 CellChangeTimes->{{3.4838898204736013`*^9, 3.4838898233020163`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4838898239583335`*^9, 3.6179613032894454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", ".", "a", ".", "a"}]], "Input",
 CellChangeTimes->{{3.48161983506675*^9, 3.481619836363625*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox["\[Omega]", "4"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox["c", "2"]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.48161983706675*^9, 3.481623471070875*^9, 
  3.481623615789625*^9, 3.481624367774685*^9, 3.48250124406209*^9, 
  3.483886490466692*^9, 3.4838869579262295`*^9, 3.4838870200844684`*^9, 
  3.4838898255991263`*^9, 3.617961303305045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", ".", "a", ".", "a"}], "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"r", " ", "\[Omega]"}], "]"}], "4"], 
     SuperscriptBox["r", "2"], 
     SuperscriptBox["\[Omega]", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "<", 
     RowBox[{"r", " ", "\[Omega]"}], "<", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4815605540445347`*^9, 3.4815605720135145`*^9}, {
  3.481568006452424*^9, 3.481568006546176*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.4815605626852703`*^9, 3.4815605724353952`*^9}, 
   3.4815614131180305`*^9, 3.481568007577439*^9, 3.481571850135125*^9, 
   3.481624371743968*^9, 3.48250124559335*^9, 3.4838864921855736`*^9, 
   3.483886958879385*^9, 3.4838870209907475`*^9, 3.4838898279274898`*^9, 
   3.6179613033206453`*^9}]
}, Open  ]],

Cell["Now find the coordinate acceleration for a geodesic", "Text",
 CellChangeTimes->{{3.481529796622116*^9, 3.481529954249134*^9}, {
  3.4815299869839277`*^9, 3.4815299889683285`*^9}, {3.4816144425268745`*^9, 
  3.4816144429018793`*^9}, {3.4838865115151834`*^9, 3.4838865206877623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"{", 
   RowBox[{"t", ",", 
    RowBox[{"r", "[", "t", "]"}], ",", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
    RowBox[{"z", "[", "t", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4815299569991693`*^9, 3.4815299928902535`*^9}, {
   3.481530136423341*^9, 3.4815301416577826`*^9}, {3.481549612151824*^9, 
   3.481549612386238*^9}, {3.481560069444582*^9, 3.48156006967896*^9}, {
   3.481614436854927*^9, 3.481614437229932*^9}, {3.4816206670612535`*^9, 
   3.481620667295699*^9}, 3.4816207381294994`*^9, 3.4838869814894834`*^9, {
   3.4838870413663993`*^9, 3.483887042413308*^9}, {3.483887502316477*^9, 
   3.483887528098387*^9}, 3.483888071846681*^9, {3.4838901308059487`*^9, 
   3.483890131649748*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   RowBox[{"r", "[", "t", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
   RowBox[{"z", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.483887529364044*^9, 3.483888072924834*^9, 3.483889831130943*^9, {
   3.483890132977949*^9, 3.483890162057749*^9}, 3.6179613033206453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"I", " ", "c", 
    FractionBox[
     RowBox[{"D", "[", 
      RowBox[{"x", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "\[Rule]", 
            RowBox[{"r", "[", "t", "]"}]}], ",", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ")"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ".", 
       RowBox[{"D", "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.481549292366091*^9, 3.4815492991786785`*^9}, {
   3.48154935792943*^9, 3.4815495007750087`*^9}, {3.481560146836198*^9, 
   3.4815601697896166`*^9}, {3.4815612175530276`*^9, 3.481561306257288*^9}, 
   3.481561337210809*^9, {3.4815613920865116`*^9, 3.4815613969928246`*^9}, 
   3.481623416320875*^9, {3.481623558695875*^9, 3.481623561149*^9}, 
   3.482501124686326*^9, {3.4838869831614122`*^9, 3.4838869861771336`*^9}, {
   3.4838870781332006`*^9, 3.4838870896960707`*^9}, {3.4838874037202024`*^9, 
   3.483887407439048*^9}, 3.4838876479452047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]]], 
   ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c", " ", 
     RowBox[{
      SuperscriptBox["r", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]]], 
   ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]]], 
   ",", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "c", " ", 
     RowBox[{
      SuperscriptBox["z", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["c", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4815492997568107`*^9, {3.481549425555296*^9, 3.4815495024156547`*^9}, 
   3.481549555548657*^9, 3.481549616621318*^9, {3.4815600411160946`*^9, 
   3.481560074288394*^9}, 3.4815601479299617`*^9, 3.48156048023109*^9, 
   3.4815612241937375`*^9, {3.4815612653348894`*^9, 3.4815613072885513`*^9}, {
   3.4815613381795716`*^9, 3.4815613651174164`*^9}, 3.481561399524107*^9, 
   3.481571846182*^9, 3.4816144485894527`*^9, 3.4816162274715967`*^9, 
   3.481623407727125*^9, 3.481623564539625*^9, 3.481624333301302*^9, 
   3.482501230140126*^9, 3.483886484591241*^9, 3.4838868609231014`*^9, 
   3.4838869289565525`*^9, {3.4838869901460104`*^9, 3.483886996802473*^9}, 
   3.4838870481478662`*^9, 3.483887090571099*^9, 3.483887408610953*^9, {
   3.4838875163793364`*^9, 3.483887535301696*^9}, 3.4838876496952496`*^9, 
   3.4838880743623705`*^9, 3.4838898331624007`*^9, 3.4838901635265837`*^9, 
   3.6179613033986454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"g", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "\[Rule]", 
        RowBox[{"r", "[", "t", "]"}]}], ",", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
       RowBox[{"z", "\[Rule]", 
        RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ")"}], ".", "u", ".", 
   "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.481549882252127*^9, 3.4815498904870815`*^9}, {
  3.481549943928344*^9, 3.481549950178784*^9}, {3.481550192739478*^9, 
  3.48155019373951*^9}, {3.481553083798956*^9, 3.4815530844708395`*^9}, {
  3.4815531795922203`*^9, 3.481553180498621*^9}, {3.481553299549678*^9, 
  3.4815533096763625`*^9}, {3.481568038609086*^9, 3.481568040046604*^9}, {
  3.4816234457115*^9, 3.48162344793025*^9}, {3.483887059788864*^9, 
  3.4838870695548015`*^9}, {3.483887112915564*^9, 3.4838871161187916`*^9}, {
  3.483887541583107*^9, 3.483887564599321*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["c", "2"]}]], "Output",
 CellChangeTimes->{
  3.4815499511944804`*^9, 3.481550194520785*^9, 3.481553085345851*^9, 
   3.4815531811706076`*^9, {3.481553301753169*^9, 3.481553310238956*^9}, 
   3.48155406813105*^9, {3.48156006225699*^9, 3.4815600753196573`*^9}, 
   3.481560149476856*^9, 3.481560481809235*^9, 3.4815612348813744`*^9, 
   3.4815614033210306`*^9, 3.4815680407184877`*^9, 3.48157184758825*^9, 
   3.481616228455984*^9, 3.481619696144875*^9, 3.481619771332375*^9, {
   3.481623423289625*^9, 3.4816234484615*^9}, 3.481623585383375*^9, 
   3.4816243441308823`*^9, 3.4825012357182865`*^9, 3.4838864884352856`*^9, 
   3.483886863595086*^9, 3.483887002583908*^9, 3.483887055101214*^9, {
   3.4838870954462547`*^9, 3.483887116634433*^9}, 3.48388741690804*^9, 
   3.483887565880604*^9, 3.483887651429669*^9, 3.4838880760967903`*^9, 
   3.4838898348657002`*^9, 3.4838901651360397`*^9, 3.617961303429846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", "c", 
       RowBox[{
        FractionBox[
         RowBox[{"D", "[", 
          RowBox[{"u", ",", "t"}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r", "\[Rule]", 
                RowBox[{"r", "[", "t", "]"}]}], ",", 
               RowBox[{"\[Theta]", "\[Rule]", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{"z", "\[Rule]", 
                RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ")"}], ".", 
           RowBox[{"D", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ".", 
           RowBox[{"D", "[", 
            RowBox[{"x", ",", "t"}], "]"}]}]]], "[", 
        RowBox[{"[", "\[Lambda]", "]"}], "]"}]}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalGamma]", "[", 
            RowBox[{"[", 
             RowBox[{"\[Lambda]", ",", "\[Mu]", ",", "\[Nu]"}], "]"}], "]"}], 
           "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", "\[Rule]", 
              RowBox[{"r", "[", "t", "]"}]}], ",", 
             RowBox[{"\[Theta]", "\[Rule]", 
              RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
             RowBox[{"z", "\[Rule]", 
              RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ")"}], 
         RowBox[{"u", "[", 
          RowBox[{"[", "\[Mu]", "]"}], "]"}], 
         RowBox[{"u", "[", 
          RowBox[{"[", "\[Nu]", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Mu]", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Nu]", ",", "4"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.483886871720346*^9, 3.483886951066635*^9}, {
  3.4838870056777573`*^9, 3.4838870157718306`*^9}, {3.483887128666068*^9, 
  3.4838871572607327`*^9}, {3.4838873504688396`*^9, 3.483887354484567*^9}, {
  3.483887655695403*^9, 3.4838876593517466`*^9}, {3.483888080596905*^9, 
  3.4838880833000994`*^9}, {3.483888626345251*^9, 3.483888627001518*^9}, {
  3.4838901431035323`*^9, 3.483890145338036*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["c", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["z", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}], 
      ")"}], "2"]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"r", "[", "t", "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["c", "2"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["r", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["z", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]", "+", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"r", "[", "t", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]", "+", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "4"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["c", "2"], "-", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["z", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"r", "[", "t", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Omega]", "+", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["r", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}], 
      ")"}], "2"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["c", "2"], "-", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["z", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]", "+", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"r", "[", "t", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Omega]", "+", 
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Omega]"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"r", "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["r", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"r", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"r", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SuperscriptBox["z", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["z", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["z", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["c", "2"]}], "+", 
              RowBox[{"\[Omega]", " ", 
               SuperscriptBox[
                RowBox[{"r", "[", "t", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"\[Omega]", "+", 
                 RowBox[{
                  SuperscriptBox["\[Theta]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", "[", "t", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["c", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["z", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "t", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Omega]", "+", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}], 
        ")"}], "2"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]", "+", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["c", "2"], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"r", "[", "t", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Omega]", "+", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["z", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{
             SuperscriptBox["z", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["c", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "t", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}], 
      ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.483886893142906*^9, 3.48388695247293*^9}, 
   3.48388701872505*^9, {3.4838871432134085`*^9, 3.483887158979538*^9}, {
   3.483887355062707*^9, 3.4838873699693384`*^9}, 3.4838875956313653`*^9, 
   3.483887662258071*^9, 3.4838880858001633`*^9, 3.4838886292046995`*^9, 
   3.4838898371315575`*^9, 3.4838901668704815`*^9, 3.6179613037106457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"g", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "\[Rule]", 
        RowBox[{"r", "[", "t", "]"}]}], ",", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
       RowBox[{"z", "\[Rule]", 
        RowBox[{"z", "[", "t", "]"}]}]}], "}"}]}], ")"}], ".", "a", ".", 
   "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.4838885167018194`*^9, 3.483888538014865*^9}, 
   3.4838901504008274`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.483888525373916*^9, 3.4838885394524016`*^9}, 
   3.4838886310016203`*^9, 3.483889840600662*^9, 3.4838901697143407`*^9, 
   3.6179613037574463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "\[Equal]", 
       RowBox[{"a", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{"a", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{"a", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"z", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.483887783667429*^9, 3.48388787609167*^9}, {
  3.483887934718171*^9, 3.48388795089046*^9}, {3.4838881172540936`*^9, 
  3.4838881178947353`*^9}, {3.483888152270615*^9, 3.483888157505124*^9}, {
  3.4838901753395567`*^9, 3.4838901875744014`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"r", "[", "t", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
       RowBox[{"r", "[", "t", "]"}]]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["z", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4838877973552794`*^9, 3.483887838856342*^9, 
  3.483887877888591*^9, 3.4838879521561174`*^9, 3.483888120676056*^9, 
  3.4838881581926413`*^9, 3.4838886483926907`*^9, 3.4838898786508007`*^9, 
  3.4838901894494734`*^9, 3.6179613039758463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"a", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", " ", "vx"}], "+", "x0"}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", " ", "vy"}], "+", "y0"}], ")"}], "2"]}]]}], "]"}]}],
      ",", 
     RowBox[{"\[Theta]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"t", " ", "vx"}], "+", "x0"}], ",", 
           RowBox[{
            RowBox[{"t", " ", "vy"}], "+", "y0"}]}], "]"}], "-", 
         RowBox[{"\[Omega]", " ", "t"}]}]}], "]"}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"t", " ", "vz"}], "+", "z0"}]}], "]"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4838899020896506`*^9, 3.4838899661870923`*^9}, {
  3.483890044082204*^9, 3.483890102491818*^9}, {3.4838902719057646`*^9, 
  3.483890287437611*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.4838899534832354`*^9, 3.48388996726528*^9}, {
   3.483890058004881*^9, 3.483890104038782*^9}, 3.4838902922034187`*^9, 
   3.617961304397047*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Generalized de Broglie formula
p \[Equal] {m \[Gamma] c, m \[Gamma] v} \[Equal] {e/c, p} \[Equal] h {f/c, 1/\
\[Lambda]} \[Equal] h k\
\>", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lor", "[", 
   RowBox[{
    RowBox[{"-", "0.0"}], " ", "c"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ElectronMass", " ", "SpeedOfLight"}], ",", "0", ",", "0", ",", 
    "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.452268771340705*^9, 3.4522687973106184`*^9}, {
   3.452268916222195*^9, 3.452268949833076*^9}, {3.4522693322408323`*^9, 
   3.452269359476427*^9}, 3.452269522686864*^9, {3.4522695968620615`*^9, 
   3.452269596908939*^9}, {3.4522696376138873`*^9, 3.4522696530052013`*^9}, {
   3.452269719695689*^9, 3.452269719758192*^9}, 3.4522698767652254`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox[
     RowBox[{"2.7309240656098246`*^-22", " ", "Kilogram", " ", "Meter"}], 
     "Second"]}], ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.45226877524713*^9, 3.4522687981856575`*^9}, {
   3.4522689226443577`*^9, 3.452268950551858*^9}, 3.4522691464668846`*^9, {
   3.4522693484759345`*^9, 3.452269360101455*^9}, 3.452269523561903*^9, {
   3.4522695719390697`*^9, 3.4522695986902685`*^9}, {3.4522696389108205`*^9, 
   3.452269653755235*^9}, {3.452269690850647*^9, 3.452269720664483*^9}, 
   3.452269877484008*^9, 3.6179613045062475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Convert", "[", 
     RowBox[{"#", ",", 
      RowBox[{"1", "/", "Meter"}]}], "]"}], "&"}], ",", 
   RowBox[{"%", "/", "PlanckConstant"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452268953630121*^9, 3.4522689727872295`*^9}, {
  3.4522694602621922`*^9, 3.452269475372244*^9}, {3.45226953465615*^9, 
  3.452269568673299*^9}, {3.452269685741043*^9, 3.452269686256691*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["4.121484521359139`*^11", "Meter"], ",", "0.`", ",", "0.`", 
   ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.452268973740397*^9, 3.452269147701315*^9, 3.4522694759660206`*^9, 
   3.452269530687222*^9, {3.452269572829735*^9, 3.4522696005028496`*^9}, {
   3.4522696918975687`*^9, 3.452269721633276*^9}, 3.452269878359047*^9, 
   3.6179613045218477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "SpeedOfLight"}]], "Input",
 CellChangeTimes->{{3.452269130669302*^9, 3.452269143888644*^9}, {
  3.452269581830138*^9, 3.4522695825489206`*^9}}],

Cell[BoxData[
 FractionBox["1.2355899752672097`*^20", "Second"]], "Output",
 CellChangeTimes->{{3.4522691360601683`*^9, 3.452269153904718*^9}, {
   3.452269583767725*^9, 3.452269602831079*^9}, {3.4522697072576323`*^9, 
   3.4522697222895555`*^9}, 3.4522698790778294`*^9, 3.6179613045218477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lor", "[", 
   RowBox[{
    RowBox[{"-", "0.6"}], " ", "c"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ElectronMass", " ", "SpeedOfLight"}], ",", "0", ",", "0", ",", 
    "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.452268771340705*^9, 3.4522687973106184`*^9}, {
   3.452268916222195*^9, 3.452268949833076*^9}, {3.4522693322408323`*^9, 
   3.452269359476427*^9}, 3.452269522686864*^9, {3.4522695968620615`*^9, 
   3.452269596908939*^9}, {3.4522696376138873`*^9, 3.4522696530052013`*^9}, {
   3.452269719695689*^9, 3.452269719758192*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox[
     RowBox[{"3.4136550820122805`*^-22", " ", "Kilogram", " ", "Meter"}], 
     "Second"]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox[
     RowBox[{"2.0481930492073684`*^-22", " ", "Kilogram", " ", "Meter"}], 
     "Second"]}], ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.45226877524713*^9, 3.4522687981856575`*^9}, {
   3.4522689226443577`*^9, 3.452268950551858*^9}, 3.4522691464668846`*^9, {
   3.4522693484759345`*^9, 3.452269360101455*^9}, 3.452269523561903*^9, {
   3.4522695719390697`*^9, 3.4522695986902685`*^9}, {3.4522696389108205`*^9, 
   3.452269653755235*^9}, {3.452269690850647*^9, 3.452269720664483*^9}, 
   3.45226988020288*^9, 3.617961304537448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Convert", "[", 
     RowBox[{"#", ",", 
      RowBox[{"1", "/", "Meter"}]}], "]"}], "&"}], ",", 
   RowBox[{"%", "/", "PlanckConstant"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452268953630121*^9, 3.4522689727872295`*^9}, {
  3.4522694602621922`*^9, 3.452269475372244*^9}, {3.45226953465615*^9, 
  3.452269568673299*^9}, {3.452269685741043*^9, 3.452269686256691*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["5.1518556516989233`*^11", "Meter"], ",", 
   FractionBox["3.091113391019354`*^11", "Meter"], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.452268973740397*^9, 3.452269147701315*^9, 3.4522694759660206`*^9, 
   3.452269530687222*^9, {3.452269572829735*^9, 3.4522696005028496`*^9}, {
   3.4522696918975687`*^9, 3.452269721633276*^9}, 3.45226988099979*^9, 
   3.6179613045530477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", "SpeedOfLight"}]], "Input",
 CellChangeTimes->{{3.452269130669302*^9, 3.452269143888644*^9}, {
  3.452269581830138*^9, 3.4522695825489206`*^9}}],

Cell[BoxData[
 FractionBox["1.544487469084012`*^20", "Second"]], "Output",
 CellChangeTimes->{{3.4522691360601683`*^9, 3.452269153904718*^9}, {
   3.452269583767725*^9, 3.452269602831079*^9}, {3.4522697072576323`*^9, 
   3.4522697222895555`*^9}, 3.4522698816560698`*^9, 3.6179613045530477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Out", "[", "52", "]"}], "/", 
  RowBox[{"Out", "[", "49", "]"}]}]], "Input",
 CellChangeTimes->{{3.4522698853437347`*^9, 3.452269903063279*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["4.686788211126456`", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "\[Theta]"}], "-", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"-", 
         FractionBox["\[Theta]", 
          SuperscriptBox["\[Omega]", "2"]]}], "]"}]}]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["4.686788211126456`", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "\[Theta]"}], "+", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"-", 
         FractionBox["\[Theta]", 
          SuperscriptBox["\[Omega]", "2"]]}], "]"}]}]}]], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4522699041727037`*^9, 3.6179613045686474`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"e", " ", "/", "c"}], ",", "p", ",", "0", ",", "0"}], "}"}], 
     "\[Equal]", 
     RowBox[{"h", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "/", "c"}], ",", 
        RowBox[{"1", "/", "\[Lambda]"}], ",", "0", ",", "0"}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "p"}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(c\\\\ m\\)\\/\\@\\(1 - \\(r\\^2\\\\ \
\[Omega]\\^2\\)\\/c\\^2\\), \\(\\(-\\(\\(\\(m\\\\ r\\\\ \[Omega]\\\\ \
\\(\\(Sin[\\(\\(t\\\\ \[Omega]\\)\\)]\\)\\)\\)\\/\\@\\(1 - \\(r\\^2\\\\ \
\[Omega]\\^2\\)\\/c\\^2\\)\\)\\)\\)\\), \\(m\\\\ r\\\\ \[Omega]\\\\ \
\\(\\(Cos[\\(\\(t\\\\ \[Omega]\\)\\)]\\)\\)\\)\\/\\@\\(1 - \\(r\\^2\\\\ \
\[Omega]\\^2\\)\\/c\\^2\\), 0}\\)\[NoBreak] is not a valid variable. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/ivar\\\", \
ButtonNote -> \\\"Solve::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6179613046310472`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox["e", "c"], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"c", " ", "m"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}]]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"]}], 
           SuperscriptBox["c", "2"]]}]]]}], ",", 
      FractionBox[
       RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}]]], ",", "0"}], "}"}], ",", "0", ",", 
    "0"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"h", " ", "m", " ", "r", " ", 
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}], 
            SuperscriptBox["c", "2"]]}], ")"}]}]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"h", " ", "m", " ", "r", " ", 
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}], 
            SuperscriptBox["c", "2"]]}], ")"}]}]]}], ",", "0"}], "}"}], ",", 
    FractionBox["h", "\[Lambda]"], ",", "0", ",", "0"}], "}"}]}]], "Output",
 CellChangeTimes->{3.6179613046310472`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"e", " ", "/", "c"}], ",", "p", ",", "0", ",", "0"}], "}"}], 
     "\[Equal]", 
     RowBox[{"h", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "/", "c"}], ",", 
        RowBox[{"1", "/", "\[Lambda]"}], ",", "0", ",", "0"}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "\[Lambda]"}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({0, \\(\\(-\\(\\(\\(m\\\\ r\\\\ \
\[Omega]\\^2\\\\ \\(\\(Cos[\\(\\(t\\\\ \[Omega]\\)\\)]\\)\\)\\)\\/\\(1 - \\(r\
\\^2\\\\ \[Omega]\\^2\\)\\/c\\^2\\)\\)\\)\\)\\), \\(\\(-\\(\\(\\(m\\\\ r\\\\ \
\[Omega]\\^2\\\\ \\(\\(Sin[\\(\\(t\\\\ \[Omega]\\)\\)]\\)\\)\\)\\/\\(1 - \\(r\
\\^2\\\\ \[Omega]\\^2\\)\\/c\\^2\\)\\)\\)\\)\\), 0}\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"Solve::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.617961304693448*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox["e", "c"], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"c", " ", "m"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}]]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["\[Omega]", "2"]}], 
           SuperscriptBox["c", "2"]]}]]]}], ",", 
      FractionBox[
       RowBox[{"m", " ", "r", " ", "\[Omega]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], 
          SuperscriptBox["c", "2"]]}]]], ",", "0"}], "}"}], ",", "0", ",", 
    "0"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"h", " ", "m", " ", "r", " ", 
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}], 
            SuperscriptBox["c", "2"]]}], ")"}]}]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"h", " ", "m", " ", "r", " ", 
         SuperscriptBox["\[Omega]", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"t", " ", "\[Omega]"}], "]"}]}], 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}], 
            SuperscriptBox["c", "2"]]}], ")"}]}]]}], ",", "0"}], "}"}], ",", 
    FractionBox["h", "\[Lambda]"], ",", "0", ",", "0"}], "}"}]}]], "Output",
 CellChangeTimes->{3.617961304693448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["In moving frame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", " ", "\[Gamma]", " ", "c"}], ",", 
     RowBox[{"m", " ", "\[Gamma]", " ", "v"}], ",", "0", ",", "0"}], "}"}], 
   "/", "h"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", "m", " ", "\[Gamma]"}], "h"], ",", 
   FractionBox[
    RowBox[{"m", " ", "v", " ", "\[Gamma]"}], "h"], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179613047090483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"k", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 FractionBox["h", 
  RowBox[{"m", " ", "v", " ", "\[Gamma]"}]]], "Output",
 CellChangeTimes->{3.617961304724648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", "\[Rule]", 
       RowBox[{"\[Gamma]", "[", "v", "]"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"v", "\[Rule]", 
      RowBox[{".5", "c"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "1"}], ",", 
     RowBox[{"m", "\[Rule]", "1"}], ",", 
     RowBox[{"h", "\[Rule]", "1"}]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1547005383792517`", ",", "0.5773502691896258`", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617961304724648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"mink", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "x", ",", "0", ",", "0"}], "}"}], ",", "k0"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "101"}], ",", 
   RowBox[{"Contours", "\[Rule]", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "6"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx03duOc1ue5uUZ0cVmFTsT5A1wgtgJIZrdmeMa+hCxUwsWuwNuBLETalHs
ztcl+AyxAGFUgFFKn1TSJyHLCGUqSyk7Hbibpukmyl8+46/3/brqoK2nw2s6
Ykyv9Ut7jjnGP/yX//2/9G++btv2B39p2/7ssf/vv/ijP/u/n/bpw/I/+xf/
7P9+rp8f93mU0/Lz6X/xl8s/Pv/vy/LzH/+jP1n+4+f/fV3+W8//+z/q+ec6
/mX5f3n+8//n8r/1fL3/a/nl+f/+avm/fB7v18v/3PN4v1n+357H+9Plf+d5
vN/W8a7L/+vz+dc6/m35337+87+r17svfzsnH/X64//qebz/u36fx/I//zze
X13+C8//968tn57HG//Xz+P9P8v/7vN4f335X3ge7/9d/oPn//s3lv/35/HG
/83zeP/f8r/3PN7fXP4Xn8f7W/X3bu85PuNv4zn+9v57Wf72/hv//qjL395v
42/vr/E/8zzeX1j+z5/HG//N5/tv/G88j/cHy//z83jjf/p5vL9j+a88jzf+
G8/jjf/y83h/5/L/9Dze+J96Hu/vWv7Pnscb//Xn8cb/+vN4f/fy//g83vif
fB7vh+X/9Hm88V97Hm/8rz6P94fL//3zeON//Hm8v2f5P34eb/x4Hm/8Lz+P
9/cu/3fP443/0efx/r7l//B5vPHH83jjf+l5vL9/+b99Hm/8jzyP9w8s/wfP
441/9zze+Nv47Jb/tefxx9/Ga/w/PF9v/G38xv/E83j/4PK38Rz/J8/jjb+N
7/ivPo83/jbeb8v/yvN442/jP/75ebzxt/Mx/seex/uHlr+dn/F/9Dze+Nv5
Gn/7v1+UpyN/+8fDsp7kz4/77NBpWU9YT1hPWE9YT/L55zr+ZVlPWE9YT1hP
WE9YT1hP8njXZT3J49+W9SRf776sJ/n6Yz3J3+exrCesJ6wnrCesJ6wnrCes
J6wnrCesJ/n3bu85PmM9yfffy7Ke5PvvdVlP8v011hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT
1hPWE9aTHJ/dsp7keI31JMdvrCc5nmM9yfEd60mO99uynuT4j/Ukz8dYT/L8
jPUkz9dYT/68zyF/+47MY/bE//9xOXtyqJ4cqieH6smhenKonhyqJ4fqyaF6
cqieHKonh+rJoXpyqJ4cqieH6smhenKonhyqJ4fqyaF6cqieHKonh+rJoXpy
qJ4cqieH6smhenKonhyqJ4fqyaF6cqieHKonh+rJoXpyqJ4cqifef+PsyaF6
cqieHKonh+rJoXpyqJ4cqieH6smhenKonhyqJ4fqyaF6cqieHKonh+rJoXpy
qJ4cqieH6smhenKonhyqJ4fqyaF6cqieHKonh+rJoXpyqJ4cqieH6smhenKo
nhyqJ4fqyaF6cqieHKonh+rJoXpyqJ4cqieH6smhenKonhyqJ4fqyaF6cqie
HKonh+rJoXpyqJ4cqifff4+lJ90N7kc9ye/BTst6wnrCz3/8syesJ6wn+fxz
Hf+yrCesJ6wnrCesJ6wnrCd5vOuynuTxb8t6kq93X9aTfP2xnuTv81jWE9YT
1hPWE9YT1hPWE9YT1hPWE9aT/Hu39xyfsZ7k++5lWU/y/fe6rCf5/hrrCesJ
6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnr
CesJ6wnrCesJ6wnrCesJ60mOz25ZT3K8xnqS4zfWkxzPsZ7k+I71JMf7bVlP
cvzHepLnY6wneX7GepLna6wnf951kPx8Mp87uhv583nMzyfH+nxyrM8nx/p8
cqzPJ8f6fHKszyfH+nxyrM8nx/p8cqzPJ8f6fHKszyfH+nxyrM8nx/p8cqzP
J8f6fHKszyfH+nxyrM8nx/p8cqzPJ8f6fHKszyfH+nxyrM8nx/p8cqzPJ8f6
fHKszyfH+nxyrM8nx/p8cqzPJ8f6fHKszyfH+nxyXD3J9904P58c6/PJsT6f
HOvzybE+nxzr88mxPp8c6/PJsT6fHOvzybE+nxzr88mxPp8c6/PJsT6fHOvz
ybE+nxzr88mxPp8c6/PJsT6fHOvzybE+nxzr88mxPp8c6/PJsT6fHOvzybE+
nxzr88mxPp8c6/PJsT6fHOvzybE+nxzr88mxPp8c6/PJsT6fHOvzybE+nxzr
88mxPp8c6/PJsT6fHOvzybE+nxzr88mxPp8c6/PJsT6fHOvzybE+nxzr88mx
Pp8c6/PJ99fR9aS/t+rPHd0N7kc9YT3h5z++rsefVk9YT/L55zr+ZTmvx5/2
eT3+tM/r8ad9Xo8/7fN6/Gmf1+NP+7wef9rn9fjTPq/Hn/Z5Pf60z+vxp31e
jz/t83r8aZ/X40/7vB5/2uf1+NM+r8ef9nk9/rTP6/GnfV6PP+3zevxpn9fj
T/u8Hn/a5/X40z6vx5/2eT3+tM/r8ad9Xo8/7fN6/Gmf1+NPqyesJ/zt8XVZ
T1hPOK/Hn/Z5Pf60z+vxp31ejz/t83r8aZ/X40/7vB5/2uf1+NM+r8ef9nk9
/rTP6/GnfV6PP+3zevxpn9fjT/u8Hn/a5/X40z6vx5/2eT3+tM/r8ad9Xo8/
7fN6/Gmf1+NP+7wef9rn9fjTPq/Hn/Z5Pf60z+vxp31ejz/t83r8aZ/X40/7
vB5/2uf1+NM+r8ef9nk9/rTP6/GnfV6PP+3zevxpn9fjT/u8Hn/a5/X40z6v
x5/2eT3+tM/r8ad9Xo8/7fN6/Gmf1+NP+7wef9rn9fjTPq/Hn/Z5Pf60z+vx
p31ej/fv2y/KMw9LT9KH7763yp8fv+sG96OesJ6wnrCe5PPPddzLsp6wnrCe
sJ6wnrCesJ7k8a7LepLHvy3rSb7efVlP8vXHepK/z2NZT1hPWE9YT1hPWE9Y
T1hPWE9YT1hP8u/d3nN8xnrCesJ6wt8O97qsJ6wnrCesJ6wnrCesJ6wnrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wn
rCesJ6wnOT67ZT3J8RrrSY7fWE9yPMd6kuM71pMc77dlPcnxH+tJno+xnuT5
GetJnq+xnqRnHq+epA/fXffInx+/+9zR3eB+1BPWE9aTfP65jn9Z1hPWE9YT
1hPWE9YT1pM83nVZT/L4t2U9yde7L+tJvv5YT/L3eSzrCesJ6wnrCesJ6wnr
CesJ6wnrCetJ/r3be47PWE9YT1hPWE/42+NYT1hPWE9YT1hPWE9YT1hPWE9Y
T1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hP
WE9YT3J8dst6kuM11pMcv7Ge5HiO9STHd6wnOd5vy3qS4z/WkzwfYz3J8zPW
kzxfYz1Jz30gepI+fHfdPH9+/O57K9aT7gb3o56wnuTzznX8y7KesJ6wnrCe
sJ6wnrCe5PGuy3qSx78t60m+3n1ZT/L1x3qSv89jWU9YT1hPWE9YT1hPWE9Y
T1hPWE9YT/Lv3d5zfMZ6wnrCesJ6wt/eb2M9YT1hPWE9YT1hPWE9YT1hPWE9
YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1h
PWE9yfHZLetJjtdYT3L8xnqS4znWkxzfsZ7keL8t60mO/1hP8nyM9STPz1hP
8nyN9SQ99xHqSfrw3byr/Pnxu+serCesJ90N7kc9yeef6/iXZT1hPWE9YT1h
PWE9YT3J412X9SSPf1vWk3y9+7Ke5OuP9SR/n8eynrCesJ6wnrCesJ6wnrCe
sJ6wnrCe5N+7vef4jPWE9YT1hPWE9YS/PY71hPWE9YT1hPWE9YT1hPWE9YT1
hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE
9STHZ7esJzleYz3J8RvrSY7nWE9yfMd6kuP9tqwnOf5jPcnzMdaTPD9jPcnz
NdaT9NyHrifpw3LP4+15WHrCesJ60p87uhvcj3qSx78s6wnrCesJ6wnrCesJ
60ke77qsJ3n827Ke5Ovdl/UkX3+sJ/n7PJb1hPWE9YT1hPWE9YT1hPWE9YT1
hPUk/97tPcdnrCesJ6wnrCesJ/zt/TXWE9YT1hPWE9YT1hPWE9YT1hPWE9YT
1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1pMc
n92ynuR4jfUkx2+sJzmeYz3J8R3rSY7327Ke5PiP9STPx1hP8vyM9STP11hP
0rOOSX7fda7vu871fde5vu861/dd5/q+61zfd833Vqwn3Y18/rmOf1nO77vO
9X3Xub7vOtf3Xef6vutc33ed6/uuc33fda7vu871fde5vu861/dd5/q+61zf
d53r+65zfd91ru+7zvV917m+7zrX913n+r7rXN93nev7rnN933Wu77vO9X3X
ub7vOtf3Xef6vutc33ed6/uuc33fda7vu871fdd59YTz+65zfd91ru+7zvV9
17m+7zrX913n+r7rXN93nev7rnN933Wu77vO9X3Xub7vOtf3Xef6vutc33ed
6/uuc33fda7vu871fde5vu861/dd5/q+61zfd53r+65zfd91ru+7zvV917m+
7zrX913n+r7rXN93nev7rnN933Wu77vO9X3Xub7vOtf3Xef6vutc33ed6/uu
c33fda7vu871fde5vu861/dd5/q+61zfd53r+65zfd91ru+7zvV917m+7/p+
Hayc33Wp+V2Xmt91qfldl5rfNfOuWE+yA3/y3fdWrCfdjTz+POb8rkvN77rU
/K5Lze+61PyuS83vutT8rkvN77rU/K5Lze+61PyuS83vutT8rkvN77rU/K5L
ze+61PyuS83vutT8rkvN77rU/K5Lze+61PyuS83vutT8rkvN77rU/K5Lze+6
1PyuS83vutT8rkvN77rU/K7L6gnrCef8rkvN77rU/K5Lze+61PyuS83vutT8
rkvN77rU/K5Lze+61PyuS83vutT8rkvN77rU/K5Lze+61PyuS83vutT8rkvN
77rU/K5Lze+61PyuS83vutT8rkvN77rU/K5Lze+61PyuS83vutT8rkvN77rU
/K5Lze+61PyuS83vutT8rkvN77rU/K5Lze+61PyuS83vutT8rkvN77rU/K5L
ze+61PyuS83vutT8rkvN77rU/K5Lze+61Pyu79dR1JNet6TvO+/7Bvu+j563
2/Ou+rp5X/fo7636c0d3g/tRT1hPWE9YT1hPWE/yeNdlPcnj35b1JF/vvqwn
+fpjPcnf57GsJ6wnrCesJ6wnrCesJ6wnrCesJ6wn+fdu7zk+Yz3J99/Lsp7k
++91WU/y/TXWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1pMcn92ynuR4jfUkx2+sJzme
Yz3J8R3rSY7327Ke5PiP9STPx1hP8vyM9STP11hP/rx1ePWk173qdUv6vvO+
b7Dv++h5uz3vqq+b93WP/t6qP3d0N7gf9YT1hPWE9YT1JI93XdaTPP5tWU/y
9e7LepKvP9aT/H0ey3rCesJ6wnrCesJ6wnrCesJ6wnrCepJ/7/ae4zPWk3z/
vSzrSb7/XpefDz+Ov72/xnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6
wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6kuOzW9aTHK+x
nuT4jfUkx3OsJzm+Yz3J8X5b1pMc/7Ge5PkY60men7Ge5Pka68mft467nvS6
ib3uVa9b0ved932Dfd9Hz9vteVd93byve/T3Vv25o7vB/agnrCesJ6wneZzr
sp7k8W/LepKvd1/Wk3z9sZ7k7/NY1hPWE9YT1hPWE9YT1hPWE9YT1hPWk/x7
t/ccn7Ge5PvvZVlP8v33uvzt/TbWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWkxyf
3bKe5HiN9STHb6wnOZ5jPcnxHetJjvfbsp7k+I/1JM/HWE/y/Iz1JM/X+Pnw
2ZP07AOiJ73ubq+b2Ote9bolfd953zfY9330vN2ed9XXzfu6R39v1Z87uhvc
j3rCesJ6kse7LutJHve2rCf5evdlPcnXH+tJ/j6PZT1hPWE9YT1hPWE9YT1h
PWE9YT1hPcm/d3vP8RnrSb7/Xpb1JN9/r8t6ku+vsZ6wnrCesJ6wnrCesJ6w
nrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCe
sJ6wnrCe5PjslvUkx2usJzl+Yz3J8RzrSY7vWE9yvN+W9STHf6wneT7GepLn
Z6wneb7GepKefaT0pNdt73V3e93EXveq1y3p+877vsG+76Pn7fa8q75u3tc9
+nur/tzR3eB+1BPWkzzedVlP8vi3ZT3J17kv60m+/lhP8vd5LOsJ6wnrCesJ
6wnrCesJ6wnrCesJ60n+vdt7js9YT/L997KsJ/n+e13Wk3x/jfWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1
hPWE9YT1hPWE9YT1JMdnt6wnOV5jPcnxG+tJjudYT3J8x3qS4/22rCc5/mM9
yfMx1pM8P2M9yfM11pP07EOoJ73vR6/b3uvu9rqJve5Vr1vS9533fYN930fP
2+15V33dvK979PdW/bmju8H9qCd5vOuynuTxb8t6kq93X9aTfN2xnuTv81jW
E9YT1hPWE9YT1hPWE9YT1hPWE9aT/Hu39xyfsZ7k++9lWU/y/fe6rCf5/hrr
CesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ
6wnrCesJ6wnrCesJ6wnrCesJ60mOz25ZT3K8xnqS4zfWkxzPsZ7k+I71JMf7
bVlPcvzHepLnY6wneX7GepLna6wn6dnHVk9636je96PXbe91d3vdxF73qtct
6fvO+77Bvu+j5+32vKu+bt7XPfp7q/7c0d3gftQT1pM8/m1ZT/L17st6kq8/
1pP8PR7LesJ6wnrCesJ6wnrCesJ6wnrCesJ6kn/v9p7jM9aTfP+9LOtJvv9e
l58PP46/vb/GesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrC
esJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnqS47Nb1pMcr7Ge5PiN9STH
c6wnOb5jPcnxflvWkxz/sZ7k+RjrSZ6fsZ7k+RrrSXr2Qc/r8de6Hn+t6/HX
uh5/revx17oef63r8de6Hn+t6/Fzn3nfN9j3ffS83Z531dfN+7pHf2/Vnzu6
G3m8eczr8dfVE87r8dfVE87r8dfVE87r8dfVE87r8de6Hn+t6/HXuh5/revx
17oef63r8de6Hn+t6/HXuh5/revx17oef63r8de6Hn+t6/HXuh5/revx17oe
f63r8de6Hn+t6/HXuh5/revx17oef63r8de6Hn+t6/HXuh5/revx17oef63r
8de6Hn+t6/HXuh5/revx17oef63r8de6Hn+t6/HXuh5/revx17oef63r8de6
Hn+t6/HXuh5/revx17oef63r8de6Hn+t6/HXuh5/revx17oef63r8de6Hn+t
6/HXuh5/revx17oef63r8de6Hn+t6/HXuh5/revx17oef63r8de6Hn+t6/HX
uh5/revx17oef1096X3Pe9/a3new943qfT963fZed7fXTex1r3rdkr7vvO8b
7Ps+et5uz7vq6+Z93aO/t+rPHd0N7kc9YT3J17sv60m+/lhP8vd5LOsJ6wnr
CesJ6wnrCesJ6wnrCesJ60n+vdt7js9YT/L997KsJ/n+e13Wk3x/jfWE9YT1
hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1JMdnt6wnOV5jPcnxG+tJjudYT3J8x3qS4/22rCc5
/mM9yfMx1pM8P2M9yfM11pO0+V23mt91q/ldt5rfdav5Xbea33Wr+V23mt91
q/ldt5rfNete5fPPdfy5D73vI+z7QHJ+18y76uvmfd2jv7fqzx3djTz+POb8
rtvqCef8rtvqCef8rtvqCef8rlvN77rV/K5bze+61fyuW83vutX8rlvN77rV
/K5bze+61fyuW83vutX8rtvqSb7/XpZzftet5nfdan7XreZ33Wp+163md91q
ftet5nfdan7XreZ33Wp+163md91qftet5nfdan7XreZ33Wp+163md91qftet
5nfdan7XreZ33Wp+163md91qftet5nfdan7XreZ33Wp+163md91qftet5nfd
an7XreZ33Wp+163md91qftet5nfdan7XreZ33Wp+163md91qftet5nfdan7X
reZ33Wp+163md91qftet5nfdan7XreZ33Wp+163md91qftet5nfdan7XbfUk
96H9qfalPXy373nvW9v7Dva+Ub3vR6/b3uvu9rqJve5Vr1vS9533fYN930fP
2+15V33dvK979PdW/bmju8H9qCesJ/n6Yz3J3+exrCesJ6wnrCesJ6wnrCes
J6wnrCesJ/n3bu85LmM9yfffy7Ke5Pvvdfn58ONYT1hPWE9YT1hPWE9YT1hP
WE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9Y
T1hPWE9YT3J8dst6kuM11pMcv7Ge5HiO9STHd6wnOd5vy3qS4z/WkzwfYz3J
8zPWkzxfYz1Jmy98r/nC95ovfK/5wveaL3yv+cL3mi98r/nC95ovfK/5wrPu
bj7/XMefdbB6HZO+Dz3nC899Hz1vt+dd9XXzvu7R31v1547uRr7ePOZ84fvq
Ced84fvqCed84XvNF77XfOF7zRe+13zhe80Xvtd84XvNF77XfOF7zRe+13zh
e80Xvq+e5HiOc77wveYL32u+8L3mC99rvvC95gvfa77wveYL32u+8L3mC99r
vvC95gvfa77wveYL32u+8L3mC99rvvC95gvfa77wveYL32u+8L3mC99rvvC9
5gvfa77wveYL32u+8L3mC99rvvC95gvfa77wveYL32u+8L3mC99rvvC95gvf
a77wveYL32u+8L3mC99rvvC95gvfa77wveYL32u+8L3mC99rvvC95gvfa77w
veYL32u+8L3mC99rvvC95gvfa77wveYL32u+8L3mC99XT/x3TE/Sh2U9yZ8f
v9v3vPet7X0He9+o3vej123vdXd73cRe96rXLen7zvu+wb7vo+ft9ryrvm7e
1z36e6v+3NHd4H7UE9aT/H0ey3rCesJ6wnrCesJ6wnrCesJ6wnrCepJ/5/ae
4zPWk3z/vSzrSb7/Xpf1JN9fYz1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1h
PWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9yfHZLetJ
jtdYT3L8xnqS4znWkxzfsZ7keL8t60mO/1hP8nyM9STPz1hP8nyNnw+fPUm7
/+Sj7j/5qPtPPur+k4+6/+Sj7j/5fh90PWE9YT1hPcnnn+v4sw5vr6PY62Dl
/Sff34ee9598fx9Iz+PteVh9Hb2vg/T3WP05pDvSj3n/yfSE8/6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP5me5PiM8/6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPu
P/mo+08+6v6Tj7r/5KPuP/mo+08+6v6Tj7r/5KPuP5me+O+UnqQPy3qSPz8u
60muq/7L7/Y9731re9/B3jeq9/3oddt73d1eN7HXvep1S/q+875vsO/76Hm7
Pe+qr5v3dY/+3qo/d3Q3uB/1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9ST/3u09
x2esJ/n+e1nWk3z/vS7rSb6/xnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrC
esJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6kuOzW9aT
HK+xnuT4jfUkx3OsJzm+Yz3J8X5b1pMc/7Ge5PkY60men7Ge5Pka60na/YyP
up/xsXrCeT/jY/WE9YT1hPWEn//4H80+6HrCepLPP9fxZx+QXse91+HN+xln
3au8DvGb+t/9cx9630fY94H0PN6eh9XX0fs6SH+P1Z9DuiP9mPczPup+xkfd
z/io+xkfdT/jo+5nfNT9jI+6n/FR9zM+6n7GR93P+Fg9yfEZ5/2Mj7qf8bF6
ku+/1+Xnw49jPeG8n/FR9zM+6n7GR93P+Kj7GR91P+Oj7md81P2Mj7qf8VH3
Mz7qfsZH3c/4qPsZH3U/46PuZ3zU/YyPup/xUfczPup+xkfdz/io+xkfdT/j
o+5nfNT9jI+6n/FR9zM+6n7GR93P+Kj7GR91P+Oj7md81P2Mj7qf8VH3Mz7q
fsZH3c/4qPsZH3U/46PuZ3zU/YyPup/xUfczPup+xkfdz/io+xkfdT/jo+5n
fNT9jI+6n/FR9zM+6n7GR93P+Fg9SW+b/w7pSfqwrCf58+OynuS+Tr9cfr7s
Z09yH8E/+W7f8963tvcd7H2jet+PXre9193tdRN73atet6TvO+/7Bvu+j563
2/Ou+rp5X/fo7636c0d3g/tRT1hPWE9YT1hPWE9YT1hPWE9YT/Lv3d5zfMZ6
ku+/l2U9yfff6/K399tYT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9Y
T1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT3J8dst6kuM1
1pMcv7Ge5HiO9STHd6wnOd5vy3qS4z/WkzwfYz3J8zPWkzxfYz1Jb5v/7uhJ
+rCsJ/nz47Ke5L6Av1zWk9yH9k+W9aT3Pe99a3vfwd43qvf96HXbe93dXjex
173qdUv6vvO+b7Dv++h5uz3vqq+b93WP/t6qP3d0N7gf9YT1hPWE9YT1hPWE
9YT1hPUk/97tPcdnrCf5/ntZ1pN8/70u60m+v8Z6wnrCesJ6wnrCesJ6wnrC
esJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6
wnrCepLjs1vWkxyvsZ7k+I31JMdzrCc5vmM9yfF+W9aTHP+xnuT5GOtJnp+x
nuT5Gj8fPnuS/izA7/87oyfpw7Ke5M+Py78/Wu0r+8tlPcl9zP9kWU9YT3rf
8963tvcd7H2jet+PXre9193tdRN73atet6TvO+/7Bvu+j5632/Ou+rp5X/fo
7636c0d3g/tRT1hPWE9YT1hPWE9YT1hP8u/d3nN8xnqS77+XZT3J99/rsp7k
+2usJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnrCc5PrtlPcnxGutJjt9YT3I8x3qS4zvW
kxzvt2U9yfEf60mej7Ge5PkZ60mer7GepLfNf1f0JH1Y1pP8+XFZT3Jf8l8u
6wnrCT9/rc+esJ7k88/f7Xve+9b2voO9b1Tv+9Hrtve6u71uYq971euW9H3n
fd9g3/fR83Z73lVfN+/rHv29VX/u6G5wP+oJ6wnrCesJ6wnrCetJ/r3be47P
WE/y/feyrCf5/ntd1pN8f431hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9STHZ7esJzle
Yz3J8RvrSY7nWE9yfMd6kuP9tqwnOf5jPcnzMdaTPD9jPcnzNdaT9Lb574ie
pA/LepI/Py7rCesJ6wk///HPnrCesJ7k8891/Mt3+573vrW972DvG9X7fvS6
7b3ubq+b2Ote9bolfd953zfY9330vN2ed9XXzfu6R39v1Z87uhvcj3rCesJ6
wnrCesJ6kn/v9p7jM9aTfP+9LOtJvv9el58PP471hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1
hPWE9YT1JMdnt6wnOV5jPcnxG+tJjudYT3J8x3qS4/22rCc5/mM9yfMx1pM8
P2M9yfM11pP0tvnvhp6kD8t6kj8/LusJ6wk/X/azJ6wnrCesJ/n8cx3/sqwn
ve9571vb+w72vlG970ev297r7va6ib3uVa9b0ved932Dfd9Hz9vteVd93byv
e/T3Vv25o7vB/agnrCesJ6wnrCf5927vOT5jPcn338uynuT773X52/ttrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wn
rCesJ6wnrCesJ6wnrCesJ6wnrCc5PrtlPcnxGutJjt9YT3I8x3qS4zvWkxzv
t2U9yfEf60mej7Ge5PkZ60mer7GepLfNfyf0JH1Y1pP8+XFZT/j59M+esJ6w
nrCesJ7k8891/MuynrCe9L7nvW9t7zvY+0b1vh+9bnuvu9vrJva6V71uSd93
3vcN9n0fPW+35131dfO+7tHfW/Xnju4G96OesJ6wnrCe5N+7vef4jPUk338v
y3qS77/XZT3J99dYT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hP
WE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9yfHbLepLjNdaTHL+x
nuR4jvUkx3esJzneb8t6kuM/1pM8H2M9yfMz1pM8X+Pnw2dP0tvmvwt6kj4s
60n+/Lj87WinZT1hPWE9YT1hPcnnn+v4l2U9YT3JfTp+9d2+571vbe872PtG
9b4fvW57r7vb6yb2ule9bknfd973DfZ9Hz1vt+dd9XXzvu7R31v1547uBvej
nrCesJ7k37u95/iM9STffy/LepLvv9dlPcn311hPWE9YT1hPWE9YT1hPWE9Y
T1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hP
WE9YT3J8dst6kuM11pMcv7Ge5HiO9STHd6wnOd5vy3qS4z/WkzwfYz3J8zPW
kzxfYz1Jb5v/DuhJ+rCsJ/nz47KesJ6wnrCe8PPX+uwJ60k+/1zHvyzrCetJ
7vP0q1pX/dff7Xve+9b2voO9b1Tv+9Hrtve6u71uYq971euW9H3nfd9g3/fR
83Z73lVfN+/rHv29VX/u6G5wP+oJ60n+vdt7js9YT/L997KsJ/n+e13Wk3x/
jfWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1hPWE9YT1JMdnt6wnOV5jPcnxG+tJjudYT3J8x3qS
4/22rCc5/mM9yfMx1pM8P2M9yfM11pP0tvn3Xk/Sh2U9yZ8fl/WE9YT1hJ//
+GdPWE9YT/L55zr+ZVlPWE9yn8Bf1b4cv651cH/z3b7nvW9t7zvY+0b1vh+9
bnuvu9vrJva6V71uSd933vcN9n0fPW+35131dfO+7tHfW/Xnju4G96Oe5N+7
vef4jPUk338vy3qS77/X5efDj2M9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9
YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9yfHZ
LetJjtdYT3L8xnqS4znWkxzfsZ7keL8t60mO/1hP8nyM9STPz1hP8nyN9SS9
bf4915P0YVlP8ufHZT1hPeHny372hPWE9YT1JJ9/ruNflvWE9ST3mf1V7ev0
61pH/Te1buGffrfvee9b2/sO9r5Rve9Hr9ve6+72uom97lWvW9L3nfd9g33f
R8/b7XlXfd28r3v091b9uaO7wf2oJzk+Yz3J99/Lsp7k++91+dv7bawnrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wn
rCesJ6wnrCesJ6wnrCesJ6wnOT67ZT3J8RrrSY7fWE9yPMd6kuM71pMc77dl
PcnxH+tJno+xnuT5GetJnq+xnqStV7+953r1fFjO9er9/LisJ/x8+lqvfnvX
E9YT1hPWk3z+uY5/Wc716rf3XK/ePuS/Ws716u2z8ZtlPcl1pn5bx/t+39o8
/uxD2PtI9T4gvY57r8Pb6yj2Oli9jknfh973EfZ9ID2Pt+dh9XX0vg7S32P1
55DuSD/mevXGc5zr1Xv/jb89vC7rSb6/xrle/fae69Vv77le/fae69Vv77le
/fae69Vv77le/fae69Vv77le/fae69Vv77le/fae69Vv77le/fae69Vv77le
/fae69Vv77le/fae69Vv77le/fae69Vv77le/fae69Vv77le/fae69Vv77le
/fae69Vv77le/fae69Vv77le/fae69Vv77le/fae69Vv77levfHZLed69cZr
nOvVG79xrldvPMe5Xr3xHed69cb7bTnXqzf+41yv3vkY53r1zs8416t3vsbf
Hn5Rtj/j9CR9WM79Gacn/O1op2U9YT1hPWE9YT3J55/r+Jfl3J9xesK5P+P0
JPdx+s2ynuQ6hb+t432/73kef/ax7X0Iex8pPel123vd3V43sde96nVL+r7z
vm+w7/voebs976qvm/d1j/7eqj93dDdyfOYx92ecnuT7b/ztcK/Lz4cfx3rC
uT/j9IRzf8bpCef+jNMTzv0Zpyec+zNOTzj3Z5yecO7POD3h3J9xesK5P+P0
hHN/xukJ5/6M0xPO/RmnJ5z7M05POPdnnJ5w7s84PeHcn3F6wrk/4/SEc3/G
6Qnn/ozTE879GacnnPszTk8492ecnnDuzzg94dyfcXrCuT/j9IRzf8bpSf77
9ovytvn3Vk/Sh2U9yZ8fl/WE9YSfL/vZE9YT1hPWk3z+uY5/WdYT1hPWk9yX
/Ne1D+Bvat+NP611bn9bx7su60nve9771va+g71vVO/70eu297q7vW5ir3vV
65b0fed932Df99HzdnveVV837+se/b1Vf+7obuR4zqOe5PtvrCf5fhs/H/54
rCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnOT67ZT3J8RrrSY7fWE9yPMd6kuM71pMc
77dlPcnxH+tJno+xnuT5GetJnq+xnqS3zb+nepI+LOtJ/vy4rCesJ6wnrCf8
/LU+e8J6ks8/1/Evy3rCesJ6wnqS+8j+pvZt+tNaJ/23dbzrPv87d63j377b
97z3re19B3vfqN73o9dt73V3e93EXveq1y3p+877vsG+76Pn7fa8q75u3tc9
+nur/tzR3cj33zzqSb7/Xpf1JN9fYz1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9
YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9yfHZ
LetJjtdYT3L8xnqS4znWkxzfsZ7keL8t60mO/1hP8nyM9STPz1hP8nyN9SS9
bf691JP0YZ//3v5cPz8u6wk/n/7ZE9YT1hPWE9aTfP65jn9Z1hPWE9YT1pPc
h/w3te/fn9Y+G7+t4133+b+Tr3X827Ke9L7nvW9t7zvY+0b1vh+9bnuvu9vr
Jva6V71uSd933vcN9n0fPW+35131dfO+7tHfW/Xnju5Gvv/mUU/y/TbWE9YT
1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9YT1hPWkxyf3bKe5HiN9STHb6wnOZ5jPcnxHetJjvfb
sp7k+I/1JM/HWE/y/Iz1JM/XWE/S/s+/Zz/t04dlPcmfH5f1hPWE9YSf//hn
T1hPWE/y+ec6/mVZT1hPWE9YT1hPWE9YT/J412U9yePflvUkX+/+3b7n+frj
3oew95HqfUB6Hfdeh7fXUex1sHodk74Pve8j7PtAeh5vz8Pq6+h9HaS/x+rP
Id2RftQT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1pMcn92ynuR4jfUkx2+sJzme
Yz1hPWE9YT1hPWE9YT1hPWE9YT1hPWE94W+PvyhvW/7vuJ/26cOynuTPj8vf
jnZa1hPWE9YT1hPWk3z+uY5/WdYT1hPWE9YT1hPWE9aTPN51WU/y+LdlPcnX
uy/rSb7+uPex7X0Iex+p3gek13HvdXh7HcVeB6vXMen70Ps+wr4PpOfx9jys
vo7e10H6e6z+HOJ9zf2oJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCes
J6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJzk+u2U9yfEa
60mO31hPcjzHepLjO9aTHO+3ZT3J8R/rSZ6PsZ7k+RnrSZ6vsZ6kt82/Z3qS
PizrSf78uKwnrCf57/GXZT1hPWE9yeef6/iXZT1hPWE9YT1hPWE9YT3J412X
9SSPf1vWk3y9+7Ke5OuPex/03se29yHsfaR6H5Bex73X4e11FHsdrF7HpO9D
7/sI+z6Qnsfb87D6OnpfB+nvsfSEvc+5H/WE9YT1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1
JMdnt6wnOV5jPcnxG+tJjudYT3J8x3qS4/22rCc5/mM9yfMx1pM8P2M9yfM1
1pP0tuX3yD/t04d9Xrf8uX5+3Of3BqdlPcn/HfhlWU/y3+uvy3qSzz/X8S/L
esJ6wnrCesJ6wnqS+4z/to533ec8oWsd/7bPeam/q9e77/M+iI96/bGe9L7n
vW9t7zvY+0b1vh+9bnuvu9vrJva6V71uSd933vcN9n0fPW+35131dfO+7tHf
W/Xnju4G96OesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCe
sJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ7k+OyW9STHa6wnOX5jPcnxHOtJ
ju9YT3K835b1JMd/rCd5PsZ6kudnrCd5vsZ6kt62vA750z592Oe8l5/r58d9
fu98Wn4+/bMn+T3Cl2U9yf9d+HVZT/L55zr+ZVlPWE9YT1hPWE9YT1hP8njX
fc4zvdbxb/u8r+F39Xr3ZT3J1x/rSf4+j+/2Pe99a3vfwd43qvf96HXbe93d
Xjex173qdUv6vvO+b7Dv++h5uz3vqq+b93WP/t6qP3d0N7gf9YT1hPWE9YT1
hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9STHZ7esJzleYz3J8RvrSY7nWE9yfMd6kuP9tqwnOf5jPcnzMdaT
PD9jPcnzNdaT9LblPJaf9unDPudN/lw/P+7zuuVpWU/ye+gvy89//LMn+b3C
12U9yeef6/iXZT1hPWE9YT1hPWE9YT3J4133eZ/CtY5/2+d9cb+r17sv60m+
/lhP8vd5LOtJ73ve+9b2voO9b1Tv+9Hrtve6u71uYq971euW9H3nfd9g3/fR
83Z73lVfN+/rHv29VX/u6G5wP+oJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ
6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrSY7PbllPcrzGepLj
N9aTHM+xnuT4jvUkx/ttWU9y/Md6kudjrCd5fsZ6kudrrCfpbct5kD/t04d9
zrv/uX5+3Oe8l9OynuR1zC/LepLfS39dfv6anz3J55/r+JdlPWE9YT1hPWE9
YT1hPcnjXfd5n9u1jn/b533Vv6vXuy/rSb7+WE/y93ks6wnrSe973vvW9r6D
vW9U7/vR67b3uru9bmKve9XrlvR9533fYN/30fN2e95VXzfv6x79vVV/7uhu
cD/qCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnr
CesJ6wnrCesJ6wnrCetJjs9uWU9yvMZ6kuM31pMcz7Ge5PiO9STH+21ZT3L8
x3qS52OsJ3l+xnqS52usJ+lty3n0P+3Th33et/Vz/fy4z3mTp2U9yXkwX5b1
JK9rfl3Wk3z+uY5/WdYT1hPWE9YT1hPWE9aTPN51n/dJX+v4t2U9yde7L+tJ
vv5YT/L3eSzrCesJ60nve9771va+g71vVO/70eu297q7vW5ir3vV65b0fed9
32Df99HzdnveVV837+se/b1Vf+7obnA/6gnrCesJ6wnrCesJ6wnrCesJ6wnr
CesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ60mOz25ZT3K8xnqS
4zfWkxzPsZ7k+I71JMf7bVlPcvzHepLnY6wneX7GepLna6wn6W3L+7B+2qcP
+7zv9+f6+XGf8+5Py3qS8yi/LOtJzov5uqwn+fxzHf+yrCesJ6wnrCesJ6wn
rCd5vOs+19m41vFvy3qSr3df1pN8/bGe5O/zWNYT1hPWE9aT3ve8963tfQd7
36je96PXbe91d3vdxF73qtct6fvO+77Bvu+j5+32vKu+bt7XPfp7q/7c0d3g
ftQT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT
1hPWE9YT1hPWkxyf3bKe5HiN9STHb6wnOZ5jPcnxHetJjvfbsp7k+I/1JM/H
WE/y/Iz1JM/XWE/S25b38f60Tx/2uW7Ez/Xz4z7v2zotP5/+2ZOch/9lWU9y
XuXXZT3J55/r+JdlPWE9YT1hPWE9YT1hPcnjXfe5TtO1jn9b1pN8vfuynuTr
j/Ukf5/Hsp6wnrCesJ6wnvS+571vbe872PtG9b4fvW57r7vb6yb2ule9bknf
d973DfZ9Hz1vt+dd9XXzvu7R31v1547uBvejnrCesJ6wnrCesJ6wnrCesJ6w
nrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCe5PjslvUkx2usJzl+
Yz3J8RzrSY7vWE9yvN+W9STHf6wneT7GepLnZ6wneb7GepL+/C/E79/nepI+
7HPdoZ/r58d93vd7WtaTvI/ry/LzH//sSc7L/7qsJ/n8cx3/sqwnrCesJ6wn
rCesJ6wnebzrsp7k8W/LepKvd1/Wk3z9sZ7k7/NY1hPWE9YT1hPWE9aT3ve8
963tfQd736je96PXbe91d3vdxF73qtct6fvO+77Bvu+j5+32vKu+bt7XPfp7
q/7c0d3gftQT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT
1hPWE9YT1hPWE9aTHJ/dsp7keI31JMdvrCc5nmM9yfEd60mO99uynuT4j/Uk
z8dYT/L8jPUkz9dYT9LblusI/bRPH/a5bt3P9fPjPteNOC3rSd4H/GVZT/K+
rq/Lz1/zsyf5/HMd/7KsJ6wnrCesJ6wnrCesJ3m867Ke5PFvy3qSr3df1pN8
/bGe5O/zWNYT1hPWE9YT1hPWE9aT3ve8963tfQd736je96PXbe91d3vdxF73
qtct6fvO+77Bvu+j5+32vKu+bt7XPfp7q/7c0d3gftQT1hPWE9YT1hPWE9YT
1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWkxyf3bKe5HiN9STH
b6wnOZ5jPcnxHetJjvfbsp7k+I/1JM/HWE/y/Iz1JM/XWE/S25br0P20Tx/2
ue7pz/Xz4z7XHTot60muI/FlWU/yvuCvy3qSzz/X8S/LesJ6wnrCesJ6wnrC
epLHuy7rSR7/tqwn+Xr3ZT3J1x/rSf4+j2U9YT1hPWE9YT1hPWE9YT3pfc97
39red7D3jep9P3rd9l53t9dN7HWvet2Svu+87xvs+z563m7Pu+rr5n3do7+3
6s8d3Q3uRz1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1h
PWE9YT1hPcnx2S3rSY7XWE9y/MZ6kuM51pMc37Ge5Hi/LetJjv9YT/J8jPUk
z89YT/J8jfUkvW25julP+/Rhn+tm/1w/P+5z3brTsp7kOkRflvUk15X4uqwn
+fxzHf+yrCesJ6wnrCesJ6wnrCd5vOuynuTxb8t6kq93X9aTfP2xnuTv81jW
E9YT1hPWE9YT1hPWE9YT1pPe97z3re19B3vfqN73o9dt73V3e93EXveq1y3p
+877vsG+76Pn7fa8q75u3tc9+nur/tzR3eB+1BPWE9YT1hPWE9YT1hPWE9YT
1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1pMcn92ynuR4jfUkx2+sJzmeYz3J
8R3rSY7327Ke5PiP9STPx1hP8vyM9STP11hP0tuW62D/tE8f9rnvws/18+M+
1z09LT+f/tmTXMfuy7Ke5LpEX5f1JJ9/ruNflvWE9YT1hPWE9YT1hPUkj3dd
1pM8/m1ZT/L17st6kq8/1pP8fR7LesJ6wnrCesJ6wnrCesJ6wnrCetL7nve+
tb3vYO8b1ft+9Lrtve5ur5vY6171uiV933nfN9j3ffS83Z531dfN+7pHf2/V
nzu6G9yPesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6
wnqS47Nb1pMcr7Ge5PiN9STHc6wnOb5jPcnxflvWkxz/sZ7k+RjrSZ6fsZ7k
+RrrSXrbch+Fn/bpwz737fm5fn7c57rZp2U9yXVQvyw///HPnuS6dl+X9SSf
f67jX5b1hPWE9YT1hPWE9YT1JI93XdaTPP5tWU/y9e7LepKvP9aT/H0ey3rC
esJ6wnrCesJ6wnrCesJ6wnrCetL7nve+tb3vYO8b1ft+9Lrtve5ur5vY6171
uiV933nfN9j3ffS83Z531dfN+7pHf2/Vnzu6G9yPesJ6wnrCesJ6wnrCesJ6
wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6kuOzW9aTHK+xnuT4jfUkx3OsJzm+
Yz3J8X5b1pMc/7Ge5PkY60men7Ge5Pka60l623Ifnp/26cOynuTPj8t6wnqS
62h/WdaTXBf16/Lz1/zsST7/XMe/LOsJ6wnrCesJ6wnrCetJHu+6rCd5/Nuy
nuTr3Zf1JF9/rCf5+zyW9YT1hPWE9YT1hPWE9YT1hPWE9YT1JP/e7/c9z/Hc
vtt3MN9/L9/t+5Hvt+/X3e11E3vdq163pO877/sG+76Pnrfb8676unlf9+jv
rfpzR3eD+1FPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hP
cnx2y3qS4zXWkxy/sZ7keI71JMd3rCc53m/LepLjP9aTPB9jPcnzM9aTPF9j
PUlvW+7j9tM+fdjnvqE/18+P+9y357SsJ7kPw5dlPcl1tb8u60k+/1zHvyzr
CesJ6wnrCesJ6wnrSR7vuqwnefzbsp7k692X9SRff6wn+fs8lvWE9YT1hPWE
9YT1hPWE9YT1hPWE9ST/3tnnXE963/Pet7b3Hex9o3rfj163vdfd7XUTe92r
Xrek7zvv+wb7vo+et9vzrvq6eV/36O+t+nNHd4P7UU9YT1hPWE9YT1hPWE9Y
T1hPWE9YT1hPWE9YT1hPWE9YT1hPcnx2y3qS4zXWkxy/sZ7keI71JMd3rCc5
3m/LepLjP9aTPB9jPcnzM9aTPF9jPUlvW+4D+tM+fVjWk/z5cVlPWE9yH58v
y3qS+zJ8XdaTfP65jn9Z1hPWE9YT1hPWE9YT1pM83nVZT/L4t2U9yde7L+tJ
vv5YT/L3eSzrCesJ6wnrCesJ6wnrCesJ6wnrCetJ/r3be47PWE963/Pet7b3
Hex9o3rfj163vdfd7XUTe92rXrek7zvv+wb7vo+et9vzrvq6eV/36O+t+nNH
d4P7UU9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT3Jcdst6kuM1
1pMcv7Ge5HiO9STHd6wnOd5vy3qS4z/WkzwfYz3J8zPWkzxfYz1Jb1vuI/3T
Pn1Y1pP8+XFZT/j59M+e5D5wX5b1JPf1+bqsJ/n8cx3/sqwnrCesJ6wnrCes
J6wnebzrsp7k8W/LepKvd1/Wk3z9sZ7k7/NY1hPWE9YT1hPWE9YT1hPWE9YT
1hPWk/x7t/ccn7Ge5Pvv+33Pe9/a3new943qfT963fZed7fXTex1r3rdkr7v
vO8b7Ps+et5uz7vq6+Z93aO/t+rPHd0N7kc9YT1hPWE9YT1hPWE9YT1hPWE9
YT1hPWE9YT1hPWE9yfHZLetJjtNYT3L8xnqS4znWkxzfsZ7keL8t60mO/1hP
8nyM9STPz1hP8nyN9ST9+V+c37+P9CR9WNaT/PlxWU9YT3If0S/Lz3/8sye5
L9zXZT3J55/r+JdlPWE9YT1hPWE9YT1hPcnjXZf1JI9/W9aTfL37sp7k64/1
JH+fx7KesJ6wnrCesJ6wnrCesJ6wnrCesJ7k37u95/iM9STffy/LetL7nve+
tb3vYO8b1ft+9Lrtve5ur5vY6171uiV933nfN9j3ffS83Z531dfN+7pHf2/V
nzu6G9yPesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnqS47Nb1pMcr7Ge
5LiN9STHc6wnOb5jPcnxflvWkxz/sZ7k+RjrSZ6fsZ7k+RrrSXrbvG/0JH1Y
1pP8+XFZT1hPch/qL8t6kvuKfl1+/pqfPcnnn+v4l2U9YT1hPWE9YT1hPWE9
yeNdl/Ukj39b1pN8vfuynuTrj/Ukf5/Hsp6wnrCesJ6wnrCesJ6wnrCesJ6w
nuTfu73n+Iz1JN9/L8t6ku+/7/c9731re9/B3jeq9/3oddt73d1eN7HXvep1
S/q+875vsO/76Hm7Pe+qr5v3dY/+3qo/d3Q3uB/1hPWE9YT1hPWE9YT1hPWE
9YT1hPWE9YT1hPUkx2e3rCc5XmM9yfEb60mO41hPcnzHepLj/basJzn+Yz3J
8zHWkzw/Yz3J8zXWk/S2eZ/oSfqwrCf58+OynrCe8PNlP3vCepL7Un9d1pN8
/rmOf1nWE9YT1hPWE9YT1hPWkzzedVlP8vi3ZT3J17sv60m+/lhP8vd5LOsJ
6wnrCesJ6wnrCesJ6wnrCesJ60n+vdt7js9YT/L997KsJ/n+m33Ov73fvt/3
vPet7X0He9+o3vej123vdXd73cRe96rXLen7zvu+wb7vo+ft9ryrvm7e1z36
e6v+3NHd4H7UE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWkxyf3bKe5HiN9STH
b6wnOZ5jPclxHetJjvfbsp7k+I/1JM/HWE/y/Iz1JM/XWE/S2+Z9oSfpw7Ke
5M+Py3rCesJ6wnrCz1/rsyesJ/n8cx3/sqwnrCesJ6wnrCesJ6wnebzrsp7k
8W/LepKvd1/Wk3z9sZ7k7/NY1hPWE9YT1hPWE9YT1hPWE9YT1hPWk/x7t/cc
n7Ge5PvvZVlP8v33uqwn+f4a9z7ovY9t70PY+0j1PiC9jnuvw9vrKPY6WL2O
Sd+H3vcR9n0gPY+352H1dfS+DtLfY/XnkO5IP+oJ6wnrCesJ6wnrCesJ6wnr
CesJ6wnrSY7PbllPcrzGepLjN9aTHM+xnuT4jvUkx/ltWU9y/Md6kudjrCd5
fsZ6kudrrCfpbfM+0JP0YVlP8ufHZT3h59M/e8J6wnrCesJ6ks8/1/Evy3rC
esJ6wnrCesJ6wnqSx7su60ke/7asJ/l692U9ydcf60n+Po9lPWE9YT1hPWE9
YT1hPWE9YT1hPWE9yb93e8/xGetJvv9elvUk33+vy3qS76+xnvS+571vbe87
2PtG9b4fvW57r7vb6yb2ule9bknfd973DfZ9Hz1vt+dd9XXzvu7R31v1547u
BvejnrCesJ6wnrCesJ6wnrCesJ6wnrCe5PjslvUkx2usJzl+Yz3J8RzrSY7v
WE9yvN+W9STHfawneT7GepLnZ6wneb7GepLeNuddT9KHZT3Jnx+X9YT1hPWE
n//4Z09YT1hP8vnnOv5lWU9YT1hPWE9YT1hPWE/yeNdlPcnj35b1JF/vvqwn
+fpjPcnf57GsJ6wnrCesJ6wnrCesJ6wnrCesJ6wn+fdu7zk+Yz3J99/Lsp7k
++91WU/y/TXWE9aT3ve8963tfQd736je96PXbe91d3vdxF73qtct6fvO+77B
vu+j5+32vKu+bt7XPfp7q/7c0d3gftQT1hPWE9YT1hPWE9YT1hPWE9aTHJ/d
sp7keI31JMdvrCc5nmM9yfEd60mO99uynuT4j/Ukz8NYT/L8jPUkz9dYT9Lb
5jzrSfqwrCf58+OynrCesJ6wnrCe8PPX/OxJPv9cx78s6wnrCesJ6wnrCesJ
60ke77qsJ3n827Ke5Ovdl/UkX3+sJ/n7PJb1hPWE9YT1hPWE9YT1hPWE9YT1
hPUk/97tPcdnrCf5/ntZ1pN8/70uPx9+HOsJ6wnrCetJ73ve+9b2voO9b1Tv
+9Hrtve6u71uYq971euW9H3nfd9g3/fR83Z73lVfN+/rHv29VX/u6G5wP+oJ
6wnrCesJ6wnrCesJ6wnrSY7PbllPcrzGepLjN9aTHM+xnuT4jvUkx/ttWU9y
/Md6kudjrCd5XsZ6kudrrCfpbXNe9SR9WNaT/PlxWU9YT/j5sp89YT1hPWE9
yeef6/iXZT1hPWE9YT1hPWE9YT3J412X9SSPf1vWk3y9+7Ke5OuP9SR/n8ey
nrCesJ6wnrCesJ6wnrCesJ6wnrCe5N+7vef4jPUk338vy3qS77/X5W/vt/Hz
4Y/HesJ6wnrCetL7nve+tb3vYO8b1ft+9Lrtve5ur5vY6171uiV933nfN9j3
ffS83Z531dfN+7pHf2/Vnzu6G9yPesJ6wnrCesJ6wnrCesJ6kuOzW9aTHK+x
nuT4jfUkx3OsJzm+Yz3J8X5b1pMc/7Ge5PkY60men7Ge5Hka60l625xHPUkf
lvUkf35c1hPWE9YT1hN+/lqfPWE9yeef6/iXZT1hPWE9YT1hPWE9YT3J412X
9SSPf1vWk3y9+7Ke5OuP9SR/n8eynrCesJ6wnrCesJ6wnrCesJ6wnrCe5N+7
vef4jPUk338vy3qS77/XZT3J99dYT1hPWE9YT1hPet/z3re29x3sfaN6349e
t73X3e11E3vdq163pO877/sG+76Pnrfb8676unlf9+jvrfpzR3eD+1FPWE9Y
T1hPWE9YT1hPcnx2y3qS4zXWkxy/sZ7keI71JMd3rCc53m/LepLjP9aTPB9j
PcnzM9aTPF9jPUlvm/OmJ+nDsp7kz4/LesLPp3/2hPWE9YT1hPUkn3+u41+W
9YT1hPWE9YT1hPWE9SSPd13Wkzz+bVlP8vXuy3qSrz/Wk/x9Hst6wnrCesJ6
wnrCesJ6wnrCesJ6wnqSf+/2nuMz1pN8/70s60m+/16X9STfX2M9YT1hPWE9
YT1hPel9z3vf2t53sPeN6n0/et32Xne3103sda963ZK+77zvG+z7Pnrebs+7
6uvmfd2jv7fqzx3dDe5HPWE9YT1hPWE9YT3J8dkt60mO11hPcvzGepLjOdaT
HN+xnuR4vy3rSY7/WE/yfIz1JM/PWE/yfI31JP35X7Dfnyc9SR+W9SR/flzW
E9YT1hN+/uOfPWE9YT3J55/r+JdlPWE9YT1hPWE9YT1hPcnjXZf1JI9/W9aT
fL37sp7k64/1JH+fx7KesJ6wnrCesJ6wnrCesJ6wnrCesJ7k37u95/iM9STf
fy/LepLvv9dlPcn311hPWE9YT1hPWE9YT1hPet/z3re29x3sfaN6349et73X
3e11E3vdq163pO877/sG+76Pnrfb8676unlf9+jvrfpzR3eD+1FPWE9YT1hP
WE9yfHbLepLjNdaTHL+xnuR4jvUkx3esJzneb8t6kuM/1pM8H2M9yfMz1pM8
X2M9SW+b86In6cOynuTPj8t6wnrCesJ6wnrCz1/zsyf5/HMd/7KsJ6wnrCes
J6wnrCesJ3m867Ke5PFvy3qSr3df1pN8/bGe5O/zWNYT1hPWE9YT1hPWE9YT
1hPWE9YT1pP8e7f3HJ+xnuT772VZT/L997r8fPhxrCesJ6wnrCesJ6wnrCes
J6wnve9571vb+w72vlG970ev297r7va6ib3uVa9b0ved932Dfd9Hz9vteVd9
3byve/T3Vv25o7vB/agnrCesJ6wnOT67ZT3J8RrrSY7fWE9yPMd6kuM71pMc
77dlPcnxH+tJno+xnuT5GetJnq+xnqS3zXnQk/RhWU/y58dlPWE94efLfvaE
9YT1hPUkn3+u41+W9YT1hPWE9YT1hPWE9SSPd13Wkzz+bVlP8vXuy3qSrz/W
k/x9Hst6wnrCesJ6wnrCesJ6wnrCesJ6wnqSf+/2nuMz1pN8/70s60m+/16X
v73fxs+HPx7rCesJ6wnrCesJ6wnrCesJ60nve9771va+g71vVO/70eu297q7
vW5ir3vV65b0fed932Df99HzdnveVV837+se/b1Vf+7obnA/6gnrCetJjs9u
WU9yvMZ6kuM31pMcz7Ge5PiO9STH+21ZT3L8x3qS52OsJ3l+xnqS52usJ+lt
M+56kj4s60n+/LisJ6wnrCesJ/z8tT57wnqSzz/X8S/LesJ6wnrCesJ6wnrC
epLHuy7rSR7/tqwn+Xr3ZT3J1x/rSf4+j2U9YT1hPWE9YT1hPWE9YT1hPWE9
YT3Jv3d7z/EZ60m+/16W9STff6/LepLvr7GesJ6wnrCesJ6wnrCesJ6wnrCe
9L7nvW9t7zvY+0b1vh+9bnuvu9vrJva6V71uSd933vcN9n0fPW+35131dfO+
7tHfW/Xnju4G96OesJ7k+OyW9STHa6wnOX5jPcnxHOtJju9YT3K835b1JMd/
rCd5PsZ6kudnrCd5vsZ6kt4246wn6cOynuTPj8t6ws+nf/aE9YT1hPWE9SSf
f67jX5b1hPWE9YT1hPWE9YT1JI93XdaTPP5tWU/y9e7LepKvP9aT/H0ey3rC
esJ6wnrCesJ6wnrCesJ6wnrCepJ/7/ae4zPWk3z/vSzrSb7/Xpf1JN9fYz1h
PWE9YT1hPWE9YT1hPWE9YT1hPel9z3vf2t53sPeN6n0/et32Xne3103sda96
3ZK+77zvG+z7Pnrebs+76uvmfd2jv7fqzx3dDe5HPcnx2S3rSY7XWE9y/MZ6
kuM51pMc37Ge5Hi/LetJjv9YT/J8jPUkz89YT/J8jfUkvW3GVU/Sh2U9yZ8f
l/WE9YT1hJ//+GdPWE9YT/L55zr+ZVlPWE9YT1hPWE9YT1hP8njXZT3J49+W
9SRf776sJ/n6Yz3J3+exrCesJ6wnrCesJ6wnrCesJ6wnrCesJ/n3bu85PmM9
yfffy7Ke5PvvdVlP8v011hPWE9YT1hPWE9YT1hPWE9YT1hPWE9aT3ve8963t
fQd736je96PXbe91d3vdxF73qtct6fvO+77Bvu+j5+32vKu+bt7XPfp7q/7c
0d3gftQT1pMcr7Ge5PiN9STHc6wnOb5jPcnxflvWkxz/sZ7k+RjrSZ6fsZ7k
+RrrSdr+jLvan3G3esK5P+Nu9YT1hPWE9YT1hPWEn7/m2p9xt3qSx78s5/6M
u9qfcVf7M+5qf8Zd7c+4q/0Zd7U/4271hHN/xt3qCef+jLvVE879GXerJ5z7
M+5WTzj3Z9zV/oy72p9xV/sz7mp/xl3tz7ir/Rl3tT/jrvZn3NX+jLvan3G3
epLjM879GXerJ/n+G+tJvt/GesK5P+Ou9mfc1f6Mu9qfcVf7M+5qf8Zd7c+4
q/0Zd7U/4672Z9zV/oy72p9xV/sz7mp/xl3tzzj7Bva+Ub3vR6/b3uvu9rqJ
ve5Vr1vS9533fYN930fP2+15V33dvK979PdW/bmju5HjM4+5P+Nu9YRzf8bd
6gnn/oy71RPO/Rl3qyec+zPuVk8492fcrZ5w7s+4Wz3h3J9xt3rCuT/jbvUk
/337RXnbjJuepA/LepI/Py7rCT+f/tkT1hPWE9YT1pN8/rmOf1nWE9YT1hPW
E9YT1hPWkzzedVlP8vi3ZT3J17sv60m+/lhP8vd5LOsJ6wnrCesJ6wnrCesJ
6wnrCesJ60n+vdt7js9YT/L997KsJ/n+e11+Pvw41hPWE9YT1hPWE9YT1hPW
E9YT1hPWE9YT1hPWE9aT3ve8963tfQd736je96PXbe91d3vdxF73qtct6fvO
+77Bvu+j5+32vKu+bt7XPfp7q/7c0d3gftQT1pMcv7Ge5HiO9STHd6wnOd5v
y3qS4z/WkzwfYz3J8zPWkzxfYz1J2+93epI+LOd+v9MT1hPWE36+7Nrvd3rC
esJ6ks8/1/Evy7nf7672+52ecO73Oz3h3O93epLHuy7nfr/TE879fqcnnPv9
Tk849/udnnDu97ur/X53td/vrvb73dV+v7va73dX+/3uar/fXe33u6v9fne1
3+/0JMdnnPv9Tk/y/TfWk3y/jfWEc7/fXe33Oz3h3O93V/v97mq/313t97ur
/X53td/vrvb73dV+v7va73d6wrnf7672+/1+H/Tex7b3Iex9pHofkF7Hvdfh
7XUUex2sXsek70Pv+wj7PpCex9vzsPo6el8H6e+x+nNId6Qfc7/f6Qnnfr/T
E879fqcnnPv9Tk849/udnnDu9zs94dzvd3rCud/v9CT/fftFeduMi56kD8t6
kj8/LusJ6wnrCT//8c+esJ6wnuTzz3X8y7KesJ6wnrCesJ6wnrCe5PGuy3qS
x78t60m+3n1ZT/L1x3qSv89jWU9YT1hPWE9YT1hPWE9YT1hPWE9YT/Lv3d5z
fMZ6ku+/l2U9yfff67Ke5PtrrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCes
J6wn+b3M9/ue9761ve9g7xvV+370uu297m6vm9jrXvW6JX3fed832Pd99Lzd
nnfV1837ukd/b9WfO7ob3I96wnqS4znWkxzfsZ7keL8t60mO/1hP8nyM9STP
z1hP8nyN9SRt//jpSfqwnPvHT09YT1hPWE9YT/j5a63943e1f/z0JI9/Wc79
43e1f/z0hHP/+OkJ5/7x05M83nU594+fnnDuHz894dw/fnrCuX/89IRz//hd
7R+/q/3jd7V//K72j9/V/vG72j9+V/vH72r/+F3tH7+r/eOnJzk+49w/fnqS
77+xnuT7bfzt/TXO/eN3tX/89IRz//hd7R+/q/3jd7V//K72j9/V/vG72j9+
V/vH72r/+OkJ5/7xu9o/fnqS/zv6+33Pe9/a3new943qfT963fZed7fXTex1
r3rdkr7vvO8b7Ps+et5uz7vq6+Z93aO/t+rPHd2NHL95zP3jpyec+8dPTzj3
j5+ecO4fPz3h3D9+esK5f/z0hHP/+OlJ/vv2i/K2+bv1JH1Y1pP8+XFZT1hP
WE9YT1hP+PlrfvYkn3+u41+W9YT1hPWE9YT1hPWE9SSPd13Wkzz+bVlP8vXu
y3qSrz/Wk/x9Hst6wnrCesJ6wnrCesJ6wnrCesJ6wnqSf+/2nuMz1pN8/70s
60m+/16X9STfX2M9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPcnrwj/U
9zA/1H/3xr0Peu9j2/sQ9j5SvQ9Ir+Pe6/D2Ooq9DlavY9L3ofd9hH0fSM/j
7XlYfR29r4P091j9OaQ70o96wnqS4zvWkxzvt2U9yfEf60mej7Ge5PkZ60me
r7GepLfN36kn6cOynuTPj8t6ws+nf/aE9YT1hPWE9SSff67jX5b1hPWE9YT1
hPWE9YT1JI93XdaTPP5tWU/y9e7LepKvP9aT/H0ey3rCesJ6wnrCesJ6wnrC
esJ6wnrCepJ/7/ae4zPWk3z/vSzrSb7/XpefDz+O9YT1hPWE9YT1hPWE9YT1
hPWE9YT1hPWE9YT1hPWE9STnFf1Q3+P/UP+7eawnve9571vb+w72vlG970ev
297r7va6ib3uVa9b0ved932Dfd9Hz9vteVd93byve/T3Vv25o7uR4zmPepLj
O9aTHO+3ZT3J8R/rSZ6PsZ7k+RnrSZ6vsZ6kt83fpSfpw7Ke5M+Py3rCesLP
l/3sCesJ6wnrST7/XMe/LOsJ6wnrCesJ6wnrCetJHu+6rCd5/NuynuTr3Zf1
JF9/rCf5+zyW9YT1hPWE9YT1hPWE9YT1hPWE9YT1JP/e7T3HZ6wn+f57WdaT
fP+9Ln97v431hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1hPWE9YT1JOel/lDX
gX+o711+qP/O/eGynvS+571vbe872PtG9b4fvW57r7vb6yb2ule9bknfd973
DfZ9Hz1vt+dd9XXzvu7R31v1547uBvejnrCe5Hi/LetJjv9YT/J8jPUkz89Y
T/J8jfUkvW3+Dj1JH5b1JH9+XNYT1hPWE37+4589YT1hPcnnn+v4l2U9YT1h
PWE9YT1hPWE9yeNdl/Ukj39b1pN8vfuynuTrj/Ukf5/Hsp6wnrCesJ6wnrCe
sJ6wnrCesJ6wnuTfu73n+Iz1JN9/L8t6ku+/12U9yffXWE9YT1hPWE9YT1hP
WE9YT1hPWE9YT1hPWE9YT1hP8r6GH2oe0Q/1vf0P9b+T/3BZT1hPet/z3re2
9x3sfaN6349et73X3e11E3vdq163pO877/sG+76Pnrfb8676unlf9+jvrfpz
R3cjx3ce9STH+21ZT3L8x3qS52OsJ3l+xnqS52usJ+lt83vrSfqwrCf58+Oy
nrCesJ6wnvDz1/rsCetJPv9cx78s6wnrCesJ6wnrCesJ60ke77qsJ3n827Ke
5Ovdl/UkX3+sJ/n7PJb1hPWE9YT1hPWE9YT1hPWE9YT1hPUk/97tPcdnrCf5
/ntZ1pN8/70u60m+v8Z6wnrCesJ6wnrCesJ6wnrCesJ6wnrCesJ6wnrCepL3
xf1Q81B/qOu+P9T3LH/4/xN291F6n2l92GdGtuUZydaMpJNlAuFAADdpaPek
SsOWNud5Qg6hIVMogQA69IRDKNrykhxOtTTNC0hAA3FwmlMobYeUl3Z7DG5a
MJmyrWCz8mYXx65njSzJsmTLst48tnfttWTZsuU39fHvfj7X7et61qn+mfPV
9Xt77t/vvr/X+13WtY7xCYxP6r7ndd/auu9g3Teq7vtR+7bXvru1b2Lte1X7
ltS681o3WOs+at5uzbuqcfMa96h+q2p3VN6A6198AuOTPP4d45P8PjrGJ/n9
dIxP8vvqGJ9kPDfnOfFJxkcC45MsfzgwPoHxCYxPYHwC4xN4eMwJn+TjL5Tr
XwqMT2B8AuMTGJ/A+ATGJzA+yde7Ehif5OtfDYxP8v2uBcYn+f4d45P8PNcD
4xMYn8D4BMYnMD6B8QmMT2B8AuMTGJ/A+CT/3rlxHp+O8Un+/uYD45P8/S0E
xif5++oYn8D4BMYnMD6B8QmMT2B8AuMTGJ/A+ATGJzA+gfEJjE9gfJLrqhdL
HUPH+CT76ZeKXtwxPoHxCYxP6r7ndd/auu9g3Teq7vtR+7bXvru1b2Lte1X7
ltS681o3WOs+at5uzbuqcfMa96h+q2p3VN7I493/4pM8/h3jk/w+OsYn+f10
jE/y++oYn2Q8N+e58EnGRwLjkyx/ODA+gYfDJ3wC4xMYn8D4BMYn+fgL5fqX
AuMTGJ/A+ATGJzA+gfEJjE/y9a4Exif5+lcD45N8v2uB8Um+f8f4JD/P9cD4
BMYnMD6B8QmMT2B8AuMTGJ/A+ATGJzA+yb93bpzHp2N8kr+/+cD4JH9/C4GH
Pwc6xicwPoHxCYxPYHwC4xMYn8D4BMYnMD6B8QmMT2B8AuMTGJ/A+CT35Vgs
dXCLJe90scR5l4pfZamsYzsC4xMYn8D4pO57XvetrfsO1n2j6r4ftW977btb
+ybWvle1b0mtO691g7Xuo+bt1ryrGjevcY/qt6p2R+UNuP7FJzA+ye+jY3yS
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
iw9qvUXdJ7PWV5D7HbWeIvn51mfrJ+q+NrVeItcpzNZLWOfxQa2HIPe31jfw
++GDWs9AXvtk+FvrE/I+07P1CbnPxpGZ+gN2hvW/1hvkfRdm6wuynfLwTD2B
61r/a/0AufW/1guQD/890YNrfQA7xvpf6wHI8UHN/ydvw31mJt/fc4tf1vx+
cnxQ8/nJ6ZE1fz/bSbP5+uT4oObnk7fjL83k4xuXdr/Z/HtyfFDz7XOfj62Z
/Hp2mHhhzacnxwc1f56cHlXz5Y27+F/NjyfHBzUfnpweVPPf8bx4Xs13J8cH
Nb+dnJ5S89m9V/G5mr9Ojg9qvjo5vSJ/F12PEG8jz/12FyI/iTz3310I3m/z
oOeb+27Ez8hr3h8+IMcH5HjZd4dX6SniYeT8NXWfYHJ8QI43az6471J8q+Z/
1329ar43OV6r+d30IPGqms9d93Wp+dzkeKfmb/vuxaNqvjY5vqA34ZGab538
rOuz+dXk+KLmU5sn1v2aP533zZzNlybHFzU/ml5mXa750OT8UzX/mRxf1Hzn
XKc7m99Mzj9V85nJ8UXNX6b3WddqvjI5/1TNTybHFzUf2Ty37tT8Y3L+qZoH
kNeJSzP5xdnPMJtPTM5fVfOHyfFFzRe2jpi3NT+YnL+q5gOT44ua/0tvNa9q
vi85f1XN7yXHFzWf1zplntT8XXL+qpqvS44van4uvdh3XPNxyfmrav4tOb6o
+bbWQd9Zza8l56+q+bTk2Y7s+bP0bt9BzZcl56+q+bHk+KLmw1pnvaea/0rO
X1XzXcnxRc1vpdcbx5rPWvfRrfmr5Pii5qumvIL12fzUuu9VzUclxxc1/5Rd
4Tlqvik5fqj5pHjBcTV/lLzGIfir2CH4oeaHkvtb80H9P39Vzf/EK/ih5nvm
fb9m8zvzPi7HZvI5nZf3H+35m+R5/8mer0ne1s9TM/mZeAs/1HxMcvZKzb8k
b3xwdibf0nPhh5pfSc5eqfmU5G29vzCTP4kX8UPNlyRnr9T8SHL+q5oP6Xfj
h5r/SM5eqfmO5PxXNb8R7+KHms9Izl6p+Yvk/Fc1X9G44oean0jOXqn5iOT8
VzX/EK/jh5pvSM5eqfmF5PxXNZ/Qe8MPNX+QnL1S8wXJ+a9qfiC9AT/UfEBy
9krNAyHnv6r5fr4L/FDz+8jZKzWfj5z/qubv0UvwQ83XI2ev1Pw8cv6rmo/n
u8MPNf+u7itb8+3I+a9qfh29Bz/UfDpy/quaH+e7xQ81H46cPUIP4oeq+W3k
1v2az0bOHqn5a75zfqKar5b3PZzNTyNnj9R8NHoWP07NPyO3btZ8M/Lh9Ik9
UvPLzCN+lppPRm5dq/lj5G24z8zki9Hj+EFqfhi5dafmg5EPtxEnfV/+V97H
azbfi9y6UPO7sl/i0kw+Fz2x3W82fyvrkbP5WuTskZqfZR1g59d8rFxHNZt/
Rc4eqflW9FB2es2vIjdvaj4VOXuk5k9ZZ9jVNV+K3Hde86PI0/7C78uHouem
/WTfl/9EnvYPfV++Ezl7pOY31f3Naz5T3c+65i+Rs0dqvlLdz7bmJ9X9S2s+
Ut0fmR7OjoONY+1/PZf+3R95P00/fitwW6/eibyipt/aj/L+6XdF7757Oo76
T398+rvpmfdP/cz81J8Y3Tr8v31oPjl9z/Yh+ETT6w7Ryz45va88k09P/YKP
T/29n23xllV9Zz7d/n/NPjOfbXro6p0hH/SmtTtDPtz2wJPT+zw0avPZflOP
NL/1Fj/2Q+05VsVjH2l64tadIR/0mtVdIW/XPz/9++jUz3hh+vuPtftszI/J
2/Ig3+dY0+M2doX8ewf5rpAPtz28MJUfb9ffWBgbt0EfGC2HfFjv9i+HvD3n
szGu7f+3pv7dJ5rfdW3bmHzQVw9tG5MP6929yyEf1rujyyFv8/f5qf9WX8oX
YtyH9W5Vfs3p5hdc0//4yaaH7FwJ+bDe3bUS8ja/vhDvrd3vxenvebr5Lbdu
GZMP+uoqv9nTTY84uBLyYb27ZyXkTd/44vS9PTO938vxXof1buPWMfmgr27J
75n2Sz6zEvJhvbu2EvK23l2N76I9v/1up/2QD/HrXWh+sQ1+smn/49HukA/r
3f7dIW/r3SvT8dcH89p0Pl1qfrw1/vOLzW91aPuYfFjv7t0d8mG+H90d8rbe
vTodD/k3r8Z3Nax3q7ePyZueqx/wtD/xzj0hH9aXu/aEvK13r8V32fRHceit
5gfbkk+5NdUT9dvdarx0cE/Ih/Xmnj0hb/bN69PxeG76vl+P77bptYtj8sa3
6rin+T5n9oTcfpLkzf9yI777pm/emL6HaX/gQ0tj8saHS2Py5l95c/p7Pz9d
n9+K777x844xeVuPd4zJrcPmhXW2jaN+vm+HvK3Xb4e88efOMXlbr/XHfSnW
4fa8X4x11Lxp/PJOyJv++m7IG5/wc3xxul7fMSa3zuV5d3w6nvrt3gx5u9/N
kDc+umNM3tZr+aRXYp1r8+RKrFPmZeMjdYJXpusxu/5qrDPmrXnexuVqrO/k
1nfyxke7Qj7op4d2hdw8bvOsz2Pz2vpPbv0nH+bbzuWQD+v1XcshN8+sC+ZJ
e55rsf6TW//Jh/lxcDnkw3p9z3LIzYM2j6/FPLBuWP/Jrf/kbX4th3xYr68t
h9x3bt3xnbbneS3Wf3LrP/kw/0YrIR/W6/0rIfcdtnXitfjOrEvWf3LrP/mw
Xty7EvJhvT66EnLfkXXNd9Ducz3Wf3LrP/kw/3fuDvmwXt+1O+Tec1uHXo/3
bN2z/pNb/8mH9ejg7pAP6/U9u0PuPVg3jWN7njdi/Se3/pMP68uZ3SEf1utr
u0NunNo6+EaMk3XV+k9u/Scf1sPRnpAPevr+PSH3O6zLnqP9vRHrP7n1n3xY
v+7dE/LBnj+6J+Tu09bZN+M+1nXrP7n1n9xf676/7Tpvxfrv/63/5FXPp6db
9/0lt/77f+s/ufWfnJ7uPHo2O8L6T279J7f+k1v/sx3ySNghbf1/NK5r/Se3
/pNb/8mt/+RtvTsZz9XW88fDbhnmy+G5MXlbz+fG5PiBHD+Qt+d9Muweeqbn
bvbK/Ji8refzY3L8QI4fyNv1z8fvpgcmu2h1YUze1vNpXsXqdD/PCT+Q44ds
V10Ku6rd73KMS+OzaR/DtWn+zeqULw5P+2keXA45fiCnhxlXehS7q/HZtjF5
W8+n/DOR4wdy/EBOj2K30ZOMe+OzaZ7B6jT/ZuOWMTl+IMcP5PQg740eg/cb
n037oE3kbT2f9mnbmPavvHcl5PiBnJ7Sxnk+9BDvtfHZNL9maxp3X7st3jt+
IMcP5PQM3wU9gV7R+Gwa91+b5t+sTvPzD0/rFg/uDjl+IKcH0EvwuO+m8dk0
Dj+Rt/V8e3xX+IEcP5Djad8dnm3PM+0Heej2+C7ben77mBw/kOMHcjxK78GD
vsvGZ4tj8raeL8Z3ix/I8QM5nvNd4yl6UeOzpfju23q/NE7yif1Bzv4gx0P0
Kjzju298tjQmb+v9jjwvJvxhXuAPehWeIccT5I3PdsS84j8ixx/0Mvxh3uAB
cus4Of8TOf8TOf4w7/AHvc06TW6dJeefIuefIscf9D78YV5aR8mtg+T8U+T8
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
xzdeibxKeZfyGmHrjnWePpLz9ksfto3l3Mfz3uWc93+0Y/NYHib9AmavpD6g
qysRn5V3KK9TXiFsHuAF+gLMnsn7uq7k/SAO9vpxeX+Zd65EHTP+h9k7eAtO
+0Gc6fXj8vJg7xmP4HOYPcTvCaf9IEa9flzeHOw9yCPFzzB7Cc/BaT+Ie3v9
uLw22DjhHXwL575TrwdO+0FE3tobkbcG+x3yVPEnzO7Ei3DaD+Jgrx+XFwa7
D97Ch3DeN+5G4LRfxJlePy4/CPZXniy+q3Xhtc4i139vBM/B4sdtvb0/6r/Z
nTD+kZeV6yTejrwjfmdYfJld6Drtfg+V674bvIYfYHZY3ofusYhPs+PY1W09
PR4YP7CzrffZ7j4ddjosPj0cNrGjPOdw2YkdBau3wIPWe7g9z7ngUVj8erjM
xA5ht7NDYPUW7HjrPdyudzH8AHDe3+FijEN7/o4H8eFez229h/P+Ph2Lf6d+
IofdbyvwcLu1Xs9tvc9+g+fDzwCLj9MjjbN6C1ieojoX6z1ML+L3y/tczYde
lnn9xcDqLdo4zUeeOEyv4MfI+1DNh17jPdKzYPUWw+lb85HHDdd9oOA2zguh
R9Ab6CWweov2HhYizxqueVVw+456XxnfSeobc7jXbarTsd7DeLN95x2373Bh
nPpJbS0Er8O57nJb5H+mvgMTXuOngcX38aTvEO/C6i3UAVnvYbzD7wqL/+Mx
eg9ehNVb8MvgAX4cWL4AXvFd4ylYfYW6IvFCfl1YfoF6C3oT3oDVW+T83vuj
/tq6zs8D5/0e3o76b7wA84+6Hj7gh7Hu8ivDeb+HXv9t3U556Fs7Iw8dH6hb
si7yC8F5v4de/21dhflLXQ8f8NtYt/i14bTfw+Fe/23dg/lLXQ8fqIuyrvAj
wWm/h7Ve/21dgvlLax85fh7znl8dTvs9rM72hYD5T10PH6i7Mi/5neC038NW
X0fMa5g/1fXwAb9Q2tfkQMdpv4eNXv9tHsL8o66HD/j9fff8VHDa7+FQr/82
j2D+TtfDB/xIvkv5H3Da72Gt13/7zmH+S9fDB+rGfDf8WnDa72HyHVoHfYep
Tnlnr9fGB/xO3qv8kRy/XczfyUTv9p3A/Iuul+y0rcUSz13M+2bY72Gj1397
jzB/oevhA34q4yL/BE77PRzq9d/GGeb/c73UR2tjKZ6b3yzFi+33sNbrv40D
nOpSNpaCH/i5XFf+Cpz2e1hdinoNzwnjB3V2/Gv1b9rfYavXe3sOmL+N3ws/
wPxl8mHgtP/DRv/rPDj3kd0Z/ADzf7kunPZ/ONTrwfnDchzvkfCT4QeYP0u+
DZz2f1jr9eD8W3Bbf09G/TZ+gPmnPDec9n+Y2C94j78KHh7jwJPhV8MPMP+U
fB047f+w1evB+avgdv3zUb+NH2D+KeMCp/0fNno9OH9VjkteCj8cfoD5p+T7
wPJ12C/Gib8K5q9S14gfYP4p4w6n/R/u7fXg/FUwf5Vxww8w/5R8ITjt/7Bz
Jd4DfxXMX6VuEj/A/FPeK5z2fzjY68H5q2D+Ku8FP8D8U/KN4LT/w5leD57r
SLtfUl0mfoD5p3w3cNr/YTRb5wnzV3nvief39zwL+Upw2v/h3l4Pzl8F81ep
+8QPMP9UyuNY3ZP3f9i5J/Qa/iqYv8p3lfjh6HLkSch3gtP+Dwd7PTh/Fcxf
pa4UP8D8U757OO0PcabXg/NXwfxVvlt8AfNXqRe0rud67o3Id4LlI7FPfMf8
VTC/ku/augvzT5kXsHwl9knq0zb3UGB+H3Wt1kWYfyrv0/hY5DuxT5Kdf+B4
YH4Z88a6BbfnOR1+Yli+0zBcE/uE3jbcbvN0YH4TdbPWFbg9z7lS93Yu9nMY
fs7EPsl9qJ8JzK9hXpr3cLvexfBDw3k/h9m4M8zvUPs2wHkf947lU7FPzPN2
v63c93qt12envgtHd4d/yroBy7din9A7+atgdry6X+s9zD8lnwuWj5XikDv3
hL8KZndbV8yL7Bd/OfzosHwt9gm9lr8q1RlP7GL1175bmH8q1zVejf0c2CfW
Kf4qmN1q3fJd5T7er4SfHpbvxT6hN/NXwexK9dfeO8w/JZ8Mlg+W+xTvyXGo
M33/hfpX/leuH16Peswvje+LvC/rnvXKcbnu90jUb7ovTN7m26MRhzb/2mEn
A7d15ETkVVjHYPJ2/OUSt52L9579ulfKPrsdk/Pb+k7adX52ev8fDj1fvh29
+0vjjVHWu+8vefD3hx6OR+jBFRtv673xy/ucfTLiDzm/7sQMzu/xZMRJvAc4
6dmT8+m5Fbte1nM/G/HufP3TEYdpn92ZGey7ab/nycgTkGcF05udT4+t2PXw
jfNzXvwjEf/wnQ7im7M415ufH6X8vs2O6cXOp6dW7Hr4yvn00LT/xoSfvGd6
K0yPrNh7xVfeOz0Rpke29/B45KlXjPfxU/uunoj4Okyv897llVfsveIj7519
AtPT2nt4KvSyitvx50Iva8//dOhdML3Je6cnVey9Zr3pfOhBMD0m9Y3ZN4ut
c/jFe6WXwPSKdv+LZV+ojq2L+IQdS0+AUz/bA5eD1yumt+B1egvehvEuPQbP
Vix/K/dJ2So8uhV9TeSP4b2K6T14j97DXoCty/QUvFaxfCHrcs5P2ghs3Ut9
l+Ulvw/Ta6x79BrrJGwdoOe0+x+bwbk/wrHI68j9Nq5EP/GcF3pqBuNH8xTf
mdeweUVPat/d2Rmc80KfjrwQ8zDliR6ez3HC9VnsevR554tDwuaVfKV2/1lM
TzOv6GnmYdq35n19qZt8FqfrHe5xyna/js0remDOC+1Y/pB5lfNYO85xx2sR
Z6w47WO/1vfPEEfM138u8qfkVVZMDzWv6KHmISy+4XxxxYpdjz3ifHHEfP2e
fyXPsWL5S+wTfhL2S+prtNHzt8QRK3Y99ozzxQnz9ft+HfIMKxYXNu/FAawT
sPiK88UJK3Y99pDzxQFh8z7vYzSL5U+Z9/xA1glYfMb54oAVux57yvnifLB5
JV9M3l/F4t7mlTiHeQiL7zhfnK9i12OPOV8cD/bdiqvL66tY/lbO63sj5g0s
PuR8cbyKXS/3bX4j6rhh34V8NXl7FYvz+y7EcXxHsPiS88XpKnY9cTrni8PB
xl0egby8iuVlG3d+PO8JFp9yvjhcxa4nDud8cTbY75IvJ++uYnkNfpe4lXGA
xbecL85WseuJszlfHA12Xs63m8Xy65zHz5n7yrwVcTvni6tV7Hq1r7K4Wc37
81deX8XyNuo+MPX/xducn/dVf2um7pw/w/niYrA8Pnkh8vYqzn1r3on8QPkg
sDic83MdeseuJy7mfHEvWJ6e55SXV7HnEA/M+9x0LM7mfHGvil1P3Mv54lqw
PDx5L/LuKpZfKJ7IT83/AoujOV9cq2LXE9dyvrgVzF9jHOXVVWycxCONo3wW
WJzM+eJWFbueuJXzxaXSfjlbPX9yuMzcwgxO+Y2rfb+c4b/3dSwO5nxxqYpd
T1zK+eJOsDw573m4zOYs9h7b71mIuHGzDzoW53K+uFPFrpf2c5ucn/Ydn2B5
cPKW5L1VzI8nnirOkPqnbc1FHMv54koVu564kvPV2cPy4HyH8t4q9p2Jx/oO
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
8XTq83JmT7wHx8OOT/0vzuwJu7LxQt9vpO4XUvf7qPt11P026n4Zdb8LmF7H
bqTnDKe9b3+I9hx9f4e2LvX9GZq876/A75r3Xer7G9T9Cer+AnV/gNrfv/bn
r/31a3/82t++9qev/eVrf/ja3732Z6/91Wt/9NrfvPYnr/3Fa3/w2t+79ueu
/bVrf+za37r2p679pWt/6NrfufZnrv2Va3/k2t+49ieu/YVrf+Da37f25639
dWt/3Nrftvanrf1la3/Y2t+19met/VVrf9Ta37T2J639RWt/0Nrfs/bnrP01
a39MekOq0zvc+1O239n7S8L8s21e9P6OMP9p7a9Y+yPibf5Gdj8/Ye0PWPv7
1f58tb9e7Y9X+9vV/nS1v1ztD1f7u9X+bLW/Wu2PVvub1f5ktb9Y7Q9W+3vV
/ly1v1btj1X7W9X+VLW/VO0PVfs71f5Mtb9S7Y9U+xvV/kS1v1DtD1T7+9T+
PLW/Tu2PU/vb1P40tb9M7Q9T+7vU/iy1v0rtj1L7m9T+JLW/SO0PUvt71P4c
tb9G7Y9R+1vU/hS1v0TtD1H7O9T+DLW/Qu2PUPsb1P4Etb9A7Q9Q6/trfX6t
r6/18bW+vdan1/ryWh9e67trfXatr6710bW+udYn1/riWh9c63trfW6tr631
sbW+tdan1vrSWh9a6ztrfWatr4TVGfILw+w+dYviwvRucSZY3ovz/811kXfH
+uF8diDMHyX+JE8l57XeF3mebR1/ILD6RvEbeSYwv5L4irhQzht8OPLo5InA
7X7HIs+snX4ycPvb91tsf08HbuvOqam+uzAmh8nFC/I+fc/Fvn7iA+Qwuffa
rncucHves5EHRA6T89c3fD5we85nIo+GHCbnb2/Xvxi4Pd+FkodyMTB5rUOB
2/heGqV+4BM5TM7fLc8D5tfh3yaHyfmrjTus/ivnETwXmJy/WZ5H3hfo+dL3
smNy/mLvDVbnyT9MDpPzB8vzgM1v/l9ymJw/13uH1YPx35LD5Pyx8jxgfh3+
V3KYnD/VdwOr10p95A50TJ7jblfL/plXIi7lu4LVT/EPytOAa18o3xWs/ijn
C78aOPVxWl0pfTpXon6HfyrlSRxaCT8I/5HvCs59OHu9CSxPk//FdwWrH8n7
Ct8ILM+SH8d3Bau/sG5777D8feuydTuv0+/EfnzeOyz/3bppXYflDVrXcj76
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
/o59P2ZymDztr7y6Elj9V9oveSKHyVP/xLW+HzK/qnWLHCZP+xMf6lg/oLTf
8KGOydkb9EKY39a6Qw6Tp/19tzqW35r2693qmJxdQK+E+YXNe3KYPO2Pu9b3
y5Ufm/a7XeuYnF5OL4X5nc07cph8uMy+2T7nta9Z7hfT+9UMP2OiF9Nr4erX
zv1eut877c+62vVc+blpv9XVksc8kdNb6cW5D3bfDzX3W+n9XtL+poc6lt+b
9is91DE5vZJeDfPLe++5v0nvt0IvxKswf6z3Rg6Ti8fw64u/yFdt6/3jEfcV
f4Hb+3oq+oKIv8DyRBs+HvF5WLzFfcRXhsezn+FdK3m/wXtWchzg2spMX6l2
/sWIl7f7XY74eHv+rYiHy9vhJxcHMC5pH4bJ7055iJPfIW/Gc+d9Bp+JvJjh
v7fmxzVvtuYtwp5TXoy8xZwn80Ls+ydvERav4MeXtwj7HeLK8hZhv0NejLxF
2HOKO8tbhD2HvBh5i7D7iEvLW4RdJ+1jv7U4zn1O7Av0VuzHB/srL0beYt7P
5+34K28x77fzbuTFyFuExbMdJ28RFs+WFyNvER7+HJ6PuLi8xZQvu7YQdfLy
FmHxbPeRtwiLZ8unlbcOi2d7Dv0v4JQvtjU/TnmOW72PveeU5wiLZ9d9wmHx
bL9DniMsnu27l+cIi2f7nfIcYfFs80L82u8Wj0r7XG/tiLp+66BxsF7mPLpH
Y95YP2HrmnGyfsLWNfPK+ln3ITWO1k/Yupb6BOxfjvxh65pxtr7C8g1TX/C7
ViK/2LqX8oTvWYn3Yt0zb63HsHXOe7I+wymvfWsx4tewdcp7tH7D1iHz3noO
W2fSexcHXd0R60hdF3wH1n/rgnmf+4g9FHlx5jWMH6wb5i2MLxLvrs7Hd4Q/
rCvmHYw/fFfmVebprVh3zJvct+yF4G3zJNcpvBjrknkB4w/fpe8exh/WLd81
nOLd7/tuYfxhXfNdwqk/ztHl+O5g/GHd813B+MN377uB8Yd10XeS+6e+HXqJ
7yL3N3038sO9d9g6b954r7B13LrqvaW+b4fnY155L0kPWluY6SsMW2fNO+MK
W0ety8YNto6al8YFtk5at/1u2DqY9q+/q+9nb51L+8ff0/eTT3UR13q+BJye
81rPj4BzH/cHYt7KT+dn4RcyL+Wnt/l9KvIPrPfy0/lJyHNf8Ueijwe/ET6Q
v87PQW5ekrf7XYj8A3zRfs/J8GOQm5fk/AgNn455OFxm3xPhB+CXNq/a734y
7PSGz8U8as/1dNjR7f7nY56048+HndvwxZgH7XkujlIf1rnLod/LH2cH8jvl
uolnIz+WX9p3Kf8711k+H/aA/O52373hl/bdyN+Wp8JvhC/kR8sz4VfGF/Kf
2zifiLg1vpD/3MbxTOQf4Av5z+17eSbi1rluT75C7yuAP8jb/XufFXwiP7rh
nn+AX8jlcfA74Rv50+JM5PiHXB5H7tPyQvRvFEcix0/k8rP4rfCVPCRxInL8
RS4PJO8X+3L0fxTnIcdv5PJA+L3wnfxtcRpy/Ecuj4PfHB/K7xZnIceP5Hlf
4Rthb8n/Fichx5/k8ij43fGp/HBxDnL8Si4Pgt8N36ofEqdIfrkJ/5LLY+DX
z/vIvhVxCHL8TJ73XX077D39LMURyPE3uTyCvK9q30e1xhHwO7k8AH4/fC8/
np+fHP+Ti+PnfVRvRv48Pz05/YBcHD71xZroC/Lr+dnJ6Q/k4ujiEvQJ+ff8
5ORJ71udizh4ys9f6/05+bnJk953eC7i2OIaqd+r/TPXe/4B/YRcHJrfkr6S
9r+82fMP6C/k4tDiIskutH/lgZ5/QL8hF0du6+hC6Dtp/8nNnn9A/yHP+7Yt
lDrRhfDTkme9b7aPSbILtxZm/Kz0J3JxWHEZ+lR7j92PSk6fIhdH5XdlF6pP
4Ockp/eRi4OK67AL1S/wU5LT+8jFMflt2YXqG8QZxX3Yfeob5Kfy2/IHqG8Q
Z0x+3YldSC4PNe+D+umof6BfktMv836Cx0oftUejPoL+SU7/zPsBnor8g/ad
PB79Vumf5PRP8uGxJvpnzmN5Kvqx0j/J6Z/k7X4XIv8g9wnYHnEycvonee3j
1n7P5ejnSj9N+5rs7/1d5YmKa/F3qN+gv5LTX8nVX8ov4A9R30G/TX1z7ur9
YeWZiovxl6j/oP+S03/zfnI9/yD1E11bjDgPeaoPiP3gev4Bf4v6EfozOf05
7+f2auQf8MeoL6Ffk6d66diPrecf8NeoP0l98de7/ybvp/Z65B/w56hPoZ+T
08/J5VGK6/H3qF+hv5PT38nlQeZ92d+M/pbyFHPe4VulP+6RyC+g/+f9yHr+
Af8ROftAXJB9oP5FniA5/xJ545UTkX/Q5s/x6Lcrz4+c/4m8zd8zkX/Q1oPT
0Y9Xnh45/xQ5+0N+AftDfQ37I+UnbM1H/U17/kuRf9DufzH6+Tbc8w/YH+Ts
j5yXvxX9ftkf5OwPcvaHuCb7Q/0O+4Oc/UHO/sh9BV+MfsHsD3L2Bzn7I+/v
9HL0E2Z/kLM/yNkf8gvYH+qD0j6qa93/Rs7+EFdN/aoP9jwvcvYHOftDfgH7
Q30R+4Oc/UHO/hCXZX+oP8p5WN2/R87+kF/A/tCfgP1Bzv4gZ3+I67I/9D9m
f5CzP8jZH/IL2B/6I7M/0j4lh3r/ZPaHuDD7Q30V+4Oc/UHO/pBfwP5Qf8X+
IGd/kLM/xJXZH+qz2B/k7A9y9of8AvaH+i32Bzn7I+27vt7zD9gf6rvYH+Sp
r8fBnoeb6r/WFvJ+OftK37O7ev/nmmfL/kj73az3/AP2Bzn7Q34B+yPtV3Oz
5x+wP8jZH/IL2B9pv5kDPf8g+aFHe8L+kF/A/kj7xWyu5Dy+o73/NPtDfgH7
I+33sq/nH7A/yNkf8gvSvs72Z1nv+QfsD3L8evTUiy988w/8zOgvbV396b3/
6TvRr+y+te99/u99Ao/PzeHTb/2jvXu/8Gd/e/T0oV/48t9+ofeLpm//t/P/
8bd85Q/9bvQn+Nife+K7/9WzfzD6g3t+8cmP/8W50Nvp13/50feu96nw57a/
D0Yf0d+YO/7ffcv+z47+0f7v/80fv3M+eJt+/dOf+/Er33foD6Nv6I0DH3nj
/zz6/47++l1f/7G/8FTvN02ffnHfe8/zSPhv29/Hwl/3Owe+/cNLv3Rs9Cev
vTFe+q3ej5o+/Sc/92t/Y+9dj02fcyueG1+eXf+Zv/kXHjwx+uLRP7zjiY9t
CzuBPv3Xht9zMvx3H53K16d82P6eCf/dnZ/7vV/+8RunpuN3S+gN9OtD+279
w793zxPhz/tnU/nnpvzYnuts+PP+w7kXHvr41z85Hc9bww6hb/9fw/g9Gf69
R6fypm+8PKJ34Ne/ve8r3j71/U+PvmsY796/mv59af1H/8yFV54Of1/7e376
+67Ge8C337bxmx/6h3/l/Oirh/Hvdg59/B8N7+d88f9dmPpTr4VfFf9urf3F
3/3KSxdGLw/vY3voPfTzrxrGo9d9/ftT+eem/MpOwsc/ufXkt/4//+DS9H3c
HnYUff33h/d/KfyDfzSVH5jyrfeOnz90+GOXv+OPPTt9H4uhV9Hfv2MY32fD
X/gjU/n8lH/ZYfj6t1fv/Kkv/M7W9Pvv/bDp889vvvc9bYX/cNtU/s+mfOw7
wt/fMryP56fzoffHxt+/OsV/bsrH7Dr8fW4Y/xem478j7D78/ZEpfnTKx747
/P13hvH+wnS8d4beZ91p69ZL4U88PpX/8JSf2Yn4fHkY75dGdw/jfUfYkdaV
tq59MfyLPzqVz0/52neM339zGO8vjr57GO87St+KE9PnvhL+xoWpHL//+pkT
v/CvvvbK6GuG8e39tc3z9l1cDX/ij937G9/7T69eGV0ZxnNX6KHmXZuHV2M9
a39fibzcbzj4t77uP/vU1dH3/+W/8tJjX7Ucdqx50d5z74Pc/r4SebXbxt/4
yp/6hYnd+3/8znd+5Oe7Huu7bevetVi/2u+4Fnmxf7Rz+9HXvufa6M/s+WO/
/2sv9X7evqs2Xq/GetX+vhp5rf/zMF6vjn7x7/6Dr7r1u3q/b99FG68ef2h/
X4u81P9iGL9XRzeeufhzP/r7vR+499bmzWuxHrW/r0Ve6b5h/F6bjt/u0KO9
hzZ+12P9aX+vR9/Ud0fvjd/16fj1fuLGsc2T12O9af6P16Nv6uYwfq+Pvn4Y
v95v3Dh8chi/N2J9aX/fiL6p/9Mwfm9Mx6/3I/c72rzo8Yf290b0Tf3BYfze
mI5f71fuOdo8uBHrR/t7I+rUPzyM341YP9p3/+Yo6fubb44eHfSS/zXqGa0X
7bt/K9aH9vet0Ft2bXzq2y58xdujn194Tw/5dKwL/v7LYXzejvWg/dVH7TOj
s8P8f3v0kUHPeTTqGa0H/3gYnx5faH/fibr1/33Qm94Z7Xz0Pb3k8TjP/P+e
YXzeifnf/r4TesTfWf263/uWn3139BOD3vRU6FH0/TZe78Z60PwD7wbPt/Xw
5uijg55yIe5L32/f181YD5p9fzN4uM2fufGvD3rK5dDD2vMtjP/G8N33+EL7
Oxc82Ob/BA96yXPx3PT9zwzffY8vND1hLniqzb+58ZuDHvL50Ovo+396+O7n
Qr9vf+eCV9r6MT/+07/ynt7xUsRZ6Pv/dPjue3yh/Z0PHmjzd37824OecSXW
0dD3h+9+PvT79nc+1u02fgvjbx70CnXmPd7wfcP49fhC4/mFWIfb+1kYPz3o
ET0OTN//9DB+Pb7Q/i7EOtrm38L44KA3vBZ99MQb/tQwfgsRX2h/F2IdbOvH
tvGuQe/s/ezFG/7JMH49vtD8W9tiHWvjt2187zB+b0QfPvGGa8P4bYv4Qvt+
t03fb69vtC619eiW8X80jOebwQviD/uH8ZzmUc7tnf6F5+YO/Qff9O+efeiW
8De28b1lfGIY37eiz594xQPD+Pb4xL/4sZ/4gV1v3xL2UhvfW6Z67zvBM+IV
dw3je0vYOV924ql//RN/89bwR7bxvXV82zC+vR8/++kXhvHt8Yn2/LeGP7LN
/1vH3z7oZXPhp2JPXR3G99awO7Z+/bf++2/68G3hj2zjedv4ywc9aD6+S/bU
9wzj2eMTf/W2XW/91i/fFv7INr9vGz836HW93z/76l8O49f19jZ++hYujNv8
vm28MehN/btmX33NMH63xXqyOozf9vBHtvm9ffxTg164Lfxk7Ku7h/Hr8YnD
w/htD39ksyu2j//qMH63xLxgT708jN/2WE+eHcbv9vBH/twwfvT2W8PPxn76
68P49fjE2jB+t4c/8qVh/G4fXxrG79bSR2pl/AfD+PX4xMYwfrfHe/7OYfxu
n+r5fb8C9tFXD+N3e6wnf3wYv8V4T0eG8Vsc//1h/LbHvGQP/fwwfj0+0cZv
Mcb5K4fxYxfcHn4+9s9Lw/gtxnrSvr+lGKd/OIzf0njPMH6LMY/ZO985jF+P
T/wnw/gtxe/8wjB+7Iq+XwL75sgwfj0+0cZvKZ7zO4bxWxr/82H8+n4K1of2
ve2I635iGC92yI7wK1oP2vzs//8nhvHZMf5Lw/jsjHWBvdL0kx6faN9X33fh
Z4bx2TneNYzPHfH/7JP/atAPenyijc/O8Dc+P4zPzvFTw/j0/Rqafn9iqt/s
jPWgjc/O8Dd+2zA+O6d2Td/Poc3nM1P9oscn2njdEf7G3xvG647xfzmM165Y
l9gnTT+6I9aDNn53hL/xy4fxYxctx3O15780Wh7Gr8cn2vjdGfrITw/jd+f4
1sFO6ftFsE+aftXjE21+3hn6yHPD+LGz+n4S7JM2fnfGenD/MH53hj6yNozf
nePjg57e95tgn3zTMH49PvGhYfx2hT7yL4bx2zX+yKAn9/0o2Cdt/HbFevCT
w/jtCn3ky4bx2zX+1WH8dse6yj5p+kmPT7zy7d/1rf/Lh5ZDHzn63vzZzs7r
flz2SVt/e3zia3/253/y5Lf2urJX3pv/37g8/uFh/Pp+F+yTxh89PvE9n/j9
+7f/VK8L+7r31q+/xU7s+2GwT5p+0eMT//iFly594+8uhz7yve+tH78xed5h
/Pp+GeyTxj/LsR586iu++kN/+/Jy6CMD/55cDrumjVePR1wdxmtl/J9/7M9/
+Jf3/29hV7JPGr/3+EMbn5XQJ3724WM/cu+Proz/8Id/5cv+vUufDj8Z+6Tp
Jz3+0MZnJfSJ//vtbb925tdWxn//z3/02Xd/59GwS9kZbXx6/KGNz0roE5//
8Dc8tvP4yvjj83/8zA996vHwq7ET2visxLz75DA+K6FP/Ikf/JFbxrfuHn/x
o4dHm197Nuxaen4brx5/uDKM1+7QJ77jf/jVbzj4kd3jf/uj1/7a+jdfCD8c
Pb19Xz3+8DXD+O0OfeK/GcZv9/jHfuWun9v8ry+HXUzPbt9X/26/exi/3hfr
E8P47R7/4uf2H7n5z58Lvx09uekH/x9ZVx1nZfW8b+29d+/efK9+FRE7sBvb
GTEwEDEQFTuwCwPFwkARA1sxMRATRUFQRCkVRbrT3aWW2u783X1mzuwHf/vP
fC53efecOc97zsycmWc67h+eg/48sydEfx7/4Xtx65H/bja/2tmtEn/xbD8Q
/XlmT4j+slx51JTd+3ulFudzduiz0F/H/UMp9Jc1e0L0l+WXf3joi38+Lje/
3NmRP0N/HfcPe0J/WbMnRH9ZPvC87Gn9T6q0uKCzA8U+6bh/uBj6y5o9IfjL
8uQNX69qW1xlfr2z4/aA/jruH4ZCf1mzJ7ZAf1keO/jMB0bcVWN5vs4OE/sm
a/vBz9Cf5i3lzq8j9T14W8+jt/VcbNHzReRc/XfNa8vtezcoPm7UeRym632o
7muNun6SL+L4iUO6f1QrzvJ0XjV67+94SWr1fiGi+30dVeh8ZP+to1/Uzpuk
dslQtbuG6j5zodpBF6od0kXtki66r5SoHSGyib7Xc/173Tce03P2cbUrztZz
7yzdF3bUc2hHtRuK9FwQ2UZ9dJ/uo3bBJN03J+l7vZfat3vruT9U963nVM/b
dB8R6eeL9L2+SPX+s75nk/Tc3kNxv6euwxDF4RA9lyN/Vtfe8/5Eeje+W+0F
B+Vx78N7zBzS+S/y3/v0FRNfyeO3W58754DqBXTz8s3TdqvP48CN5d8Nv3w5
zaULDhhyVZgHzLpkp9op/1K3zyYM3zIjzKVvrzllTHYtvY/nRXj/fzIDis7c
QCE8L8JXtp0+aodBm+hWPC/nLxz54LIe32ylBXhezh6/8auChwvL6Hg8L2fH
9rxr96XPVdBHeF4+d9kQ/enuvasojOfl86THP74wNrma7sTz8rlvp5O2fnJJ
LS3G82Jc8/3iISeX19HJeF7OfsXzGugTPK+AD8LzmiiG5xXw73heM92N5xXw
dXheKy3F8+LcjOe10Sl4XpzPgfTxp3hegv+H5/hZnpfgYvy/AMvzEjwGvxfk
Jfj3JD+Efw/yiXhOks+ADLHMN8VZXYd8yBSvUb3LfFP8pep5M+yzND+geu0C
eyfN3VWPvWF/pTmlensa9kyal6uefoR9lebRqpdNeF6GB6gedsXzMuzmfT6e
l7F5PonnZWxe4/G83Pmn85DneaqHlD7Ps3H2wvM8fkrH9QSkZ+MYh+d59nc3
4t+z9nfE/8pyZ32u2OtZHZenz8vyIv1/X+L/ZdnLtP98RCJf+Y98gq6Gf9Gs
cdJXaXrPpsXhu5vp/OA14x494i16IDrhlWkHxfmCqjF9N1/wPtXDH2ih2wJy
P3vVhtfvGpnfSu/PXnf8wSO+p+6Ln7pqeH2chz838boee44j/JnMfP17U+k1
2PM5f2Ou3NfWPX5o/gmftNEd74wNN9z4G6U+7n3QFb8neL+vpu0UGziFBuJn
qco/aUfYkz4OzpH72pnxG+bf8oGP3znqt03XdfqDVt7Zpb7rq0l+JnPAY3ev
/oPWrMYPiZhNRbAH/XzN0XJ/+/rywz/odpufG0fs2/uvx/+h0SdunlFzVYor
Bg5ft+S02fQV7N8AX673tdd81nJr8LgAH+Y7c+VO986nE55eeVbRjmnet2zQ
qN0Wz6eBsFcD/Jzezx5y79/HzgsF+eqjHkqe+9kiGrn51G97PJLmvnuNWXZB
dDE9iHltVLmUusPeDPKPeh/bQG+F3p8f5Jf7f33qY8uXUviCz3ccU5zmYX2K
CoacuIy++rL9ZzN9DbmCEtBPiIv1/vV36CfEU0f8e9/Y+Eq6fULykR3OzvDE
oTvQxDtX0r/QyzaVq2k59JPH6XfkvvUV6CePq/7xPl9Ha2hBl/uLB32bw+ek
HgO2fLSGnhva/lNOwyAL6VPoK8wf6v3qVdBXmDO+T7Y9/1MhHQd9efziwMkX
Dt9cSHvv1f5TqbKY7oL+wny03qceCP1F+MsRJz2770XF9AH05/H+mb5buz5d
TJMntf9UqVxLJ0B/Ef5b709rob8In3bUkj1+27qWQtCfx79+WT5kWpd11LdP
+08NXQq5nsTfi/I1el86HfqL8sp/7vr50mfW063QX84/OH3Y7ldMWE8Vpe0/
tSo3kPgb+Vyt96PDob98vq9//sWVu2+k+dBflstX7/1TTe+N9Dz0Vk8vQJbQ
u9BfjF+C/kqoH/QX4wT0V0L7Qk+NtB/kZuoPfcV4L+hrM+0PfRXwZ9DXZjpQ
3+Px/xzwL2e30m/QU5PKLXQE9FXAk6CvLVQNfRUwQV9b6Gp9L3v3n/7giq+3
0WXQU4vKbdSMe6jcfgl9baMp0Fecl0Ff28j/jrxXm9qu8O47s4yqoKdWlaX0
B/SVO0egr1J6EfpK8F3QVxndpO/NVOxL5XTm6e0/PhZZTq9BX0k+BftYOV0G
fSU5NHh+7e9XlNPfivuXOs38eOFJFXQJxu1nWfeKHD7b9ZfkGOIkFbQv9Jfi
eT0/mP7qARW0i+K2H/Y5h9MAO9x2hf5SvBD7YgVVQH85v7nTbS9fXVtBPRV3
XX+49qQ7llRSGaYdYJGV1Lh7l4dePyPNIxEnqaSrw9+XHH1+mm/dcOyVB0+v
pCcUNzXYJ3N+M36C/Ivi/ppnnvq38as03459NWdv3r7z+e+OT3O3H0IHNgyv
ovGKg2nQXzUBZkNDLLKafm/f9r0MHwP9VdNBCx8b798158dBf9W0WddxOPRX
QxdDb3l8sb43B17U++s/H8z5hdBfDb16/PrONz+Z4TnQXw0ldR2ugP5qaQ/o
Lcx7QtbSyz/96B36b4b/gf5qqP7Dc5+cU5Lhd6G/GvpC9XgA9FdL26C3nH+h
710t9OfxW9BfLV0F/Xl8E/RXS91VD7XQXx39BL1FWGQd9YP+PL4O+qujGdCf
x0fh/9XRap2HnIv19Az0lrPb9L2dCv1l+RDor54OhP6y7Me86+kBHcfL0F/O
Pofe8llkA+0H/WW57vF2/TXQy9BfNqeP9r/bQBl9zpXQXyPtBr3FeDfdB16D
/rK8APproEboL5vDU7veGuhLlQdCf420GXqLschGOgPzbNJzuIkmQC8FPEH3
iTMP/eTT2pu/o879H31/2vHN1HWYnOtN6Tv3HtK3mdZgnC00Q+2Gp6CXOIts
pqLrd9v9LP/vtPHIc24dHm6hEj2XZ64+ofyCfVroQeinlV6BflqoN/SS4N66
z9z4ds39sY3zaELb/469YmELXaLn7BtfRibvVtFC0Sk3N113qI+dHbIr9JJk
ka00vbXfqrvPW0pP/rM2eMDIVvpNz83rBi56bsvkVlr8wjEzD2vyseinlUqg
lySX6D61943Tui/9YTWdN+K7eTW3t9F+v8i5d+jpH10ycVgbfXRZ4I3mP/1c
q3bMOOgtxSLb6I8bX1+0W6KYEog3+vgMPbcehV3l4zv2m3vtX68H+FrsWz5m
7GtplT72jfgzciGvp/sRb/Txg3rurIOd4+Pjq9499M1rg/yn2kGfwQ5Iq/Tx
if80njDk3hLNR/Hxlzh3S+gc2Gk+zoP+Qix2ip/jYrCp9PPtbYfcOfGzLRpv
9PMqnJtbaSzsJD/Ph/5C/JraUQNgx2RU+nn0kdd+tGV5qcYb/Zxc037uldFO
sPP8/D70l8di5/h5GcyQjEo/lwI3FRqvDfBHQw96YIfuFaq/AN8C/YX5arXL
ToHePJUBHop1r9R4bYBP2Ov31JiVlbQW+gvwMdBfhMVOCvCn0JunMsD7AffV
tAb6C/DCSVd90eP+atVfgP3QX5QPUjsvBr1lVQZ5KnBbQ2dAf0G+s09996Jk
LX0H/QV5NvQXZbGzgnw39JZVGeQrgbs6+hr6C3K47JVVgz6vU/0FeQT0l891
aifWQV8N5EFfIR4JfTXQI9BXiG+EvmJ8JfQV4jegn0YaBP2E+Hjop1H1E+Ij
oJ8Cnq52ZJXmZT6reX9H6r5QBP2EeAH000xnQz8hbvmtXT9xPgD6yeNpmmcp
8aE8nqPv9VnQTx7fBv20qn7y+C/oJ+dPqB16htrhF2me4M36Xo6BfvI4D/pp
o/9BP3n8BvST4BroJ48/U7ta4lthfkLfqx2hrzD3mrHjibGPfCz6CvO10FeS
+6kdm1S7eA/NK+yl78UjeE6Yd3mlOLL0Dj8XQ39hPgT6S/FU6C/Mx6ldK/d/
Ed5FcV0M/YV5w5XfLvrkhACfBf2FufnqnPm2U5r3Uzv4NrVLt2oe4nrFZQ+M
I8LfH/jIR3dHgjwG+ovwdX/ssu6tR9MsdlWE31e7UvQX4bGKq28gI/xY3Vl3
nrwoyDtAfxGeefAT57SuTXOV2tHz1E78SfMWH1Pc7IB5RPkc6C/Eg6C/KB/6
2sbvbjgnw5dCf1EOzBY7T/SX+31dd8FflP8H/eVxIfQX5dcbzttp1ncZ/lXt
8F3UTntG8xzduv0LPUS5GPoL85nQX5QboT+Pxa7L1/viStVfPhep3uX9zOcx
0F+Ev4b+8vka6M/j59WO76l20oWaFzlG9SbvZz4Pgv4i7EF/+fwH9OdxOfSX
r/fdNTQR+ovxgzpv2d9i3AP6i/JA6C/GB0N/We6rfsDjaqfsrnmUbtyyv8XY
g/7yeQ30F+NXob8sT4b+YtxpsNgZcn9awJ7+XdnfchL6i/Hp0F+Mv4e+GlVf
BfZ7p+PvFvCX0FdOQl8FPHTGiS9+/8TbdMfQ9e80zylQfTWrvgrY5YM7ORD6
KmDx+wv4q2ElJ4V//o0WlZ7rv/6YuObdtqi+4ny/3lu6+8/u0FecXZxiF+/U
LXO/+IdO6PP9TX+9G1d9tZHcN8f5VL13dM9JQl8JXgV9xXlAWfiKXpNyfvqk
neccFkhwXOMNT2ueZ1LvDd395wroK8ku7rGozx3Txu25kiJ7PX70mzcneJnG
GzZDfwleqfd+7v7zM+gvxZ9DfwnuvOaW1xMzClV/Cf5U4w+9NS90tN7bfaH3
nwOgvxQnNW5yfub9P7luLS2E/pJ8l8YjJkB/SZ6o925xncfuxcO6DOmd5vug
vyQPPn1e470HblT9JflEjUd00bzS3fXe7F69/xxyVsVTW35M8wqNu/w4MHjo
6Cs304fQX4ojGo94CvpL6b19hperHra2h5W6ZJigv5zd9WW3a1e8vI3C0F/O
r9J4xCbNU92i91qk958X7vhr74lPZfgzjdskyo7+O3xdOd0O/aV4pMYj5D46
pff2GR6lepzw8D4Tdtucs3egvxR/OnTO9SObKujWulGDx+6S5ts0HnG55rlO
1HulZ/X+swv05/HxGgc6da+bW45/o4reP3D5D+vOS+v9a0TzndKqR0/zJ9L8
NPTnscRl0rx8kv+thYfW0Nwr4xt3eiLNIY1HTNE82Sf1XmeL3n9ugv6y/KHG
le7r8+7hd8yspeArtMu549I8T+MRki+V1nv9rOZfpLk39JfzHxCXSHMM+qun
bjMGnPfYxjS7eMR+mmfbR+9V3P3nT9BfliMalxoF/TWo/jJ8k8YnRH8ZPgn6
aaL3oB+XB1vAL2ge7uyHyt6++P5xtCZ5y6C6QTk7EPpooXnQR87PZIk34H75
2Qy/+dzpnQZG/qRM9/e+OXBMJmdftc+/Veef4VkaX6jUPN2TvopW7bl5Pp1+
/9zCK4syPGTgLjcGj/CxzDejea1JuT/eluGRmbsuG9p7GT3weWCHV3bwuPfp
G4+Y1+LjWzA/T/NYk3JfvIfHwQcX/1b64xr6cuUxPWb08LhLZlzre3/7Webr
ad5qSvOzPD6yrMtrX75UTKsxX49LVg+edctbAZb197hV4wO/ap7vDXtd8Mfq
qet1vh6P//K8t7vdEOQA5pv7XuMBMl+P3+jzdEO6poROw3w9Hoz5hvgYzNfj
v9X/30fzgOcOnXDw6V236nyzfB7mG+KbMd8sH67+vuR3Zblp0uarB/Yr0/lm
eWfMN4/fxXyz/Kb698M0T/jtupfO7tOjQueb5fWYb5jnYL5ZblZ/XvK/snzE
K13XlhZWUhrzzfJ3mG+E/Zhvlq9T/71c84iXHDjtkaGDqukMzDfLT2O+UV3f
nF+t/rrg2cXHx5KLk2c0Tp3Rf5d40e8qx1vei+MpX6NxZZGTCb/WZ7HK3/+T
pzLF6nQcH5XEc1aSxHNmWV6J+z6NcRRZHN3lfTg+qr00bipygeVlOL4puEGn
r1O5SOexXuViy6OQxy3SeG6JymWW5yDjX6Zx1i0qV2oeR8b4pSo0ridyjeUR
yL36Gp1HhUqXJ+wZv5TEsytVFpO7h5f/X0xnYB7VKtfp+Dr4pSSOXaNyvY4v
a/xSD8GvqlO5UcfXwS+VxbgaVG6ibzCORpWbyeWDyvm7hXrrvYnjLe+BcTWr
3Er76D2H62tQhHG1qNxGt+g9hOOfehjjalNZRh/oPYLjn5I4u4+Hady9QeP8
jn/KU7/dUz2vUT9aZAWN17i846MKaP6U+/yl+r1uHdZqHN3xT83Re1f3eaD6
qSKraNfZEvd2fFPv6j2s+3wa9BLi03Qde2nc2vFL3az5UO5zCvPIY3kPaugZ
jTM7Pqlumv/kPq/CPPN4leLgco0Lb9/fKmx8Up9jnmEWWUu1Gsd1fFHzNL/J
fb4P84zw/YqjlzXu6vih3td8Jvf5VMwzyiLr6UCNkzo+qFs1f8l9TmCe+ZxQ
HE7XuKbjf+qm+Uru8wrMM59FNuh9Xr3xQYmMGf+TxIViGh/q6A8v91yNWg/S
0W+4VuOK2/NDxYwPSuI8BRrvaaJXoY8m44P6QPOX3GfZiOIan2mmg6CPjr5R
t2q+kvtcAD0kWGQL/QF9tBrf03Gan+Q+L4UeEho/aqFvMS+f8TeJTNpnifMk
+RPIVnoU5/l/+ZyS9lniMimNz7TR2TjP/cbP9L7mG7nPEqdNa7zWx3J/GTA+
pmO2y4vL+Rl4r9MqfVwM+yVo/EvvaT6R+yxx3LRKH3+D+YaMb0lkxj5LXDWj
0s8PYb4h41e6SfOF3Ocfsc9nVPr5DMw3z/iUZmt+kPsscVdPZYAzmG/Y+JOO
1nwg9/lJzNNTGeDVmG/E+JJGaP6P+yxxWU9lgL/AfKPGj9Sm+T7ucy/MM6sy
yA9gvlHjQ+qveU/us8RtsyqDfCrmm2/8R8uBq6zKIMt9a8z4jRorH3v0oJ8+
ohuPPXlIr60hlvvUAuM3Ylq7puSVr6yP3pPPHfz1TidOpVnvf7Jl3IV5PArz
iRvf0TPvDQn1GDvd+I16XtLw4LrIHDoiFLuw8095fA/mEzd+o3eP/qIkn+YZ
n9ELmbUfX3rrYnrr1rsnPrF7mE/GfBLGZ1T1Tur8u0ctMf6i0oFn5/82byW1
zluyW8mQMOdjfknjL7rJ/8D4JQWrja+oa9nSCa92LtL5hnkx5psyvqLCo0pf
3O2nIuMnumKvgi2/91qn843wfNhjaeMnSty059QLtq4zPqLhfU7ZreGJjTrf
CHeD/dnRR+OEdy6ufnr3EuMfmjr0ngsOHr9Z5xvl92B/dvAP3Tf72f0nXrjF
+IaqJn369NUl23S+UQ7u0W5/Zoxv6GPfpMu3DCk1fqHX6rb0++vFcroB843y
LbA/O/iFNnaqO3P4qnLjEzr4lSE11+1fSX9jvvk8B/P1jE/o0R9eLuz6QKXx
B/1+4O7Dm6dU6Xzz+WjM1zP+oJ3OO3DQtFS18QVdPWNi1zcvr9H5xvhdzLeD
L2jshunZK76oMX6ghisvnHZYdS21YL4x9mG+WeMH6jH4ym9qutcZH9CrmG89
XY/5xrg/5tvBB1SM+dYb/89BmG+jzreAH8T8Go3fR+bXRIdjfh28AC4eNAwB
vjeNz8fDfJvts8y3hd7EfOMcH9k+4d+M3+drzLejz2Ad5tuq843zuPcO6Lrk
+n+Mz4cx3zb7/GdTzTfrzvSxzDfnZx798KAL3l5k/D1bX3j4kx53+qwPyGsz
pw0am/XzX5hvgju9W1Q4oXWF8flMvOysu3c40W/8PVe/MbzHY4V+Pgzzz33v
+3Tv4d8XGn/P0/vteHJRJGB8PQdfd8UO534T4Ncx36TyDqw1vp7eVUX5YxZ1
8PPUH3pA0U6DgtyI+SZ555tiw2p23mj8PLtMGbNk0EdB4+OZjvmG+FrMN8kX
v3Py5K49Nxsfz2bMN2T8O8Mx3zz+E/NN8ZOI528z/p1xmG+e8e30w3zz+BDM
N8V9Yc+WG9/OYMw3bPw6+2O+YT7nmONWTUmleSPq/iuMX+cszDdsfDpVmG+E
H735tlR19zQ/j/h+lfHpdMZ8O/qeTcF8o/ztux903/+B3LmM+4Qa489Zh/lG
jS/nBcw3n4vnzL//8i/SPAn2dq3x5fyA+eYbP86lmG8+7xjI++LFVWk+F/Ot
N36cQZhvzPhw9sZ8Y3wW5uvyq3fgAzXeIvGTjr4nm6CPBuPLORv6iBk/Thn0
UcAPQx8ZnnlG1Sm77vU8Tdp65qWLL83wg9BPk/HlpKGfAuPHmQT9xHkM9JPh
PoEH91zd8guV7j7o+egLGe4EfbUYX04h9BU3fpxnoa+E6ivD62YPvXLSubNo
z4u++fXE3zL8GfTXanw5n0N/CePHuQj6S6j+MnzZ7AN3PD2+iC5+prDizsoM
7wd/wWd8OA9Dn0n7vAf0meQe0KfHvx71ysNfDlhBz/6U3ffjfT0uRZ5JB19O
d+gvaZ+3Qn8pHgT9eZyc3XT30NsLVX+558Ef8hsfjgf9pezzqpbGSwbsneZv
oL/c832HfTrpw7WqP4+fgf/V0Ufyjj8mz9/72LR97n7DtZOXPZfmQujP43uO
um5p6YINtBf05/HF8H+Cxoez+OB9jhv2fgc/zui//9ybytOchf48/qL/G7G9
wptVfx53gf5Cxodz3GvDPigPZuxz8ohDh426JMNnQn9ZXjNi5sl9jt+m+suq
/kLGh/NxQ3mo760Z+3zvW6+XF0zO8EPQX5af2fDocad3K1f9ZflH6C/P+HDC
1/S9bfK8Dn6c5dCfp/rL8h6Dd1qwem6F6i+r+gsbH86d0J9nnxn68/hf6C/L
EzqNvW3gLVWKv5wdCP1FjA9nPvTXwY/zOfTn8Q7QX5b7/3BOXiZYQ32hv47+
6sifr8/ykdBn1PhxvsH4ovYenwb9Zu17l3cp8h7lx2myuIKr33gS+ZUfaZ1W
M7m+ms7PKbp5zDdPzxpt5+JlODcfsLouVyfizjU59762OnKpKx+v9+qt1nfb
+Tln+tvPpYlWp/Xffu574pz7Wf/fQqt7d3EkkTOsbrw/9o2pGg/Tvim+KeT8
njbsC9OsLss9z51rm3HuTVc9LDeeDRd3EjnL6sT/wT73p/K/+Cye5vyg6zCe
v6wOyz3PnXMX4Rz8W8dZaHX5Lk4lcp7VhR+Ee+HZGq/yW3zO+UVTMZ65ut6O
v32enYN9cE645xUZn7z4J64OfIHGswIW33N+URpxlwVWV3WUros7917C319o
PDSzt1undbZuLk4mcrHVfd+H92axxuuCFi90ftNpGN8Sq6uScS+xc1LOzSXG
M+PXeKJPP7v4ouNxl/Ets7rvUXivXDwyyO73nd91D8a33OqsRihO3LlYgnNz
ufHKHLMdbrYYjrbvh77K6rqlznulzi9k8U7np32M8a3S9c9YnZI7F+XcXG08
MiLX6PqWWt95FweUOrB/ra47gvVdo8/Ps3iq8+MWYHyOtyVjdZLuXNwf61NI
rn5nznY4LjdcuziiyCLrgyt13kWKr46+tc7PewJxH/d9R52VOxcnY3xF5Op/
RBbrvB2/QbHFGWX9i60PrtzbF+v6Riwe7PzAnTE+xzvjWZ2nOxfl3FxLrn5I
6vjWUZvW6fj08/ZxyHXWB1fqvF28uaPPrvMTx2J863R8WasTc+einJvryNUz
v7fde1Zj7932ccoN1ge3GHG49Tq/qMWznR95FsbneHOyVqfqzkU5NzeQq4cW
uVHXuY5c/NvFLUVutD64Uue9UesK8y1e7vzMIoxvI7n7Qfeeu3NPzskScvXU
87d7z+vtvd8+zrnJ+uBKnfcmrYuMWb8H54c+iPFtIld/LdLFlRvJ9X/YPo65
2frcSh33Zl2/AusX4fzWDP7+FuqtdQ+uDtedm5Jft9V4ZkLb7SPNtq9sH+fc
an1wT8f6bVX9FVgfVOfHfonxbaVWzZ9y+4g71+TcLzWeGZHbdB1b7P7BxT0F
/6XGtyd13tsUX3Hrw+z83FMxvlK6VvOvXB2xO4dEb+XGM3Oc7mPd9LPb11xc
VGSZ8fdJnXeZ8vIkrI+r84OXYXxlNEvzt9w+5s4B0Vu58fnJvXk5/ap5D+7+
xPm9wl9VTt00n8vVNbt9VewGxwvnt7pnd57L/ldhfIBSp+3qojv6yjo/WMZT
Qedp/pfbB90+Ju+t2xc7eFzc+S6y0vgDpS67kvpqXsN2fas7ubrnSnpS88Vc
3bXbN2Sfdjx1QavLdue5yCrjG5Q67Ep6RfMY/tv3Vvi0qmiC5pe5fda9p6KX
av33kNVxuvNbZLXxEUrddRXVa96Cuz9yfrD4xVVUovlori7cvTfCr+L4vEJW
N+7Oa7Erqo2vMID1qaarNE/BnQPOL5Y8hWraTfPX3D7ucCrvjdvX84y3wp3P
ImusTns21qeG/tA8BudXOD9Y+L1q6ADNd3N16w5Xgpda/few1bW781hkrdVl
j8D61CpfWsbuv5zfK3xgtXrfVGnnhFtn2XfduRExXg13/oqsszrsG7E+tcoP
5tn9mfNzJc8i9/uaT+fq6p3ehV/G8QpGre7enbci663uWupY6pRPzLP7N+fX
Sp5GHdVp/p07h5weZP9wfVCixvvhzleR9VZn3YL1qVf+tqzd3xkPLMZTr/eD
dcZT5sYl/Dvuc77xBLjzVM79Bqur/gvr06B8b1m7/3N+q9ThNOh9WoOdg+73
ZF9152LMeErc+SmykX7XfD/HQ+DOS1l/15elwHgK3Pkossn8VPGrmqy+0J2L
7vyT9XX/Hv9/PO0im42f0fnBOx43fepdLePtObL/T1G/qpmaNF/Q+dHuvJP1
dbyOceNJcOeb8BQ0m1/peGw3ws/+0/xu59dJnkaL3ne2/efcbaN9sL7uc8J4
Wtx5JrLF+B2dHz4XfucCG7f8uUU6nlb6n+YjOj/e3QPK+jqeyaR97847ka3G
B+l4d0+Dn7/M/H7n18h42mit5i+6c93dCwoe2hQPKfvenXdyDreR80O+UL//
M8Sj/zU9yfwKdTxtel8bMB4J0U+AZ4BPxPFepu17d96J9Jnd73iCJa5QTNv1
x8nZ7fCT+vn4Ec2PdDw27t4Q8dc7fLqvpu17d96J9Jmd7eIMx8CeWG/r4uxk
jGeqj3toPqWLU1j/a/CF+PScStv37rwT6TP+GMdjLHGMTRbXcHYrzqOufs5q
/qXj2XH3kOCfO8Gv/56x7915J9JvfDNlGtcYjjjFVsOBsxMxnpf8/K/ma7q4
iPVdAZ+K413O2PfuvBPp5+35M/08GfZemdldzo7DeKr9/LXmd8q6Buyechrw
EtDnefa9O+9EBsyu+0XjKoNgL1WQw52zqzCefgEeqPmg/dVOc/eW4MO7I6B4
6OARceedyIDZWY4XOgN7osPOc3aO4CXAp2n+qLwnAbvHfAl4cbyqnn3vzjuR
AbN7ntO4zeewz6rJ4dzZHTiPugY5pfmmLu7j7jWrgZeg/nvWvnfnncig2SFl
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
sF/GeXZeoJ78V8/OC9T3lnh2Xsj4PDsvUI/bOWvnxSSML2vnBepne2XtvEC9
bM5fc+cF6qOfyNp5gXroYVk7L2BPj8t28D9hfFp/u19WnleXtfdzAer1vrc8
0odwT/Od8Zp+Cnv1N/pB8yx7Pdh+jzHZeEGFd/x3+kzzEIchzv+72XOvwD79
hwZonl4Z4uCzzJ4Tnsr5RJrHNhpxunlmz30B+3QRFWie13LEwRaZfSdyqdpj
G1QuoXLY9RtULjH7bwXs2aW0VPOmYqhLWWr2oMgVWje2Se205bQ3+kBuVrnC
7EXhNVxBn2he0omIC64w+1HkaqtTknrAVdQXfRy3qVxt9uUJsL/X0N2a53M7
4nCrzd4UWah80uUqC7WPcLnKQrNHhbevkE7SvJm58FP/2ze3WNe7QmWR9h2u
UNnR91B48oopqnkoNyFuUGz2rMi1WhdWpXbsWu1TXKVyrdm7wku3lhZrXocP
dRpr/9MXd73qr1rt3nXa17hG5Xqzjx9BPvx6+kjzJN5GHGX9f/rgbtB6tlqV
G7Qvcq3KDWZPC+/aRrpD8w4OR9xiw3/63pZoXZrrV1uifZPrVZaY/S08ZyV0
vN7j/431KPlPn9vNWmfWoOuxSfssN6jcZPa68IptJncvfh3WY/N/+tZu0fqx
JpVbtC9zk8otZt8Lz9cWWoD1KND6xC3/6VO7jRbh95tpieJ6R+1rK3Kb+QMP
YD220QdYj7jGQbeZfyDS1em2Wt3ut9rHdgxkqfkPwmNVRpKHlOCDsB6l5k/I
fuDeCx+792Qf7Vsrstz8jfmoIysnyetJ8lrk9ZebvyF1qRUkeS9J/hZ1DxXm
b9yKOr8Kmgd9pfhh5OVXWL8i4f2ppF6oH0lzD9QtVFo/IemnUKX1RWneAXUa
VdbvR3iKqrX+J8OFGF+18cxI3XWN1udk+GuMr8Z4Wm7G+Gq0fivDD2J8NcZz
Iv0AarW+yuMzML5a4wlpQ51fHf2A8Xlaf1JnPBtS51lPnTC+LK/G+OqNp0L4
8RvocYwvy19gfA3G83AHxteg48tqfVmD9SORepJmWvy88DJIvWaz9QuRfPEW
mqm8BqNQT9Bi8RmJ+7TQGcoDcC/y/VssPiPxihzOtI5e6lFbLT4j+eBt9L+v
pM5c6jXarN+F8FP7+Fetw5Z8dp/5G8Ln6eNyrVOWejSf+RsS18vZNVrHK/UF
PvM3hF/Vz31RL7BF87X95m/AnprqZ6nnLNV8fr/5G8JfGuArkX9aruPr6Hsu
48v5ycgPrdT80ID5GzK+AL+MfOFqrScMbM9P1S/IByC/t0bHFzR/Q8YX5GnI
v63T/Nug+RuivxBfgfHVa35syPwP4c8NcQ3G16jjC5n/IeML8UsYX7PmM4fM
vhE+4zzNP27R8eWZ/yHjy9Pxten48sz/EL7gMB+CfA8fy/jC5n+I/sLcgHwM
P8/H+Dr6RMNerA7z78jXCfCxGF94ez6ffhF+Bfk0AX4f44uY/yF8txG+Evku
QQ5ifBHzP4RvNMoHYHwhvgXji5r/gbyMl6Jcg/Hl8VyML2r+B/hFq6M8FeML
8zEYX9T8D+FrzecXMb4wv4vx5Zv/IXyZ+XwZxhdhP8aXb/4H+Da7xrQuNso3
YXwx8z9wb/9STOtW83k2xhcz/wP36tUxrSuN8VEYXwePJu69+xXwcxhfjEdg
fB08lbiXnlrAfTC+Am5DvkaB+R+7Ynxx3hPji/ONGF/c/A/hR4zzNowvwbMw
vrj5H6h3qI7zRIwvqflYcfM/hK8ywU9jfEnNl0qY/yH8kgnujfGlWHhoEuZ/
yPiSnMJ9e1rzPZLmf8j4knwf7sPT/BfGlzT/A3Up1UlegXyJDAsvStL8D+QP
90sxI58hw29gfCnzP37A+FL8GfINMtyE8XX0CUX8aIc0xzE+T/LFEx19PBEf
6pHmARifx+At4bTFq8AfN8jlc2QZvBr3pi1ehfjRNy7fIiv5yJ+ljY8V8bHC
tObjZCUfYkXa4lXgm3oww/N+bSdmGiP3wXdneOgxX12cPuI76tPeD3NAxuJX
4CP6KsM/Nc867+inZsj93KcZHnzTXnUXr59BQ9v7h47KWDwLfE9rcv7uDT1f
9H0+j9Lt92u5c3a/d+qK0svnSb/QZY4Pbpnwe3kee7O+r+qfXCr37zGPX/dd
ddZAWir9QeOexbvA/3RG7vsjOl0++77Vcn9+sscV/WeMWT1qtfQDJc/iXzLf
nL85q/0+s0juM+/2+Gv0Ty2W/qkDPDufZL4eH4b7yPVyf5075wvRL3W99EvN
rZs7r2S+Ht+D++cSuX9e6nEa/WVLdL6enV8y3yyPwv3xFrk/ztkJp6Of7Bad
b9bOM5lvljfg/rdU7n9PzvK96B9bKv1jKWvnm8w3y/EN7fdx5fQ15pvli9Dv
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
jx/TzynsSR+HGlNxv8No7cPsuR1qTOl7DjWmlANRUP5WCl/RzwVYzngq5hCS
D3tjxI8t2H5qagpH0M8FvE0/p3AdfRxqTMXciDv03HiUPg41ap/YKJ5uY0p5
XAXlcaXwCv1cgNUNpWJu4Dfo55R4swV7DjSlMMj+3SIOpJ/T8X3P+frvk/Xv
6P8fJq7fHD1nbqRfi8pLSsccP+MxpQH6tWj7t3FpvEe/FnEX/ZrG3z61vpHT
le9U2EhAiOW0NqWVt1VS3lYaP6AfS8pHSiPi+BkfKY0y/Viy50pjGrPox/p6
iX5MY/Txt9066cm57rc/v3TedaMyMV+I/U1jMniD57ava12QwYSLJnwUTnnT
9qHjMnhG3Lxpeq6Noh/LykvKIDrfN/5VxKMt235xREb98mUY5yCDtdvvCaY8
vNANfLh8780zMjF/iPXB92cweuzQOeh7yn2s/7x/HfWHNScuMT5vYwZXinO3
Sbl4zfRjBQ/Rj5mYk2e8qgweoR8r9pybmlH/egXGPcjgzFV/+cX+//axm/xv
355xyrZMzCdivXlfBlfx/OdT97/Kg7oi8au5y0vLbF88IotjxaUbp+fsS/Rj
RXlKmZhrR15tSwaWp16x/WtTRv3kVfWTZzHv2N2W3/r7z917v39065wJ2Zhf
NJx9flms4rnp312L8qGWkO/7hfF9p2bhiSP3QpTbR79WYeew2ZhDx/r40yPe
bdWeu+Oy6u+uqr87i72fvubottRqd3i6OGHPl7Mx34j1zYuyeIjnP2vcD5QX
FZLnusb26U1ZrBT3bbie+6fSzzXlLWVjbhzr8V/JIkc/12w/3ZhVv3VN/db1
z3/T/5x28Nx1bhb9nIv5R6ynHpPDpzz/We9eVn7UCeQDbzA+8Lic1c3v4ynf
K8pf8mDnwP/gvLH+fx/xcg8SL3dEDofdu+n5ySd6MG5CDu2v/mn6xM0bXT/9
nIv5SObnHHI8/2mSn3O4mvzgTXZu0JjDK+KqRe+hy5mH4ymPKRdz2dhvcKN4
uvd46gPMYWbPybu/97wH4yjksP/2z166Z88t8nMu5ieZn3PiSTfLz3k8Qb5w
s/GFR+SxD33qKX8pp3wmD2n6ORdz1Njf0JIz3m63Z++lphz6Js659vDdfRxA
P+fxw31LW985ZZtbTD/nY74S6+cn5fFfPM9skZ/zWEb+cIuL+hzZh3C6H78X
La/Jx8/p53zMUWM/xeni8U4Uj3dcHpMW7LFh1rU+bqOf87j5jGP27rluu/yc
j/lL5uc8TuF+uVV+zmM6+aKtljvblMc2+tTH7spltPwmH1anl4+5Z+TxvlKf
f4jX+46vuoo8Fh183YkD63200c95THx73j/P/NEON5N+LsR8Jut7rb93uV/e
IT8XsCd5tG2qAyxgAn0axO9py3MKlOdUiDll5nvxfA+K6sgLOJR+DnAW/VxA
93kT3hrT0SY/F2J+k/m5IH52uxulfCrjG7er7rCAefRpoPymgvKdAjxIPxdi
rhj7U24sYCn9HHHGCriPfg7wOv1cwN1dW8959/YO91P6uRDzndif0Vf/Prhf
7nQzlFd1Enm34h2OKGJv+jSI1w2f0c8BkvRzIeaAsR+mpWA84O6IQ1ZAL/0c
4p/o5yIOuntG56Rv7HTv0s9FnevtlJ+Lqove6bYpv8r4yDtVV1nEdPo0xHPK
tfw2/RziQvq5GHO7zPdFPEA/R3X5RfyEfg5xC/1cxNsHjrqz780udxj9XNQ5
WrfxghcVVVfdLT8XcQ393O2ift1m+jSM1zmP0s8hltDPxZizZb4vooF+jvoA
iniXfo7yMIr4Mf3cIz+XdG7Vo/VGCU30c4/8XBJfuVd1o/V1C/3XK/+VdK6z
y3jS95cwjf7bJf+VxEvWuVVjCSMtOMK9xXPxEh5k3+6flAcV9Rs9Gfftjl0x
tGD5s/pUS1jHuoUX3MOs9yzjLvqvT/4raZ/fJ/+VsId4Yea/Mo6n//rjuozw
sKH7ujfdgbxXKWPyhTOx/+DfXBPzeaI6iPlxXUR38q47jl78lvpky3iNdQ8L
XI71oWWMpv8G9Dwt69xiQP4ro1H8MPNfGX+n/wZUN1tGU99QHvkSdxfvMco4
euxPK23vLVVeTxnR/dyTyrtq+uDccwqzPlCfbhlg3cNH7hLWu5Yxn/4bdGPo
vzIifoj5r4zHxRMz/ncZL5Of2KA+szJWkMeyTPlkFUxvGH7JxPeXKT8q4gUv
d1H+1dlcry63c68RFTzCuofP3Kes363gkEnnDjvp2QbcT/9VdM/WYP38Yyq4
TLwx44NXMIM8zoT62ioY/95QXvoXbiLvnSpYd8GUT9755krlSUX9YCt1v1rB
c+zbXml1IFMryN08VPewyh3Jet8Keg4dvXb3qxLYRT9HdSEJ2PO0gmPEHzN+
eAWnkdeZUB9dBWt4P7vGLaCfK3iU+VJrlS8V8ZLXxnUnM1jnsNbO4ZoqmMu6
iXXuIfq5ind2dT674fgkzqefo+83CVsfVFAUr8zO5arYhzzPpO3PRlQxjHlS
G5QnVcVy5k1tUN5UFdH94HeVl9XIOokNVpcyropNrLvYKD9Xcfeit66aHaaw
kH6uIroftPVufX7xyywHqYqt5H2mbF09tYrTmC+1yd1HP1eRZf7UJvm5iuh+
MKqDWc06i012LthYxV6s29jsLqafqzjv/jtPmLImhUPo5yqi+8Fr6eeq9hNp
5SJFPOm0nXc2VTGNeWfNrod+ruEo5qE1y881RPeDnvK0Qt5/b7U6mRE1nMq6
j63uE/q5htH0cxr30c81RPeD6+nnGv5bfDPLSarhOvo5Y+v8cTW8xvv4Fnc+
/Vyrr7eG7uu/kp9riO4Ho7qcY3i//5WdU06tYRrrRrbLz/V1OP2cQS/9XEN0
P8h+xftrOFK8MztPqeFk+jljPOrGGq5knlCrW0g/15RX1equpZ9riO4HVypv
66/c77S6s/j91rCCdSc7HPNeEx7+Rj9nMZF+riG6H3yefq4hK/6Z9TN7GEE/
Z219WPawJ/OG2iyfaqSHZuYRtVke0X4Rn7lN9eQeTud+sM36eA7wcBnrVtoc
66fHeridfs5h/dKPrvjRaA/R/eCtQ/16h3viies86UgPG+nnnPVVOw9/YX1C
u2NeyPgoz6rd8orOjPjNHao7ifjO6us420OJdS8djnm0F3o4m37OYbdk5snb
z9W+YTBn/ZWTPfxBfDSel1ziYQ79nLf16uWe8qs6Lb/qBg97sT6j0/Ktbo76
RzvjuqnprHPpNP7zbR4eY91Mp2P9+AMe9qef8/j+v3xr5Zt3qm/+/bz1c87y
1Pei862HPEyjn5U/8LiHTcy/2mn5Vy96ysfqsnys16J+1ag/wMMerFvqsvXX
Gx6+zbqbLsd6+CUedtDPBVzzs/+qdbzlIbofZP/o4vp84qdZP7uHk+jngv1/
KzzlY3VbPtaW+vdFP3dbflZr1B/brX4CD7Pp527r22r35Ocex/r5hI+/0s9F
5ZNE5/JF61cdqP/+xVPjeVvOx270c9HOzcs+9qWfey0/a2SUr9UrP0c86l75
2ccJ9LPuIQ/w5ede+dnHTfRzfV1EP/uI7gfZv3u4j6XisVl/v4+19HPJ1vPO
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
uKfYZ7PG3U+9g24q+3cTMJ7poOpza9qHD7rV7M/YoP6MBpzEft1kfd081IfU
oN+Lp7EBPnN3ov6ABgxn/3AKL7LPqEHfo6exAd9ln06z+i0SWE+9aYxkH1GD
+tWj3KwGXMH+kxb1nyTwPPWmcT37hBL63n2NdV3sn2hV/0QCV1NvBpvZB5RQ
v7uvMYFLWL/fJr1JnEC9WZxCvVE+X6AxiRz7IdrFv05iGPXmMId6k6pzDjQm
8Uf2l3RKbwqrqTcP474nle8XaEziSPY37JTeFJ6h3jymUW9K+4NQYwqfUG+3
+z71pvBr6i2giXqjfMBQYwoXU2+v9KZxLPUWMY5608hQ3y7pS6tfvYQXqK/+
vV+dy875zlPiM6Wlr99dQ30Z8STKGE59aTz29ClL//28+eJ5ZfAt6huQvoz6
vcuYQn0ZjB3Cv33tQ/Hf6r831ls3KI83o/74ivWfv5nBzH07Gi+6erl4bVnM
Yb1vApbPn1W/eVX5/lk03PyjPT5cu1J8qyymsX46ga9Rb1Z5+DXl4Wcxmzyq
tdKbxTjWoydxNfXmsI18H8/63duzWE9+1AbpzWE466FTsLz+HCaQx+PB+txy
GEbe2GbxdnLYQL1p5ZnnMI/8HA/Wx5YTH2yr+Dh5PE+9GeWD57E3eUs+jFOf
F8/rK/Fv6v+m3ozytvOYTj6Sj+eoNy9eTav05vE96s0qv7qAZuoNYBz6vHhF
beIVFZR7k1MedAHjqTfAVdRbQIF8oQ7xrQrKwcnjOOotiBcUiBdUwKPkAXU6
47cUlYtTwFPUW8RI6g1xPPUWxfvpkt6icnIK8Km3iOupt75eot6i9HaLz1PE
sdRbxK+ptyR9vdJXgkd9JXxJfSXp6ZOeElZSTxnfpZ4SLmWf9atuPp/XZenp
l54ynqCeCp6knjK62Ue9WHyPMo6inkHpKeOX1FNBlXrKmMQ+50/EgyljC/Pt
G2B6ygD1VPFL6qngHfYh/138oArmMp8+AeMDVVCmvhq+oL6KeCtr3Hl8/1Vw
HXkESYB6K9jGejAP1udcwbt8P60XH6WKk8kTSOJx6q1iAuuRPPyZeqvoZZ9v
k/RWMYI8gBTK1FvFPNZ3eShTbxWHsl9yi/RW0US9afFFqtib9XI+LqPeGs7n
+7VFvJoaZlNvBp9Tbw3TWa/l43PqrWER33+t4svUcC31ZsWPqan+LcAx1FsT
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
uHzZxd84Yv92zRfi/wGI4mY5
   "], {{{}, {}, {}, 
     {RGBColor[0.20426933041053577`, 0.3612607391169643, 0.5926966745114541], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnlwV9UVxx/vB22tba0zAgpJCHsiEWprZjL2j06aTPoLPx6EhEV2ZGk7
ta6dsepUBbIBIYqISEVaF9oKViAbWSEhCKittVPrTDvFaWcUyAJEQKqMpdPz
6fm+Sf44uff+3n33nnvW77kv41fdX3pfGATBVfuTsLZ5eBDszQuCQ9ZmjgiC
KqNKo4P22wZr042umxEEf8wJgnXZQfC+tTfYeJP1x2luhdHf7feR9vs2+z1D
v5Ub3W7jJ4YFwUdG6UblRhvoFwXBTnvnsSgIRll/m/UftP4N1t9i/R9b/9l8
W9/6j5YEwRh7Z53Rk0a3qGXdr9r8apuz2uaPtfF6zXuoyHlqst9vKg6CXuPl
z7ZemvZn3iqb867Ned3mTLHxFqMao2yjp42eMspSW2t0wuS10uhuo7NTg+BD
o1NGE+3ZJqONw3z8tj1fYzTJxpv17C0brzJaHfjz1ZqzL8/ln2b81Vo71pSy
LuH7w8etRuOMKo0qjG7WuR83yjSq0rOT4os9cmy8zegZo2lqt2qtrTrb83bu
L6b6OtONths9a3SbWt7P0J7obLJkw3mmSh7Ia7xRtfj4qDAIPrc1Hy4Igvem
2762R5bp/x471y/s+WijN42/5UYrjPrFO+/2aS/G57Um8jyn54wvaU/2brD3
TW3BbKPTsgf0/qn0xRl7xTvrLjceZtrcA+hO+scOetQy76LOyB4dNm+B0UKj
w2rvMmo3mq9nn0gevNNt46VGy4wuiHf0fln8wtOAfuOd45IB9vSq8bbHqNF8
8GDgfKaMRpnszHSD/UaHjMwNgrlGrUZlRvOM2tTCU7Oelxq1qGXeGcmGM/+k
yH34oAlvkvV/Zf1y6z+Q5zL82OiqbACbqBMvs4z+LfvBnj6XjTDvI/nBmiH2
jb1X2dqX7fekbBMbPSEbfUvjeq2NLpuM5uicV6RD9muUnnn2mfZn7yPSySKj
G7Ncjk3DvX1FfWz8p3lu5x02XmC00KjdaL7GxL4So7nDfe69stcDxn+/2XFZ
tq+HfuYYVVm/2uhm89Nr9rzL5t2X7bGUNUqNWtSWGbWqnafnzUP2pIXPKbbW
FqMaowdt7YfyPGZOtXGtnqGjB/V7m9bjDOiNZ8QFntNHj8STp9BrwlvGxBZi
DP0xCT/HRp0FO3kkz/3p0Tzvp0JvGc+0fmT0pPVnWbsuz/v11l8Qua7vN98P
s/xZvebSr9P89eoHWb4m65NHkBFn4rfHtNcViyffsHnbCzwPNUuunOVpnesr
WT7mXOSdFsm7PuX8rDC+TuS4fSBnzov+brH5I7J8TP/n2a6LsbZGY+hzGqz9
OOn71OdbDJR+Nhv9d6rLGjn32niX9XvUvmgUDXfe6c8e7u0u9Yn5r+f5Xi3W
tuZ5fsIX/2H2dGe259ubsjwvkHc5P/n4OZu73eis7fWnpMtpT77/xrMzCW93
qD9+hNt6h/L8Pu17Kuk6fyPf99mnHESuJedepzz8tvGTke3879a5sFv8AV/Y
a3NO25yZNuf6LN8b3nj+ahzT8lw35cIL6DtTZ2826tPv9MENddiO8Mertv4/
bf18W/+vSbed14znDQk/83prj9vzC3d4vFkVef/uyPdok6+PzvJ1y4VNMsQH
vNVpL3AEMZd4WyUekR9YBFl8UzJBHiOHeaymT04Zk+Xn6dM5WqRTcAnrXl/k
e7Jfus54UPwUK9YTJ98wux15u8Uoe++ojZcor3Qqzi0m1oeeS8g/C0JvLyom
EpfjGElLzJ4Xek7inQ+me+4Hlz1kfnXF7Lgh5THktOL/A4oxTyj+skYcj68M
ybGfKr/hO/gY/oU8anJcJmttnTV5jgkeK/BY3JxyTAA2GMUeBe5LrSnPJVd1
hlqtTc4HT7BGU8rz2BnxSj47q/GZQl+ffYhB+D4xgDh1RvOIXWeV82eH3oIR
duc4D5wd32PtmYp7vEuMmqCcDg5ZqTx2XHrD7tBdaeh45bwwxCXpZW7oWIdn
c0LfE7zDeTjXveg6x3MJeaQs9DXQGbmInBTLjvZhm/+fpPvW0Xx/hxxEbCnX
mWJc06Ozl4S+Z7/wxyeyhyWh6xQdLw5dp4xnKTeT//HN/hFu23OUpxuVpw9p
HOOkDuEF3sM/lhpvjTken2frvQbh536jtcrhR/Q+v/EMTDFXmOaQ8FaH8Bf+
XiVfZe6AsPhKk9OKPLfpSPtwBrAfPl0snNQu3BTjJPZYa2u15XjsinFVjLNa
Ne+U9nkncP7OCveskC2AbSuk215hvYFhg3jwgmxjWei+iZ3XyEbQx9LQ9cCz
RaHbP/q4K3RbYrww9PmXZIvnZVczJW/8rkq/oevloe+DXxFLiCldiiWdkvty
8X5M8aVLz4g73XpnmZ4zJl4g4zWRx+VXctxHBiQTdFqp/ZFFl9Zlf/LEazmO
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
         "]], PolygonBox[CompressedData["
1:eJwllVmIj2EUxs8YY18SgywXSvzjayxRkxt9msb86a3JBeUGk6XEkAu7MNkJ
YxlbfyZGxjIzZoxdlosZyZqlCFGD7NIQGiO/p3Px1fOc97znPe85z3u+fgXz
JhS2MLM5fC359gWzS5HZ4JFmB8AX8sy2wDPTzM6Dm/luwGtx/guehE/mMLPG
gWYTwdP5foI34zMDvCHfbHW2WYuE2ZccsyL4Avg/fN7DD+JzHd+hnFcKXsv6
UtYN/4+s7w+ey68szuC8zfA+8Lfw5/Aj8Hr2j8R2FLyNrxLeD16sXPC5DA/k
+wM8E1vjCLNb7D8HXwfvge8r+CN4JXw0vPMQs65Js63ks4182pDPd/I5w3oO
65ms9076HXVXxZwFXsS3B94anyXgeXzNrN0n/lXiF8KLI7fNB3/Bdhb+Lt3s
M7gC28PIc6jSXbCNpRzdqXHVePh4x6p5BTiFT6eE11C13B787p84r4G9x+Gj
4G3Jtz35lsPvRG47Ad7FVwsfAC8BH+brkvCaqra7g699J94n4m2Cl0fegy3g
VdRnLvVpop/vqE8NtqeR16gWfCh4b5vZ38T+xcFr8wRep36yfwP7MzjzG/vv
YzvI/nGI8h54L/7tE65JafOmbOAG9FgPrsbWK+Fn6mzFVGz59M31nJW7ajwG
fhf+PMvP6A8/pf4nvOaq/cLgd1EP1ctd5JfK9hr/JL+twXOVxqS1VGy2PM1r
oFpIU9KW3kxn4h/Dp1vCa67ap9ODdHpxEz6Z9Ruxv6Uy9u9hfzFfSbbfuZHz
rsSuXeWgXJ5I8+ytpj6P81yD0uIzbAuI9wD/DxlmF/Evxb8P6/mtzNLQywH0
MpUc1uH7Ff0VgPsmfa985CvNS/uPsM0mXmbSsWJ2A2ckPffe8Jbg+tjxSc7b
n+8ak9bu4lPA/o5Jx0X4dEj6HXVXaewX97sd+1oNthRrL6VZ/HvyHl6A10qT
kb/R9eCNwWeJNCgtrgw+S1LwVeCy2LWjGaJZ8pYYVaytJN4b8DJsU7N9Rr3m
/BXwGfDf8IYcv4Puop79gU8JPttUM9XuOjF2RN7za3mes3KXhppyPAfl0oV8
i8A7g88OvTG9Nc0AzQLF6E599sU+W5WDclkdfK80Kq2qh+qlNN5M/DXBZ6Nq
otrU4LMeXIm5Os9npGalZt64XJ+RmpWq6XB4aexvRzNYs1gzT7NPmhqU6zND
s0M1GwU/Da/L8jPawSti743erN5uTey11YzUrDwf+yyThqXlKvUw8hmmWVYe
u3b1T9C/YVpwLeoMnaUZoVmhf8wEziuJ/W7qmXo3N3ivNEM1S8uCz369Kb2t
/xUYUUw=
         "]]}]}, 
     {RGBColor[0.3681007152821374, 0.4330705389170451, 0.6026820076296701], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXeYldXV9s+ZMx1QRDCWmKrRMcIwZxiYYWBmzgwezglMAqbYY8QC0lFE
xJb+vkmMCU2aVKkCYokxzURji1joCGKNJeXTL9UWAd/7N+t+LvLHvnZ5di9r
r7bX8+kxU86eXJJKpa6uTqUy8o+rSKVukLte7iglrNfHDXKzFO8t10euh9LX
lcS3ngrfKX+j3DGZ8DfJzVS+XnLHyuXKlV9urVx35VlbEuVfzqZSQ+tSqS8q
/WblO0HuRLnptC13tNw19nviZ6IvtHej4h+TO979Pc7xa+WOcds3+fsJHk8f
55vh+sh3nfvI2F7pl0oVa1Kpdrm1mo/u3VKpbnKrFa6WXyW3WH1NKe9H8u+o
jrRKudnq0+flzpS7Xd9KlCctt6g88h6WW2j/kFyb52ON3GsVMR76u6Y62qS9
tmb1vyGVOkNz1CsT87pZ7thM+HfJFdpSqeFyrS0xr21yObkl5dE+fV2teItc
q9wa++T7qdwZ7neT8i+XWybXLLdSboXcMLk75TbIDZfbLLdJ7rF8KnVS31Tq
96NTqbzTNspVqW93lESbxeZY3y8p/Sx/p652ufXeEwW5u1zv06rz06rzkdGx
j86Sy8st8JwdLI+1H+Zv6zzWdu9F/A656ky0z1iLKrPFbWzwd8pP0bxUyVXL
TZardLxF+VaztnJD5FZ5LsZVxJpm5MZ6bYlf4TkmfqW/l8pNkCuTK5f7rcbV
R+N6WOMa7+98G+w5Zt6Huk3au0rfunPO5CbJVbh/bzWmUqfXa56qUqmp7ns3
XCbGyvpPcxrlJ7p9yl/t+jhXrd53jHOG6mzRfq9R2bnZ2A8/kRui/dQsN1zh
HR4P9W2viDEQ3+k0+rjLPnO5pyLmlz7uq4jx0P5uf+fbfqdx1rd57qj3eadx
7l+pCLjD2X3VPmf9j/Y5M/PUv35ytXLz7feXe64i5oK2X/CZBzbc5u91cnvd
R/Jd7jPNWh7Oxjm91HDizmRvV8QaMW+sxyqv2QNa36O1vg+Njrle6XV8U/Dk
bM3tiJrYK8CFpeWxR5b6rL3ofs00PNros/QFnemiXE5r8ITW9xK5MZlYw3U+
PwPKAx4BY1jzNYYp7IvVXmNg5wafO9Z+vc8y+2Otz+BLbh9Y+LJ95v2A14G5
m2PY1rckzvdQw5SK+pi7rXJLFG+QGwgMtD9I7nXDNmD8U9pv92g+LmP+qgN2
Vsg95TXgPL1epvGXx9l9Q+ER5RFvEyz8ocp2KnyO5mawYMtIha8p6vypjtJ2
7Y2ygCnAqklKX6w2Ukq/UeFxwGqFv9QSdb6pvK+VRTuUGaY6O9pi38/1WNlb
C+WycvVypU1qtz7aW666y2hXbll1+Bm5pdXhl8g9Y3gB/FgOnJUbLPes09j3
C7wfaeNpzwFlVjhvs9wqzqTnfZH7MkBusX3mfannu1FumX3aW1kdc1wud05t
wO0PNI8rXTf1rqiO74yHub7bcPMF7eE25W2WaxU876U1OL0u5u1GuZvKYs5v
cPx1p90s9zXN5VflOjWfuxSfJDdZ7hs6L1vPFMzXealWf/5XdX9Lbrjqb1b9
jap/lMp9ibtNZYcp/UylZ5VervIrStV3uTKFl5dGvFThZaURTyu8RP7tciVl
4S+V+3BYtLV0VCr1vsY1SeEr5DJl8Z3y49S37erbFvXtA+W/Wd8XK/+rynO9
x3lA7hq5GXJTlX+v8t+j/IeUf7byr1D+f6r+yxS+SG71CI1TfZ/Uofl0uWvl
zlJ7L+tMvyKXLw3/VbkqfbtD8dVyLzrvTLn9clfLTZd7RW6W+/Sy3HWOv+S8
xJ+TmyZ3ldxe+ur4866DMezzd+rdIzfF+SrlVpVGPyrKYr6JpxReXBrz21Ph
O+VvlDtd87BC87Bc8/DXYbFnvqd56K/0tUpfqfS3hwV+9b9KP1plN5RG+T4K
b5F/t9xxZeHfI9db4btK49tRCq8vjTKXKPyh/INyY8rCPyTXS+FN8jfLfUbt
LlG7y9TusWWRRl1/Vh+a1Idvqw8nKc985VmqPMeUxTgo/6by9FeebypPB2ug
NXlJ7mztx9HAZe3Jw1rfGcozhfUWTJsuf67y7sxG376h+tYp/Ual/4f9J/hT
2kP4XHv0dYHcQrknlX+e/A/kqstizdfIfSS3qDTm+izt/zrt/wF1MdbbXJ56
KTtfrlFj2aSx3KGx/G1Y3Ds/Uv/blH6v0tcovQd9Ko157K7w2tKIf+g6qPew
+0Xb3cqiL+QDvwGn5A4bVhrzwd7tpj5VyZ2aivH3levnfuHXut7+cnVup9bx
D0oCznKH/8c+d/h7JYFPc+cscLms+4Vf7/3XIDdQ7ln1c5zclZzNbOyJJ+QW
af4naB7ONCwg7yC5h7LRzzmM3W2CFzDXA1zvIrdD/H33hb7eno2+vSv3kOp/
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
         "]], PolygonBox[CompressedData["
1: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
/x/lSHRq
         "]]}]}, 
     {RGBColor[0.5488113495384903, 0.4965790685279039, 0.4964495580987789], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXd8lUX2xi/BkBACAawg0kWCQBSBJWuihptccslNIAiI4trWXV11V13E
Su9NwF5/rm3FLggiTSmKZd2m665tFUFEerO39Xe+PM/94B/zmXfKOzPvzLwz
Z855zpkOF1w+5A85iUTioRaJRMPwTy5LJO4qTyTuKEgkxqUSibZdE4nHk4nE
oY0SievCXRtuYrjPwm0JNyncVocnh9vmcOuSROK+4igr3IQob3y4DmVKJ9+U
cNvtTw23Ody4cOPDfRJurMPbog2/7JFI3JtWfRNc/1bXTVk7XMY0t2Oi0z51
eROcvsN1FoV7LDe+K1yzeH40V+Gm8bwgV+HCeH4kV+Hth0Q7w00Nty3cZIcn
uA+oZ0W/aFOvROJKt3uzv4MyR4X7o9vyqdOah7s63Oif9QV90yLcNU4rcvpV
jdTOq1xWS48D+bZGOya5TTvdB9PD7Q43I9zMcG1jLBbEONwfbkqMw+Rwx8ZY
jMhLJPZH+ufhzojnfY0UHh7PexspPC36v0PMgadjDiyL5+YxFhfGWNzo98i/
OuKPiPjLIv6VeG4Tz1fF86xGKmdPuDPzlP+LcH+LPB0jz5jIM9v1kG+Oy9vn
du/xd+zyN/E9Z+WpjC/DnRPP34T/rdtCm+Y6bV64+a5vrsNfh7sp3M3hvnL6
Ta6H+rLtxc+2a/bP2jXHdfwqT2VR99l5KovwyDzVTXhontpO2Zvie3vH996a
1vjs9Fyc7m8j/FmM30SP5Q7PtWnhdoWbHm5GuOvDHRbu8HDXhTvU4T+GKwzX
NNyV4Zo4fEW4Aodv8HtHeK4cE66t5zF+O9d/dLg24caHaxWudbhx4Y5yeJTr
aRZubLgjnTbBeY/2N7RxHWNcJ/necfto71UuoyjcteFa+nvW91Ke/4S7L/6p
K4v1He38D/OvVMY/+VHEbQjX0fOCvqyKfl7aPf7b+kSivf8F3qmN+FUR/2jE
d3Be0q6J91u47qvDNXd4tNvV3ONA37T3OHSgTo8HfiePU3unvevvo5/es8+3
7g83J9yNbvd1Hs+P7TM+n7hP6e9N7jvCG51O+CP3F+9/4LbS9v/a55s+tE++
nW4fbd8Tbma4WeH22p8dbre/h7RPPfaM52a3hfAWxzFH3vc3Ufc+l8G3fe7v
mxvuslhjLg3XNNaZLxw3L9wPPaNPYkwvCzeC9STWljtibWnrsWU97xPxj8d4
PRjjVR7PC+P54Xgelqf/iX+0f66+mW89LVdtoj9OydUY0Pd/76Xn8ohL5iov
/ffnmFfXF2s+npqrvLxfkasyKPcYt4V9hO87NlyXcKfn6Z/l3x6Sp3+X8JJM
InFCfMva+JZfRZtfizY/GW1e1Uv/4OWHaJ4yXzt5DnZweGmDRGJwuPpwz4bL
hKsNt9h+Xbgl9geFezpcdbh0uKfCDXCYOd3e5T4Z4ZTTFoYbGK4m3CL71PGM
yyDtOZdNO/hn2rks1r9jw3VppD35yHBHNdIeh9+qkfbbo8O1aaQ9sbXD451O
eEy4I/w+dAT0xGHhrrd/eLgb7B/hNbiz62bNPS5cV6/TnZw2x+06zmPFmLX1
mLVxeIrj2nkfoIzicM+7v4eEW2b/9HALwlWE6x/ukXCnOXx8zJfS8O8Ld0uM
7bfHJRL94vm1mM+dI61NuIcjfEq4U8P92T7vPxSu3Gl/aqByfhnu6Bz1O+NP
n2wI91G4wfHfDAq372Tt88R9GO6ByHdyuLJw97sMwg86rtzfsCvouN3hhsXz
nvD3hnsx5vw+/gfmbZRdH+7zKP/v0f4e0fYuxaInqOe/jUR/4H/AWMZ8/i6+
97qY26uizOHhzgi33PUNDbfCPnWutE++0S7j/UaiX/DfY8yjzK+jzNFR5qPu
72S4x8NVhqsK94R95vFjTieNPmnpOTTP49mNORbfdEO4Y2LN+dhzizm10T5z
cJN95nImT/QbNGNNnmizLZ5Pa2MtWBfuimhnq/ivH0qqnpci7uVw10Y914Rr
VaY5RV7SoAGh+aD3BuaJ1svSh7cVi66EhiMPNF2zoM3mRvz04oN0XpHn9Zpc
tSOdJ1qSsgbliU6EXqzIU98yTv3z5DN+VXmaS/RBZZ7mD+FkntIJf9dL756W
p3UpS2e9Hd/bNWiVKUGrrIs2/7lYY1aXJ5qbuuvzRL+w9tXmqf9IG5yndpE2
IE/9Tn+n8tQWwtV5ivvEcww6uIX/89W5+mb+/4XhLwp3WPTPHdGG+cWi1xjn
4/0913mMr3EZzInR7j/KvTa+pU2M3YKkvpt82f/pWr//gd+hLfwfV3l+8r/c
W6yxYu1YHm1ZkXtwzbruZ3N69M/+GerIrmXkY+1Zlqv3WY+ez1WY9WlprsK0
lbPIE7ma00+F/3Suvom4J10vcc/kat19NvzFuVpP6SfC1Es6ffdBfHvPGMc5
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
LEkdtFXN3vP/Qxq18w==
         "]], PolygonBox[CompressedData["
1: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
3wueEfDmof8X6JuwYTe2lCammBb3ntPe68scn2Au21K++59kjGOMtVx3jmI5
5C8gf2VommyQLUvRN4r1+AkfsYT+7LRjA/l4+fo3kLkAPRcdO+CfBS6Jrnbg
veCvU47F1qOvEfauTDiW6I5NK+g35rcN0AbBPwlbeiJzrAVj0zJY7wVpx+ZV
aO8yXqPQuiQj2W/gH0I/1BlWbMtvXVmb9eAyrP+vjD+I8btoTxTYZ8t3N+a3
ydp/cfuWnazZhwmvqdZ2C/KVkd+S8t65jzF2M9bkuH2NYiLFRr9BH5Lpb7II
2elx+8Y90LdCb429fVp6T2hv/J5ybK3fisCrsXksY/2dNbskz3eo7tI2WrPI
Ma1iW/n01ZFzAOUCLcHvRM5hlMvcBN4Kbsl4eehO0KYWOEZTrNYM+pzId5Lu
phh4Ovgs9gzItMwU+G8I7evk4+TrpEO61mDjH0nHlIotOyKzJ3IMoVgiAS4G
twq91voG+haKsRVrt4f+WeQ7Xnd9c/Ai8C+M3z/TZ6oQ/mX8Vpm16MR4J1jv
GezZdbmOsfdoP2PDw9C+IYa5DH++HPlfOcsl+D4PwT+IVjLHMYxiGeUsyl2U
w61APo38H018R6eSzkmUmyhm2wb9OGf+MHvvLXAscsyh2EMx507oHcDnmjgG
COn/g1Yq5pj470nHSIqVFPNujjsGViysHKw47pxLuddj+JRjzK0t+LuqjokV
G8fBN1fjTIJPKvZjTxSifwc6VhZ4j2qvTkDfa+irx3pXYL4VacOY+7usx4WG
/m0o+GHGrxtzjDaI/t20qjHnlP9KOmdU7qgcZzn67ue3mjHnVPfRb550rPE2
e7pUR8dMip0UY++G//LQa68119or5lLsdS/2H+xsnyPfo290sINzVuWut0Hf
B60KuEZF56DKRUfTRuU6p16I/ufAI3Ido88FjwAPznXMd23kPaC9oBxHuc6z
tGG5zqlmKPaDPrSic0LlhspxlOv0Ahd39ppp7XaxBhsTztGUqw2EfgT6Hcw3
I+YYtUfSMaBiQdUI1sed8yr3Vc64OO6YTbGbco6v4tYp3a+C60eOARULKqZX
bH85eFEl5+zK3Zfy/c6wVmfZg/diWz/auRbO+ZT71Q1N02+iKaZWbK0cWrl0
R50J9s848KnOzgmVGyrneR979iWcG+Szfj/wPX5kvLszfSc9zv6ah8z2XNdE
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
         "]]}]}, 
     {RGBColor[0.729521983794843, 0.5600875981387627, 0.3902171085678878], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
lXYL9y6l3UfjvVn57y2zX7HjbhSU9LL/mxXu7ztjDp+ofn1aa2GK1sJlmrOX
Cv6qeZum+I8q/grFby12mz4RjJD90yLXr73YdfxXkecl/XGaYHix4xLvatVt
pfI4VnVLFDvuF4LUkc6/00ivN9KdLhhY7D5+TTAw1/OAMe8v+8YY8+wi49Dg
yODOUwRTA/edHO7cIuPH4OkFRcabOc+zioyLkx58eVKkyS8yHk+8zkXOG1x+
c+Q9TZBTZD/y3ah+2sD5UeM7x0mC8YKL1Z8nq12PqD+7FPkuQb57yP6IzEcF
RbI/IPNBwZ5F9ntMUFjkOt4v6Fpkk3i7y/5wV6fPK3KbyHeyyvpKY3eeyjpc
4/lnwYt5NnG/IHurwkYq3jCZFTonVshvpeBvXX2Ogi8cF2lGyXyoq/Etwv4e
4ZyH56ucw5VPvu7vp8n+J9nvyZJflf3/LPNY5fFyns+jdrkPk38b4ZrDL8m/
TP4LoDELblS/de/i+K8IenSxSf2m9nPaeuV/WJXLOlTmXzSPji51G/vleu9k
TuxW5LrSR9yRJggmgvMXGT8AL+CuebJgpiCtyPdA7oWdihwOvpBaZJOw58uN
A/3a1ffO6YIZcf+cEXk9VW28+beuvr+S9yzBzsCnwSmqc70HMY8H5Hpvwn1I
rucy7vQi14X74qvVXuN9tA6O09rY/RCNi8y1Wke/qf1LtY46FBmPoW0pRS4H
d3GR5xRjeLvinltq3J47+hmCM+OePC3ak1HkMrl3ZhbZZG10K3IezJGSIpv0
L/QA6AKfxL16YqyfdTH3J8Q981TBaXHvmh3u86s8X5mrnyqfibJ3C9oB9Tor
7vmnR13fjL48RXBOleOfXeX5Tj7nsNaqXB9oFG9F3Nlx7z0t8upf7P2PfZyz
/oFq413gttx/uN9wb5pb7TsX96ff3QX2w8596t5c4wRNvAHlGhfB/b7yPUNw
puCmXJ/xnKV35xqfIB7nwFmCs4t8VpwZ7vcEp0f6dwSnCk6LM4O45whmlroe
1GFurvEJyng34pL+TcEswSmcTYLZkdfHkce5grcinLD7oh3N1FVz63PtV71k
HtDL9k+ZZ7nGS8BB7sw1bgEOcleYtO0hzcnPFPcizcklucZdSLMs0pFmca7P
fvCUO8Ik3vxcr2H29VtzjQ/hviXXeAnuG3KNr4B3zMk1LkL7b841jkK8edHf
uP8v3fjfYenGy8FRwEdujDxIf134gRNdHyZlLIi6sC45084XXBBnG+aFRaYN
gNeC80J3/CBoj9y9VgbOe0G5adY95HdRtf2hhZ6ifppYapr2V0r3peAy7W8H
ZNm+v8wqhX8u+35ZNv8l2Ff2zwbYjX1t3Ce5I64JvBv3uvAD/yY/yrg0y3RV
aN5nBR2Zt4pzgvZ6VrifynQZT2a6nM+iDtdpn74WnEB79Wz1636aG3O01h6C
VsHbWI3pG+DZ0EI47/8qOC9whXPDzfy9KdYX+PiCwPk/i7jnB05AH18kGKey
XtU6P6XK+1lrnEmchcPCfX/cy3H/qPpuo09V50NKbf8qy+ZP4f9xtPtc6Lel
7h/6/4osp788y35fR79VFbh/6W/y+THyvC3mCHv57WGyxy8ME5ylQWvpZ/VV
/UjTlK6u9t0cEzf0nMe1dv6rOXHVcM8r/JlHA8s9d7kzvq6+mCE4WdBY4bdh
3oW5dzKPubv9FOuEOb49TNYKOOsUwdTY+yaHe3P4TROMVz+/rX4+vcp1uybq
+WOsE9YH9Kero87bwo/yKnu5jd9UGMecKJhU5Hds1h31HFzsNmwFx6n2fst5
NKjY+B1h4L/3x54MLfb+uIsNqvDbKm+LTcXeZ9k7y8r9Tsj7IG+A4MC8A9YX
ew9lX6wr9j6Iu6HYfu9FHR6rNo2Xs/HRqM+QYtfxDcHQCr81kif1fTTi1xZ7
DyXfmmLHZd8dWmyTsMZil0Ndt0QfTy/y+TMpxoCzfUL0V5vmR5rO9xEyf429
jL2tXy/7b1Ndfgs/9sWUPO+V7J0d8myyb/2S67OH9DsjLvEy8rz/su+m5XmO
LhKk59kkjHvrp3GHpU0z4yxZFHOZvTszz3mwx2+N+Ui8TnleD6yD16KtzNfU
PPtRXsc815F4L2vO/6Q2LdCcz8/zmcpZ1CXPZyruVerv8UW+M+6Iucy593OY
tPMZ5fOt8pkz3PfO8dGnA9WP32hOVnMH0jw5SX5rmDO97P8fpblHcIHGd1yR
acHQnnm3OVxpuqjP/yyzc57PMM69QtmXy7yfuoC3crfXvleQ57oTNqiX0/6q
vLPy3E+cnzl5zoMzMy/POAHtzM2zH+7sPMelPOi1fYI+Dp24d7ihp/NuxBtU
9h6Kv7viC9YP1pj1Vds1NXJk7yyYkip8UTj6Nu1VP2U5fKtgvOJkKe2S3Z0+
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
mnPj+VTvo+ti350QeOpkwZRM7z3cUV+ItfFSuI+OdOyD8OrPzDR//qZINxU8
sNFyU7+pH/6puj2suj3e1bgt5UzM9DnH3GUubyjz2CNLSL7s68xp1h94HrjY
yjLzk8NXviHymJTpNbYi4h0b9aVtGyOc9sDT/uZgyxJszTS9lnqPjv2Y9PQl
9wfmBf09Nu4TjMG4uE+8XGbdgchXMn4nxBxnDEbHfGRsMQmbqbZfqLb/FT06
jdbB+OUI3yvYo9kDkBVBHyK6EEdpLiTKfN4eH+2m38GzpwmmC17P9PymDSkx
ntRvc/Q98V6LuMQra7RcWUqb8Q/OK3AN+gg6wR9jv62M+9rQRvOiZbcZ92S/
Y1/8UefLdYLrBflqV5PaVZjj9f+9/H7I8BrCJG6T4oxTnLPzNK+4R8hel+U5
ki7IiLFJC/ezDd7fVo8wrenyIabXl2oNPqb0D5Z5XfSNfezJBvfbSsV/u8Hy
HW/I/k2D9ch8IvuNzabdPyK/j5X+YNWhC/TMBvO3r1ecFxtMA1mL7IPi7Kc4
d2dZbxbyEuydl/Ww/AVyGKyVDoKOtLXBeug+U9qE2jtZaT/Oc99nxR50L3QW
+d/T5jNjp/omJdPnKzzWvC983GAe0XdG+Jz5VXF+Q9cluloEr6gfVglWCt4+
WGt2sOuDbNTU6MvMWBOdOPdinXUM96Two68521KiDchqkRdyVtMiD+pNmfit
TXHZa2SeJNhfbTxMbfkgx31K397d5nS82fBeQ3zSrw35LezIeSGPhF5RdHv+
oLr3UT7vZlsuhvMG2sy5irNa9s/Uxg0NfhfbpD7Zr8znEXIz9ANx3lKc+8qs
nxI9ijsU1llzJU/4xU+yp8me3up3qPOH+G2DNw7eYXjXSJ5/nIfoW0Tf5X6C
X5S2QGm7tVofI377Z1iOC52ke4cuR+Kj15G5yfjSFzfFeUm+mxusY3eL6r+m
we84G0f4LOgT85izJa/PrnMC8/42jwF9yVvVfzl7FOdU9dXjDe7DFcrnwTan
faDNZ0TvyHdrg/X8vj7CexU6W78SZGjshir+fZ191n4rv++YZ9yb5d8o/6fL
rNv1/+KcJpy1zXn8tcxvMnxWY34bumDJ/09xblMO8f6g/lvKPlZmHGeH/H4W
7K46jFBZZ+R4bq8Y7Lnxi8JuEswTzG0wzn+e2vVMq/U6HCH8c77c/+6tPaDN
a+gWwa0ZLue73n7ru0lhH8k+t83r5+aIx7qhLObwmpjTzE/W0srwZ60sUNzb
oq5zo06LG0yPvbbN63Je5Msaovz5GZ6fZ/f2vkQ5r0Se5fK/QP4L5L9d8W4U
zMkwjffN3s73wQbPq5dH+OyYG/jWpSpvheJcIvOhBvMLLpH9KsFG+V/Z5nPn
psAFoGkQH7rG3Q1+w7tFcW5psN/Fsi8jjeIslXl/me3ku7zB/Xd7m8/BeYF3
LGsw/WeO/Be1uZ8Xtnm/XkTfZJhGRJ8T774G6596SW2ZX+bxoh7Xt7m917V5
D1qY4fTcUegX5sdPghuij3ZEPzEGfTRnRjHPcz3HGTf2PfaVXrG30Oe9Yp9k
DRAOjZd7AHOLcXu4wfpYXxlhnJsxJmyw8j9e+Rdrnv2vwfLsH43wGmauUN6x
cf5tE7zfYB77t0aYbki9aQP4SbHyeSvTNMVt0SbuCsxF5uznDZYff09p/9Ng
me4PwAd4R1fallynuz76gn2dPmZvhZ5wa2/TFE5XPy6X/bQ235Gf6e01w17P
/L09w/s7c5M5vSLODvbMyxuMA5/c5n121eBd62BVxAFPXtLb8aA/UBY0iKsb
bJ7a5vOEchjLixtcryny76P4l1FP4STT2lznqTJntTnPmTKvb/D966w238Ue
7W33OW22ny3zgja363zWsvbkEu0pe2s/2Cn7nrIfIPuFzZ63zF/2nStYW7Hf
XR5u9qfLwj06cLVfO+zC1XB/E+muCjzm2sB12PuuCTd74dXhBrfbEXj8t5GO
MOT2wImRXUUmEFwTN29TvFEhE1ZT63sUuDyyfcRlzjBn+8Q+zhvONdDq0jwH
q+Jc2R6ym+D/Ixv9flrY5ne5n+Ntjv370mgze18fQd/YKzH7ZfjOc2LguvPD
r3+G8UlwLPJ/JXDYEwO/3Bl3EuYiPAJDYm6R7pDYCwZF2G3hNyDD+oypD+c+
c4O74aeN5qf4Nfg00EvKvZG75SNlPo//E/OYPKozLAvN+r049o6BUd7CCMc9
NnB36gq9+Nrox+5B776ON71G89AWtZkeDK3z1qALY94StGDMm4MmAW1ibtDH
b4t3p94RnqSdzIt4/SOcfJFvBBcHZ78uaO3Q33mvg2YBrQLaUJ/Ijzc8/KA3
QI+/PcqDLtUr6C/cV3qmBR08y3cI8oKWVBX1hc5E3J5BK78h2g99fGHke7Jw
orPK/K5IXjdGPOQ5qS9zlzvYFUET5052Zbi5M1wVbsqYE+nLo4/p94Nj/l4V
aXjP+ypo67zL8r56aZj/jXHiXeK7SIf5baTH5A0TOX7qD93+iEbzbnVrcz2+
iTIqY6yo0wVllntcHG34KsrmXvdr3KuvbPYZyBn7ctznmPcVGaalQeftmWET
GnGvDNO2oXGztpA7W5/udbBR5quCCwf5Lo88A2trQ7rDWH/ExV2Z4fzIqyrD
+SG/1jvDJvn+Y5hlt5HhTte9t0L73qBWz/fN6eYtWhX3VOY+a47yN6X7zv1o
le/dfyiy7Dpy6/g9Ev7ohcONrHqq8j9Y+fdR/h1l30/27q3e+8oE5YIf1ec7
dWf5bZjPZtrQK85s+qtnnNs9I+xrxf+f4n+m+F/K/rns7w3z3gROfUDsy5gH
Zhi3oi/og5si76o4C3tEGey1fxQcHHsuZil7tfLfrvx/HOY9ujTqfUXkfVDs
6bSje+z3B0Ve3yrtd0r75TCfvd2jPPYU+pg7A/sQ/Uq/r4k9kbs3dAXoC8jL
Q594M+y8o/LWyDsjsvyb4o7z+71tsPVjIGf/VtAl8Fsf/lvDzZnwuy6EwT4n
eLckT3QmYL4ednSZQy+DRrZ/pXG7O8tcP/ZsaD/o3Fgfd736WtPUkrS0DkFP
gy/u4iHmt0Pen/xpx8o4K5hn3NVoC3oMuJO9Gnbahp17Dfoe/hM6H9BF8L/Q
gYBOiK8GW/8GvH7fBL/fzTHmrKfnh+3SJfBfjcuHGpfXh/mt96SgYa2O+c4Y
8M7GfgmdArm3L0L2Df61bcF/iLznpyEni3ztx4MtYwtu1zvua8jtfR6ye/DE
/RB8cfAcfhf8ir8FXswdDv7B7cFDuDP8ODuRLUR+DNky9MqgNwc9JTfHHs9e
39pqXhV0gaCLnnEDX+IcRI887efegJ27A7QIdHyzF0CHXBG0S8aNM5OxI+7+
Ef+b2JvZO+tafZ/7T531eaAfhHseehfQVwJN6+vYo0mDbkP4E6GBQG+lbtBg
W1pN9/qyzvvo5ZEGWugrQUdN7tfs393jXZ8w+M7IE94z+AVWxrs885b2I9u+
M87c5FvlrXGGrosxpy7IxyNbvlh1bq41vwLv/z/Hns/5C50JPY/Qmn6LM5p8
4YNENgP+yfWRH+0iblvE3xHnBnltjzMN9zc9TAt+InDbg2O8fooz88Y416+N
829bnLc3xJl/Xbg/7eH1ydpM8qmAN0BzOiz6nDv6uCrf03nzTfLL8M77Y+TN
2/EPkTfvy9+l7eKj+T7qwpvyT9EO5NwnVpn3mDdN8qPPeEcmP+K9DY1Ldbup
zHyq1AfZE95hv4yzE5lDZKWQkxpVZTs0HN5EyY825VT6fntR0C2OqjLt4u1s
y1MhSwWvL3xR8EMdMchxkH1CHpa2/y7jE+/ZjCE0g6lVphsQPjb6h7fgr+Ps
5y34q8ABkBsnDnJqG3q4TtTnNdkLK80zwdv0t4Fn8H79TeAZ9BN829A20f+K
Hf5t6J0Tw/+keM9OvjN3iHdm9NZST/j9JoRfp3jz3hnzemy8VeMm7pRo1+h4
Y6bN6HjGH55A+ubI6MOyVv9X826ddW4wd5Ebgt9ncZV5fpA/QG4AGQT8FoU/
awbeBNKjo5139d//NFGffNTT/Eb3VFkPOu/Cy6os0wDvEPII5PVogfWlE+/C
QtPGnoz3eM7Ml+O9nDP2pXg35wyGVwE3+svJHx3mnM/wLRDGOQxPBLwQnOfw
MhDGm9j9VX4X45wmnDD+FsEf2Uzese+JOqOTnTqj1x3dnOjohO9wldqYXml8
96ngIWDMmQvQL5gPs5tNw4DmQV1YV6wn+NXhs4G/ZnaVeXm5pz8X4Uk+DkzW
6NORN/ML2iT9DH8CciL06R8KzZO1LPoWOiLh9OP1Vf7/inccaBLUvzh0kcJX
+jtPaeRN/Qg/O+L8GnsJ+x34FPUgLnjWU1GvimbjEOhb+k8P09ahq3POvxZn
PXQszhpoWZOCpwF+japW01k/qrOsCP88IEsCrwY8HPBucM9Fty9nG3db7rvo
P8EPO/dcaCStYUePFHqyoONOjLVCefC73VZlnrfqVt8FP6/bxR/GuYLuK/Rk
cV/8Pu4P1/5/9wfcK4f5bEHXC/ktiDz5qwJ3osC8abdUmT+NPzr4p4h/OtDL
yFigm3F7vP3BH8G8Wx5zEv0m0Lvg/wHHpL+ZO4mujoPsM/8fkf/nyudviv9l
T/M94HdzlIsey7myn4f+y2bTzKDh3af4/+rpNyH2Zmhq7M+8KRGfdyXMOWHn
DyXs/KPEf2rMp93z/TZ4fcwrxoo7H3cixpX7FO73e5huC80WvdHo9UOfH/oZ
0QWcETrt0PPbMXQFoqc4NfQIYqLDGD0C8F2gE2NMnnUIoi9wQqQjzapy62lA
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
7+nB/tPq9k1MGG+9JfbRXyI/8JpXWj0mJyR2yfIRr6l5Fz/gWQ1+E4W36/d1
1clyca+3+s46U2nfaTVtZkC96d/wFHJmTkTfSaX/JU7KB1LGU62+R5bWey0h
r0C+yFuxlyO/M6vBbxXw3iL/yBmLrOX5yvPpSv9Z/Uir6bIH1puODl8jZxf7
LHs/smOcCaPi/KLe18YdYMRw6xmdWe+9uVOkQX8GujOg+1KnayIN+z39h/zl
GMVZqDjjy31noH7UmzP/xDj3D1Ocqyt9b97SalpC3/pdMpykGdJsHkx4NifE
/YN6vNcabwUJ7ys/xN1luvK8jztJue+0nOfITnKvmhp3MXRso1scvbBJeW/i
gfcgv/hq8JGx9yXlntfGuQR+xFm1MfjLVsX59pDy/F+l/1xtUL/dUqwy643P
roxzCf3l6Pv+tNzpGQNwG/A48uY8BC9m/yXNoOH+u3VS/S55b8LAXzk/cIO/
stfjBhdcH2cpPHCrY/8Gz30xzgRwZ84Azoo+w633+qR643Ts0Zwz4MKE40ZP
M/qO+beHvZs+3hZj3C/m3Cetpq8PBudpNY3qooT3yxmxZ4K/czZQ9uHN5tWF
z737cL+BjK63LmF0MfM2An5JXag39wBkpEjPXgK/L/vJq9F/yDCCo00M/BCd
ztz/ocEuqrCu572LrA/7h9CdzP0eHnLu0vz9xP+O/FnUtclyMk8cqntYk+Vh
HpU9t8kyPH+X/egmyyj+IvufmyxL/KPso5os67VT9m5Nllt4UvYjmizfuF32
zvWWHbpA/dSl3vIAV3BXqLdsyQ2tfg+4tNZv4piXhR09++jb503+k0bz1p97
qP8zvrLWNCHCL6r1Gz3/xZKet/Sza+xPHtDoL4w4p9dYHzS6oA9rsr6M75Rn
9ybzZG+Uff8m13mF7PVNlrX7RPamJst3fS77Pk2Wr3hJ9m117sOj1ZZhTdZ/
8W/576yz3Msk+f9c5/4ZDU7RZBmM5xVn9ybHeUb2EU3W/fE/2Xs1mQ9+k+wH
NbnfVste2uR+Wyd7osm6P76WvU+T+dpfk726ybJJb8s+uMlyku/JPrTJsosf
yt6/yfJab8jeqd71mdlqPdn0D7wW6J5GBzX044E15iGDfwz+oLpa88Pgxg5v
DWZ9+PPecFqtadHTa2yHl2SG7KfX7vI7PeLA0wNvT/KfH+z8zdG/xvzT8E5P
aTD/+vk6Vyc3mBaF/NC7jbtoVJfV+L9A/gp8v9EyAchykR4ebPin1sr++lCv
EfzIHx4qeKmGhJ23lr9GP1xb6zzBkcgXN7jSnBr/I8sfsqx75iRr/7waz2Hm
I/OMfOBPOaXGer3pV94reLfgHR96Of0MzRzz7LBfG/GSvADzIv51NU5LOHjc
jbXGtfgPDDt45UU1/v+btQJOd23Un/A5ER+caH6tcaeraux/Zaytq6IttI04
4FCMSXOMS0a95/+ZmjNf1XmvGC77x82mU5QmLPOM7PN9CcuF80cLsuElCb+f
vTnCshDIRPSX35fNli0fmPAf8vwlj2zGoIRxyA8V99/Npi9UgWM0mx6xT8L6
6JBPR4fejmaf2W0J69ZDjx366/iv5I5wI+9B3kMTliFElrBQ9u+afXdtkH03
lV9S7bDXmk0T6Sb/vITf5LaO8B8lSyLfxoT5Mz6Wf++E8eT3R1hvCPpDWkf6
Tx706CV1RWH+30j/t8O/O0k9IJjHjPT/2PyTjUw4upnQ0VQ70vr20LtHvg8l
/N72s8rq1mJcZIb8SpXu4GrLGe4rc59qy7H0kllZvUsuBbNC8fvLr1+1xwNZ
F+LuKf99E367fVt+lza5DuiLKosz790RlmOknAPpwzqfI//X6n9blkYfNSvv
pmq/o58a73e89U1IGPf+zwi/T/LWyNsmMpa8iRym8L8kfIf6fITfk3kz5g0Z
eXLedI9O+P2Wd1zcZyb8VvHVCMvf8u4yO+E3HN5fcN9a5zPln8O0pzX7T6AL
D/UZyv7A317HJ4yvf6E8VmotbBlqPuqXZN801DQHzkD80Vd/csJvNv8bYbl6
6jgl4T92lkVfICtO+8bI/8KE38C+QZ5U9WqvdpsviTd6eATmJvyO9cMI/43J
P5jodUIPFOHXKfyqhN/DvhthOVj6eJj82hO+H306wnqO4AO4NGGdUORxi+y3
J/xmtk1+mS2+VxyXsB4Q9IHckTAPAvwDpEeXE+N2rvzvSvi9cLv8urT4HjKe
PKv9xyrrnz9X+XuVvDq0GA8+PGF96uj4ZT7V1Hhv4Rzg/XN6rd86z0j4zrB3
i03uDdwreN/CzjvaS+r7u/mTR+6JTdY7hP4hcGPwYnC1CxJ2H9Tid0TwdPgN
4O0gDm/Nryif5eyXccZz1verN64EXgq+BO7Ut9j/YvOfJv868789a448wen5
hxQ/4vGHL3+w8BcL/+Xwpw7/51Bn8oeHZ+1Q4yHwhvFfJ3/PVwteGGrcAx4e
1jNllLSYV4P3BHg5eF/AzrsCOAe4R7XqfGXCYT1ajE+AVwyp99+uvBvAZ7Jy
qP3hj1ot+yNq+yXlfl8gDu8lcxJ292lxHPCNRyLtQ+hCLne/US58TfxTnCh2
m8GZqH9VvXEU0tbVW7c2dzX+cqXtT3Cmyn1bwne5gS02icN9mD/z4DuHxskf
socUu9+5fzxY4TsI/c2/EPxz8Wa17yP0P/cP/hriDsKfqfzJmvxDFZN/U8GZ
wJ32qvffo/yryl+syX9Vcf8YfD/w//xzqM9+dDM+MdRpOZfxB6fiPAWvwr6f
8nxqqPEx6D/8W0re/EnL+cQ59XOcOdBKoXviR1ncY8mf8x4dpJxJxEOHIv/q
Dih2X/C/LP/O0jb+feX/V/6bvbTCurmhhd2ZsLtOfbt+qHF4+CfB47G31tv/
KXCLcuvzJi06qE9qsh4e9PGAKzNXm+r9hy/zlHrw7yr/6TJ3+U+Z+c7/Rvy/
zH9E/EvEv8z44eZvWv7Tpa78i0t9aQN/8dI35MV/5fx/1FzsP8TJg7+Q+Jcc
kzD+4iWcvPh/bnyt+b7Pb7KsEDJD8Ac8Xut5Tjtp785Wz7vnaq3TG16HF2vd
J5gvhZ01wxr5vNVtpu3bZF+h8JW15gmkz4j/ZI2B9PC9MteZ818pfkW9ce8V
rZ4TzI0HZT+o3nPj8VbPP+bSXa3mm1kR+W+uNc8N+Cq465bgveG+tzn8y+qN
5z/barrswlrPtz3qfY+4Q/7P1bjOz9Z4X2P/2dpqvbHst/ChYM6IvXcKe6Hs
k2XOqrUdnmR4hmaFHT56+hxe+gk1Tkt+yTTwgI+tse7jMTE+EyL+CTW2M24l
9b5/3drq+tF2eLnYy9hb3m/1PsJ+skH2eTVuI3TuybXOH156cNUFgdNSHmFJ
WYTJEYc3CvSA805BP9KH/Pm9QebGWp/vT9ZaZzp7HTrTccNnzTnzUK3/HH+w
1va/Bg/mg2FnHyUt6aDzLak1rQ9zadiPazGe0fEwnYX1xiFKhnsuomcevuaH
Kb/W+yrnEvb7KLfG8xme3Pk1zhd6JDw0D0d84mGHv5W4T8T8hw/myWgX+zf+
5AduQ9tXsP4Fi2rdxwtqXGfKaa/3vT5juOPRX/A7ggutrTV/3Zpa2w8NPVVr
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
tnhFxs5ti8tnnfUBjfrweNkx4sl9aHHxGfHw+Chz7tgZPBln1Hfl7OjamRGm
Pd4YHt3vLi5+3zfiu+Avk2bj+s2kjctuzmHmRCfnM2PW+c0zZzxnPf50bl5c
+6g99A8nS++d73c2ld+c84PQ5uPm8InYB9BnZCPw7bHiG+GHLYie41Pt/iVD
bS1lZzRU9qZ0Melh0uN0zc/IhS0818KuFk7ol60pO9PPtfRL+f7h4eIh4h8+
OFY8Lbwr5yZ6knRHPzlZetTvbnX+fPvm5/n+qfFqUzwrvMgdaVu6OOrKD8al
7b1/yDfak82wtoQ3eW34aGyy6TvSddRmf5N2g3Puf/wL+9BfDJXPF/afv0i+
bGHxNvFIj2rhlsXV3kcm1m7Ti8tewrp5RO7hK+pz3+r3T02WHvd71hWW503h
pX5zrPiph4fXi5+L9/Cj8aorXuVoxuOtLYwkVg9zZW3mC1tbfEL8UrxC1/pd
+T9MHdz7Xu4bF66NZzoop2edOX5x8az9zwkZ4/jWN81WWSPThf9IN45OHN1z
+4o9ZQ6bko6e+u0T+s7+0AuP5KHxspFmh2uvWBSexEzK+Vr2FjwL31jjDwiv
wtq9MLwia7oYz8l8FeM5aScxnpN2EquHfWMg/Ax7hvzwb+wJ+4U/tGO4+k9f
HNipdZXNOPvqdwzXGrq67anPtHvPdgoniQ4Ynt7R7f7TnXp2TLee/6RT+Nxj
o2WbtKbd35W1atNs3b+WHspo+TxgCySWpv8sXpFr/izgPMGAmtPNwqOb09/C
vzu05f8DOkGdvTpe+IZXzVY+y1rfrWrvPNWputLRlSfc0WO7VV/1m9MVhv85
1u4/2alv+CmgF8zH1uHt/sPt3o4WjmzXj7T40U7ZbbPfZrfOhv2Lw+WPbGm3
6vWjTrXlF1q4bLhs6b+Y9JzesPoc0a285XtYu/77TpWnXl9J3Va2+090qn5/
Pl76SHR7VrT7Ozv1jH6S++zdlnWr/B93ygaRrSObyuXduqeMS8eLVqNjBiPD
+F54QvvvbtXJv34NX661xVdnC6fW9RV0cbrVvsbCbS2Mdqsut7RwVAsjnk0W
LtGrE21faHPgEbgvQ4WBBisNzXZnt8aZccSfC3p0Dy3ayvnYaK39m7v1//rn
9pQjvSX31OPWlKke8EE/Hn69M5izGB7s1tRXeVe38IEWPtgtHy/vDy98U7f6
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
zHF9ZB3kF+dFPiO9M7IT/7wh8hzP3j1Zfh6eb/X/yHT54OOLjw9MGINsm+mu
0WGjxzU8WXg4P5wovHH443Rf+YWmazLnU/rTwT65vv3/6y28NlB+7PizWwmH
oaUPaOXv38Jd7XqgU2m4b/Dg4MBta/c7nXq2uV0vaPG+LdzQrt9Ivre2MK/d
26eFO9r1fi1e2CkMOXnAq7ut3Z/fqfduH6g8pOHJwZVT3rZuyYTWhPdGH4Hc
3FpuX7GnXJf/MOZenCqfm3xv4guTn3U7e/X76fs/k77CC78249S4fDb38Kqv
6pavon/rFvbH+eHVvRD+nfGxZaD+yf/vynO8xq0D1X7++bncw/+je3lRvufH
Wz/An3k+zz27sX27O+1IpvBaC68mhucH5/L97fp7Le+/65T+/rqlpcMPf+Bv
2r2/beG+keKr4qmuGyscd/r+5NDk0XjsM9PV7/wZvq99+5323Xc75TsKDueR
E2XDQc7HfurQ0TpPeiY+NGfL93arTN/flH7Tf4d0Kz91de70DfrnxjyHI4gf
jS9N/0d+S5PnEZPlD+VXE+Wvhv8bsg/9wZaeHT2/rzAz2fDvXlR+vPnz5pMM
NukRE4X1AvuFHYr+/P3Y4vfGqq1gNfzrVPkD5COX3Em7fr+F46ZLHsTHI5mM
e+SacJLgJcmL/wYYay/PlOyZXpNz9w35P1iM9K3obJGd4Vff478jHyMnI0O7
sNX54PbvB0+X/Gxz5Glkb3dFFme8vyO0FLnaHfme3Gxr0qvzrjT7Kbrl9BZe
yhpGXnFN1nj/gWZ452jRDVfnnnain0FPg/6AMg9OuX+ROfHrzMttqZ/5uT1p
a7S1mm8CuNTd6ODSPZe2zg8Es3rf2OudmXWQ3PHetBFMHvfZ8X1+vPwS0Xnb
lDlhr4JpRK+LHs2WkZKNkYttnK3/urjFr0yV71Q+VK9Pn5hPP097+F5dBlI3
GOjajW7+ePrKv/3OZPmg+VkbVze1+flm5uotA7XOvdXigyYLq+zhifIL3V9a
mERvrixcon/NPgQ3CmaUdecPWvypFi4eKR0I+g/m+dy8p5tLR5ed4F1Zw9g2
WXvOauHMrL9ntHB6p/ZX+f1+p9bFz8ivU+vcpztVHrsTeE3a1rrp+aezZp2d
fDvZq+xd9stPtvi/dCq/H2SO/GFic+bkTsmuybBP6ZScXBo26BuZ8yd2Sv7u
+892Sg4ufVK+k6brQP/s/E7t28rUXvbt3+tUPdAT/k/6zTbOTu7V/J+zDWMr
dmDy2JA9YEP+x9p8Tv7T3nZu0gP5V2n4vkMtv8FeyXn7vUqT9ZIN9yMfdk0H
gE9EPhXp+8/hscJnhf3d7RWdBK/2wF6l4dcu6lX6jUW1bp3YK5xx9BRaim0c
W0T2cTCq5U8/H36wevV6hRMslhcsGRjp8GT+eap8om5tY/7lqfJPzU81LB+4
uDCFjN2T0g/2G7H+Ma5PTp/Ym09r4dTszacnvSDjzpiz35+YceG9Hel78+GU
jIutsX+zBz8/UjoW9Cs2jZfPMHL2ffK9b/hIgafKBtM8MB/gMVu34Bpbf9F5
6D04NjcPVHnqrn6PpB76mP4FuSR7d3QPemFZYrTq0sRogf+5ci8GDzu7Nf+f
7eB4bAdhN6B70CxwGtA3aAGYE1uTHss978GfQDOhp/Zp/3lqC6f0yrZOfmwH
j8lz9NfqxPLalrmuHitSJrpp7fKSxZDJsHvmP4KNDHwFdDOaFw7BVaF5ycPJ
y8m4+bzgJwN9dM5I6XHS2zwk7/oeXsDV+R4+x/b8AyyBa/LstTaGPtMr+hK2
AnpcXwxOFjbk9yYKd+HLefbe1Avtf2jaW17vyT3vwTi4If00mn9FS8I7uDHP
Lh8pHUp04Prx8s+ELqSjat2wfqJb7P32/dPiF5BPQLZfrufPL/zi17NPW0vQ
L3+b9RHN8t2siX+X9FkZR+Tc96bf2JuaA2Tgj2ZOPJ70WePl52NR5s2jGZfo
uNeyD7FpgAPGruH3Uj66ZCT/bW85KvHN6Ydu1mZ4QrCj0UIwIW5KG721qMaX
NfHIfOeZNe7JzAc6ZdZH/b7fWGETfiJrq/JhHX0qbfCdrIlP5fv78t/W2Y+2
cbhkaeEbvmOysD0fm6g1Wx707d87VphMaIY7YhNrLVgRGoeO0tm9ko2Rg/3p
bNGB75uuc/3y0Trb3xV6CN0xhxFG5+z8XvG4yRIXjBYPYo8f59wj83RvQXgT
+BDSeBT+aVVosRN8N1q8ali9MHvNqQt7xdPB4/lsq9vC9k53uvJbmDzZRrKR
/P5M6aedkHxg+sJDtHfrEzJLck5nTnQzutt6sCPPtrf8P9y+3dbi03olR9yR
vvQdWS7duDVpBzqP3kd3wpiHx4umfTV4wmxL2SW8ljqclTYmq9w6W/+7utX9
zNwjYzwjMdmj86m80Gin5546nZd2JcM8p1cyTv0HM9264NwJQ/31pOk8ofvR
xZ9s5b7e5vCC6dKXQpM562zKd86p/N77H3hq1+aeMxN/GGh9eyb/Gca6/Z8u
Jz1aPORlc/l1S8+Lvpdzyamt3P3bO6fMlm+NN5PXEXmufuf2Snbuf25IOf7B
nEGXG7NwxJ+MD7b1aQPfOM+jxY0n/qqNweVtLvxBu95NF2i2zvarQ7M76x8T
mp1enHfoxtF/PDZj/Tcnq0+fbfnM69WYMF4OS1tqu/m96hvPjNnFsU3dN33p
2cGHl09e9vcXZCybM3/UK56m8b2gV+PgjNAT3jO3Xsh3zhFsx9iJsRE7MM83
hKbZkHEB99o7+BJsqmBZ0AmnE+P8Q1fHfk+XdGNoLPXYM886RXMb353ktz70
1sUtXNQr/Rv5eG84eXhmL6LH8P3QRhfmHxb2atz7t/0zXq03bJfZMPMPt3Ky
/By+MlE+sT+ytPBhPza2Fy8WT8DZ2xnROeiQpF8eKZ0wukb8iCwInXbjePlJ
pSuLnjs3ZQ/kn6T3S13Ujx083Hh8myuzNiiDbqy2Qi95/nz8ybnelfeH0jba
ER35w7TFzuDeG6vfbXTgi+jgmVqfrFN8Ldh/4FLag/5lpORAZEC+8z0a7Jvt
2yH04UytJa9nbVHmTzOG0GtP5H37gX1hzxnnA2W/x47PfMangLX49rFaA2FU
OiM5K+Hj/VUr62K05UzZa87PWIKTSd/Yns6vFn+xdE/oedE70f588F05Wn74
tLv75MNbZutfRyf2+vPbPVN094/SXidlfZXmjwetZn2hR6ytyCJ3Bdtf+2+I
De/qE4rf5hl6/ZKU+WLmwr6xqzRGX0h7bcxz6XnBivcOvU98WGf0pVnDpHut
/MHw+tEWdP7o39FzdT5xXkFfHJU1j/6p+3RQx4LniGdp/j4RPiXfjXw4Pj1T
Zy9rsbXzy7O15/7X2aJ73t/dy8s5JONyS3Ar7OXog/dlP3OWU2//4Sy3LP/h
vOcePgp66gOZO+gd3xkT7EzxUvHnrhovP8HOW7eHDw0zA21F19D/7xwpHXHn
r34w9q17r42UztAve3UGsL7bf+gruY/n71xqDfXPc5it+H9z2MTaaFWwL5/O
Hui+PdTZ2X5o/DvnyFteaDttr7zNqa82cj7+YNYN9aYPTRf78ta+72nt/Mez
pavjmr4O7IKR8N/ZLMJQR0ehk+bnXIlu4l9Emm0jWguWqT3wP46WPYlYGi+M
7jAdYrwR/BW+WPhX8c5v5/05n6YvzJT9MH4IO2HroPUQr/KNNjcva/G3Zmqs
3ZL99bLZyue3puv/5uUMjG/CBwm/Iug3flD4P8GjEvN5gmfkuWejoQflgdej
zuqKB8N/ibzwhtRdGp9LHnzRqMs+4S+rkxgvEv8K74xvLXw1/lS0Hd4ZfyrS
eGfykD5/tt49vK0Vn1xefaCN0cXGKfqKjZe9yhnEuOuHViTfI5MjjzNnXfOr
xMeX/duawneXPVvaGd9Z15p53HidT+BR8ONlP7aHs4OX/x6siWBwPDJT/gz5
PrQfsqWGr2IvOGO2yjys1f+dkzV+npwonqcxYqyYI69Hrw5ekfWSHTTfYspU
P/w1Z27nbbqgaCf6oLBtYNzAxbGGfznz1zy+Iuu5sY6faM/UBr2sXfyV7Zc9
+YNZ57znXIW20v/8mC0MPXJI9lr74TWhAcmh1rd/7Jsvs7X2XJmynU/Q8mi1
s2ZrzRyerrXmquRFjuZbsrQ5e2xyHmvDa2kTPuL2z/6873StJX89Uzb45AH4
/ZcvL947Hjw8kVU5V35lpOxd0TnaTzviYbDZt8bskSd0is5DAzq7Gkvo+k/M
VlnLJoo/Bxcdj47PP/j1/2Omzri78v0D4XXpjwvHa0wYmzAH1JH8AT3z65Ga
w+zMySHIMWAUeD6HA/F8ZBTszLUHnvGcjbo2+sTR9W/GHDtzz/FQ0ccnhv66
Ov2D9/ux2Sr3o7Nlm+5d/Nr/B66nkds=
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.9016346035225553, 0.6240865088063882, 0.2950672709199213], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxUnXd4FkTW9rPlXRWBEEggjd6DIjEQxew+hEgICRASOoiIddfd1V1RURGR
LkUR7LrdtorSey/2vvYuSO9dxf7dP8/9XPj9ca7pM2f6mTNnzjS95C99r/5l
SkrKx/VTUn4lM6M0JWVP25SUVVUpKU/VTklJS01JqSN4TPbTZdYQPCL7aTJP
FRyolZLST+6+gjm1I26q4MnaYdYWPFo70pHmcdlrpkZe/5W9Vmq4n6gdcXE/
WJySMjY/JWWd/GYnUlLWyhwsmCuop/C6gnmyp6eGe7XsTWU2EQyqHfHXCJ6u
HXGpw+yzUlL6nyk88wSdU1JGFqSk/Eb+ezulpHST33rFfbh21OkUwUrZG8ts
JLhXOLRIjTh7Vd8qmX0EN8v+uWCLYIxgq91jBdsF2wQjBR8I3hfcYj/iXWO/
9wTjBbsEOwVNBFMEkwV/EbwreEewv1a0cbXgVtl3uIzRLn8z4bmKl6M+EVwv
98eCjwSjBJ/YPc7lkP46h38ouEHwqeNdaz/wvsl5fya40SbxGhvHSYJVtaPt
aa/5smekRt/cq34cnR99Ulw7+p5xVFI7+pv+Z+zQ1isEd6idB8o8ojwPCQbI
3l9wuFb4496i/irKi/FwsFaEk0enjhq3qndlbvTNUsESQaXNxYKegoWCBYIK
m+BbbpMx1dtxFwl62Vzodl8uWOaxvsLuKvtR3vm1Y9w/4fHXLDXGZfV5asd2
KSm7hV8Xt8GjTpOj8OzUwKV+arQd5TVIDTflZ6aGm3JyUyMN5TM2G6YGHpiE
Mfabp0bZzB/GLe4ZGv+VGv/leVG/rNTId6BxZQ79rnbMbeZBV/cPfZYwvo+4
LcGX9EWy/0fwb8FvnQ53hebXnzW//uU+I+9V7stV7u9GHjsTBQ1tThDk2mRO
fKP2ukdwr+BJ4f9n4T9K+P8o94OChwQpuWH+TXBUOA2uo/Em+F7u+wUPCL51
HvcJvrNJ2A8OJ6+Rwnm6cH5YaX+RG/n9XXBMeQ6pE/ke19jrrfJbye8fGtsT
NLZbyl6itFco7bmq1y9zI90/KEM4DxXOFyhN3cKUlD/IvED5/Co3wv8p+E8i
8j/Omqk8ZyrPoXL3yY3xvFdwJDXqNFCwXfYKmeWCfYwtmVWCPbL3kVkp2Jsa
frj3y963TsRLCB4VPCIoFjwueEzQxeajruc6wdo6gdd6uw8pnwEy+wsOpwYu
uA+mhl8/weeyl8nsLtgqe4864d6WGvjiPpAaccFpS2rELRXslL2XzJ6CHalh
Us/dqVGn3oJdqWESb7Latofatjgv1sfz1PadBe+pj87OizWEdatUft1qx1hj
7d7jsYa522Ntt9df1rZunsesgyWeB6x353vdYq3tXjvyZT3t6rWNdb+sdoTd
KtzOFQ6FgleFT57M6ayX6uupMpsLmtUK+22CpjZZ9/vlxvp9UHCHxsNIjYdp
8r9K8LbgLcHV3hNwn6exN0Jj703Z/+r95F3vMT1qB07sOaxxuKl3H6+LlHnA
ewtr+T630RT77TOOBx0Pd7XXvKrcGJv7BLOF56j8WKcpm3WB/gAX1gXc1bkR
l/1pmtd38p2WCPt090Fvr7vsS7Qr6yX9U+m1mX2rp9dv9r8Kr9/sab28xrOv
/s5rEntYwmsbe1oXr2f08xyv1/TlU3bTf0/bTdvNtbtZQ62TqsNaQVPZV+eG
e4rsTRqG3202idu8YcRdlxvhq3IjTYuG4bde0Ej2FTJXCho3DJN4DWVfnhth
U3+W3zHBHYKZguM27xR8YXOW4EubswVHBDMEtwsONoy8pgn2Nwy8wfeQ/aYL
jjouZRy2H+m/cn53CVo2DNw3CLp2DDxz5ddO8Jzszws6yP6yzFcEebI/mxth
bWV/JjfcZ8r+gswXBWc0jHS42zcMv5cEfRsFrgcE/TqGvVp+F2s/naH9dJni
nNUw4lJeWcdo04mCNoJNuVFea9k35oa7VcPAHfdNyudx5bNPfmcLXpXfa4Ir
5X9Pu+iH/IZRD8ImN4x+oj8nNYyycH8nuE9wv+Bbwb12fyO4x+6LhNsq4d64
serbU2twB7WBzDy5n5X/c4IWcv9D/i1lNmkc8VcL2jWO8OcF04TbCuG2Uvbb
5N9U0ExwecewTxHMVpyN7SKPXOV1v/Js2DPirVG6tYJWsm+QuVHQUvb1jcI9
1fk1d96UT5rWjSPuJkFb2Z9pFHi3aRx+uElD3uuoS+MwyXd/uegYrYkHZO4W
zJd9j8ztgqdl31EeY661+42xzFjJ8xhvYzdjs5XjTfOcaOHxcZvHN3052eP7
a8Hd7oMTHr+4e3eMOHs9vls63+nOr6X7r4P7n/47y27yam/3/Q5n7FyjNv9H
uxgXlHGm481yPdp5DmGeYVzOcLx+jaIOzNFB3nvXCFaUB922sjz6YYBgIG3a
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
+NHEm5Ia/Gv43JNSg68Nn3uy/fa6PT4TfOo22mw3eH/oMm9LDb4zeX0s6Gr+
97TU4GvDw56eGnxt3DOML+6PUiMuOE11XPJ6TPWdnh/3A/9IRB3vSI2zxRVn
qv01B04t1DqVF7z9ls6Xch5MhJ17hB80XwbmRVr44E8J5piH/rTd8O6XC5aZ
b77Cbnjrcx2vRPCE4L+Cbs7jScH5Ngnr6nD4/ptdXjfz7lc6X9bUu33vkiv8
rxFumyhH9b1L9d3IXUEi6H/uMtgDZwvu8to0U3BnTtwJrHK+X9hvlvfLu1zG
l/YjPXcD81wf+P4LBPN9t0G9l9aJO62p7s+mNhkj3HtNEIxPjXuwiXZz7zXN
aS7ReBur8fZOatyJTXdYjtMxHzjXjlDfXZYXd2uTnFdjjzncTVwmbu4llggW
+z5mvuvQx/gu8V3FIsFC320sdN16Ox1hn6RG/9E/jOPz3Z+M427uQ9aALR7f
A3wOo31v8Nj/xPP1I497+BbcY3EfVdf0BHRQPdMouOuY7oEOgqbmvMW9GXQ0
d2Pcs6U5HfFW1Ii9lj0Zuvt736EtrxF+0CCpzg+6qbZN9u1rNH4G5kceVyYi
TV9BdY2wL6sRtPuPvtOr5XTs59cr7dD8oClmab4cbxu0AfyXFNfzqkTgtlL5
bBftWCGz3PnmmqZ7qkbUh3ovrhH0CrTSwhpBf0ATLaoRfriX1Aiaj3jQrTsF
O0ybbjddfqv9cMMLr/Z+AG+6yu6na0QfUPb8GnGmhY7+g/uH+8AnakR7Ue85
NQJH2nJujegz0i+tEfUApylqh31to77Q6buM35M1Ih15LagRdaK8eTWiTPLi
fNBD7rIaUQfaCTf16Fkj2q60RrQXuLBH3mqahj2Puylol2zvP4R1c1zKHyPc
traN/j3fftSve41oC/K9Sn3aNz/6HzzmOox5yF3gDu9PmNx5sh9+7jkw0us6
+8Yoj33W9bGOy33jLTa3ei3gHnGX5/Meu8fbj/LGOC5l0BbzjBNtM9/uPjWi
DxgXnJloI+rN2amb68o5bLf7g3PaHrs5g3V3uxLWW2avGnE+K3PbEJcyKmtE
XxJOf1yciDDOa1eq3SrVbntlH6l2/lDtvM/5MaYZv5crflWN8K80voudF2N9
gft4gevWy+kI2+005EcZVa53lecS9b/e7c1ac1MizgsHTw9eJLyiluZTck/A
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
48d7W/oAk7W7g8Opw2j16a15oW8T3WboOLvjZ3rB0BPW2n7geqPK7aByH1K5
n3leMc+WsX4I5mrOTlees/Ni3H1rXUXo9tnsuMxRdLBNV5yJgs89l+jzLQ7H
/feCGEMfCD5MCzvz7yObzNc86zVL6mm703VI6jgjDNr/eL0Yr+h4G68yR+eF
nqMR1j30aVqsBdTnk7SY/7g/djmjPL5W+b0re8kMj2XepLEm8Ubt6uJ4T8i7
N/hZWeZvwW/KNf9pvPlcueZzZdsNLyzTacaYZ53keTdwGOdA9Keg1wR+NGfs
JH+6nnnb8Jvxv+FnPDto6n5lIZv6rsb8EJ195qkNvq0KPgX5oVsFfjX8ac7r
bf12bqbPh7PsTiifScrnLeUzTPksV/wfqoIXQx7oUOlVFjLS71QHzz3D9UGP
VjPr8+MdKe8seds4xm9ek7o3Gvg9bJrfyhIv029ieT+Y7TexvAHM8hta3FM0
PkdpfC7Lj/ephPNWcLTbBjzq+F0r+ab7PSpvDxv4/S1lQBM3sSwtvDZ4A/Bc
6vkdLGnq+10radr57ThvyAtyQo8v+nwz/M6WeCOL4+0xb47fkvmm4CXeLJbG
vvyF2nBgaey5J6ri3Hu79cTB+73X55v2NuF1dfDZibDW1ttGmtvN54Yv3cZ9
SNgM87MJuyMZnhH88hYOK/DZiTPTmS4H3hi8aHid8D7Pdjhnr45ZcZYjTb79
wKmN48L7zDPvjPSt7Qev9AznDa+unU3ilZaFnPnb1cE/bm784IWkew7MNm8Y
nvCd5m0n78TyHIbuIPRvoY/rsuLQk4W+LnS7Nbd+ybucx5nmDTf0nEnyvpuY
f93MeKA7CP1dS60vaJH1dlUWhW4p9HDBR2/qNDPdxuCHTqHF1gWGPsLX24Yu
KubNQuvzSvLfSU895/9MT9gC6/saXBTvz3mL3ikndESje7owJ3Q+/80y/tP8
Nq+R33VMtGx4Y/shU97wZ+8rCJ9gOfRG9ku+EyCvgUXx3pv38+hHPNo23n7n
Ot14y4C38RuQpn6rMMVzabLxuMFzO6kPoK7fgzdx3Ml+nzHebxB4Q867bd5v
c1Zu7rcPnK1b+f0CZ+7WfuPAmwXeMNxq+XfwIO9r/a6d/JCXR/4+y7L5lId7
lN/lg9/NfrPOXD8nJ3Rl077wYE5oP/m6Xpyzz8iJNWC039OTBt5AC/cDZ/pm
bo/r/Z6eMsZbHwB6AW5yG5Ae2Y3T28e7C87kvE+gTSc4LjRW8q0CYaldArdz
/aYBXPL8biDXbQlvCD4reCd1IoAHuN/l9Qs9f9+2Db0GZ+WErnL0byBn1LV9
6HvlLQXvKmgPZLvgS28SdMgJfeb3uu/vsPwKemLROduoceB6p+Vb2tgkXnuX
gy4OeFu06zf1Qp7llPbxPmFUcehfQL8CeDMWWMc7euyz5kJ3otcBXQS8a+Bd
RGZO8HvOzIm6MlZmeEzTjuh8IA3tyl6BO89rObieabxoI3RKZVnvAfHQGYBu
AfhH+TnRBvBfzs4JN29QLmgX/dLK7UHZ8MbOcr2Jd7/b7mzvG7jhl5Ef8eDr
FDicdyzMc3hT8H2wswagLxE9u+j1HWccGVvw4Nq7HuhuZe8lHnvjz9/TV7k+
Y733Uk/4TORNG8N7wgSPlt6XeGfPOvtc+sn7Okzu61iDnzX/kntx7su5J2f9
622diCt9/01Ymfa+GzWO9mjva6v1f6TW/zeq4w6TPSN5Z4vJXd8rlhVgD3zV
d3i4uR/Fjz2zVlnovX+lOmQCkBVARiB5107Z3LVzH487IRwuFA5bquI+H3xJ
g8wDMhHQXNxxct/MnSdyENBeyE4stfxB8v4fk3jdlOdflHZnVdwvFnj/5I6X
+172zyrFuVtxjirOOcJ5rHB+Uzj3Lg06+VBV6Jp9tm3ol+Q+uV3WybvrPO/P
L/humH2VO+C2WSfvhNt47+VeGRyQqehdFDor0VPZQeXeqHL/Vx13yWeZ1vik
OGRKkCXhjpq7607yrygNWnq/cJteFHI/yJ0s8n0w973Ib27PC3mg532/Dt7J
e2tw5Y6W/uTOtllZ/K3wunC4pDh0aKIvk7sp1mveKPW2uUjwr7J4O7NF8W8s
jXflOdVx98Mexv5WbZO1EDoR/j68hCr7LTVtt9RlrDdvnnPD9aXxDjpTeT5Q
Fm/nN1fH2oOODfijVyjOx6rfadWxHuFXanq00nOsf1HoIkHPyPVlIQfyUXXo
HuaPG3SUXFkabVWzOmhT8uCOaHZZyBJ/Jv+RpaFvIaM66FDuceHNc4/NfTYy
I10V5wrF2VYVdAd3A9wnQOtt9F3BGsuXMO7Ty0LX0KvKM6csdEa9Vh334vQJ
+S7xfEVHIrQj9wbkldTfwd3IX0rj7W1dpf2z7AdkT60O2r27cR1TFvJFH1cH
DQ3u3IFMLIv3BZ9UB71c7nynl4WM9KfVQZf3cv8tdJm4kW9CFgAZBtYwzmHo
G9nscxG0/+1FIV+IbCL15j77Ns9/7tQneQ3C5O6dOzZoNWi9po7LffsVxaH7
Ep2XTexHemQ/y9qHrvOxPgORnrWDe33uk7k7RT9mQ99f5tiNDB80HzTjQdOa
0LzIC95uOn2ccSHNIYcn5Qcxk3KIM5ymoetB2XebtqWNjjk/aNJm1ud8m+/V
pluPM3LijGfkQn6lvX5nftwLHVX7ndMu7olamX5HfmFqUciRIJNBOaz9yGN8
UByyGshofJuIMwLrBnTwM77Lau4ywaOl80NuAr3x6JGf3DjWkrGCW+gv+deU
/5iskKs9pLHx23YxTkk3zWvurU7T3H5Tve7TD9znN3W90VGfbT/SHHfbcJ5Y
ZF2t7FXo/17TNvSE8tYDeTZk3XjvgFwb7uHFob8Vvao9i0IHK7pceZtAXOTk
eOuDXBxvf3gDhJ306M1GT/f+xvEmiHc2jF/0s46zjlZ0li9uG3pdkVXl3ELf
bikOuVtkdcGXNOiPRd6cOYhMbVJmF5lAdMTusB7Yr50HYd86HLlN5Gdnu4wv
fabC/YXbBjc61+e0Db20yJ73bh+6v5ELQgYoI+ukXCC8DWR/2BOQC0rKnnLG
2uI5Cp/ggOcBc2Cfw5kbC6zXNqkLuaf7hnYf4zK2u5yknCMm/JURxaE3Oan/
lbZBB2xFUejVRZ9ur6LQA4tuZWR/4dEkZYExORcm5YYJ493DnjND/mmPwye5
L282TpX+L4R/Tg6bFwnPiDsPeMF3Cjb7PTHviseXhmxzi+rQawovFV2i6Iid
YDf6StFHin7UvQ7HPbcs5Fe3Ku0W58e76/2Oi77TrX6XzTvtRRpj6/LiDfVn
ft8MHsm/tdBf2axHrGnHquOu4ibrt1xZEO+nP64X/6Xwhwp/pqCnG/oSOhTd
fRdZh++nfnNNGZ/47TVu7kPQU4o+0n1+485b9wOC23jvLpgpaCNoWy/0pqKH
Fh22d8jd2mGTSkOmrrXwvJ03yQ6bLmghaCmYYbOVy2nsd+LTeDvtePtdPmUv
KYv+3aY8d/jtOW+9d/tNOu/V99jkTftem+Q9tjh03V6v8bbL78RJ87n7hD7Y
5n7gPftO50287fajvDtd77x6ce812jpGuXe63m13ifVQo6+6lvqrk/rrcHW0
+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
1jz5LxYm9Un+U8W6zT79iNdf6IL/eH1m7Xnc6/uIovjLiv+o2Nsf9lo932sM
6/UsnV+GqP0KOLMXxXsz3p5Nl3+Z/M+sjr82nvZ/f/zf8ZT/geXPjjn+H5a/
AFb5f+vkn/eE8Y8Gf2cn/7R/wv/M8rc8f2TzjzZ/avC3NvH4+2Ou/xfkXwPy
409u/tXgfw7+2Uj+R47cK/rPSZ/8rwOTcvgfgXT8AX6N0xGPP0H4g5ryk3+i
8wfwYueHmz89TnN56FSnnmn2A1/+/yYMk//Ls50Xf5hnGj/y4x+/niqrW178
gcJf5oTx/wjhpOHPDtqXet/gcnC/oPb/Su3/YPXJP9qRTaYelEl78V8DZfIX
+kKH0y78vbLAfvyfwn/uuPk/hXbFzT8RpOO/9Ie0TjwomJ04+Yc6f6r/UeNh
r8bD2Pz4AwI//ivnDwhM+hv956luo+vc9rj5d4X24m8U/pblz9qqRqE7BB4R
f83yd/x+r3PI9h31n4DIDPL/Q/IfD8zzLZtY7LDkfx7J/z0wSy3zzX8h/Acy
w/nxtyD6MFgD+ZeU/0n593SP5Rr5J3Wv5Rz324284THjhKzkAYchU8l/hck/
hA86LPkP8THLYh52vOSf4uDNn+r85cKf4+TFv6D84Us/8I80srr8x8Ff9etr
x1+F/fPin3XGMv/TD/KYxhws+Gdx/L9+r/ruz0XxLzt/sS/1uCZf/v4gzTrP
zwHOK/kP/QCPA8qnT/j/nb/l+Yfmp/+GGwWuyGgmXB/qzTpOGH868u8jfzzy
Jwx/jEzzeCG/fh43/Vwef8/wbwh/lnzkccM4esp9SP99bD/mH/8bjPT8frgg
5C+71A159I8sI4m8+ceWnUS+HxOZSv7bhjcHz4x/uOHx4eZNCLKeyH7yXz3+
/Jl+l+r+UF7Ie/JnNungq/E2Y7PlQ3nLQd7In1IP1r6mXiN5S8C7Af5Eaeww
3nYQl/RTvTbRJ/yRyf+VtF3yHxfC+PdyeKOT/21e6H8upzkdY4R3KuCOXDby
97xX4Z0K+pm4x789L/73hm8ID5J/vuEV4ub/b+qEm/EBzQEtM1rj57xCjan8
GDt7TI984buCWcifIhfPe5JEvJ9B/ht5c96sIDuOzDhvYpARx837AOTCwQ/5
fd7bIOPPWwHwxc0bF9IhB80bF2TTScMbF/yQm+atCyZhvM+h3pTNex7Kp7zp
bpuW3n94C8FbB/4CRaaCv4X4J4m/a5L/Jk32WOQfjIkO4x8M/sOY4L2Ltxa8
n+A/Df7V4C8O/skY53jJ/zlw8ycH/9Mk/+jA5D+N3c6PMvjLhnX/Ju97xS6D
P6LY55J/Rl3jcb/Zccn3E88J9gr+8CH+u94TujivTx1OGfz1wx8+7GnJv0Co
w1bjhfuA5+JU48ce0Mj45trNvsH7Ft67JP/iynB7NfJYn+G25y+nh4vjHyz+
d4I+KPXcuLoo/nnif6z5zo+9ba7nDWVQ13oug3Zlv2SPneP+JK8n3Cf08TiH
J/8vyjHe1DPT6W82vsl/yTCT/5I1cLwPvcawHsHDbmY+9VzvJz38Poo/X/nv
CblG/n85kBMyg/sF+ywHBm0NbYtM4m7BLsteoVMpqQsKE72etzmP/ZYJw48/
ZabZpAzub3LNGy3X/nWW9q+dOSGnSJl7LbMFnQ2NXGreAefaWT7Hc55HvnKP
cXrAOH5vOTj+rDpmmbMv7J7kvElzh8OpQ3efmZNnZcyfeLr14mzJ+RV5wF/5
HMCdEudYzq/wfvacfvK/xL2+V6wwHwHeBjKOpOM8UW4+AmHI2aX47MJZmTIJ
Q96UuIRxtwf9DT3OXV8du5P6oMHvNtFXCe5Aqk/qjwa/G52OMy5ncngy/AN5
k/2SOpjTnRdnd3AnHneZqS7vPvcD55h7bXLmuMcm95Psl7xhXu89YKPdtPEQ
8xTpg6HmNQ5xXN4o84fyGt93DrZf8r/otQ6jnwabH0n/D8s9ydfBJN8jZcEr
24/MVVm8o99ZHX9B188L3RMTikMnBf/b8F6Bv5Z5t/2weV1J/tDvzBP6X1m8
I96lfPbK3kD2fbLfoTavUpt3qA7+FPcA4MQ8AMfkX5QDzWdFrzV6rOEZbCoL
/Qk7qmM+wJuDn8c+yXts3hyjA5v2R6c3spInzAcbWRBnjVNSQ47ya4fNdjht
c6Hz2OT3GM8532H2o2+YZ9XmiTInMPkPkTkKvuDEPMGvMjf0pVH3m1Tnas3Z
TpqzvXNjroM7PE7mPCb5wgNlrB00b2+H78T4h4+9n/2Ne1r4Pkn93zleF3hr
Aq0ATQGtCV2V/N/vY+8b0G2scYTNclxoN95n8q8e/+ndaT9oWd608R9ef7/z
7Gs3bzKrnAYa/FPvadDplIMbOm6z90PouS3eD6Ep2duS/x9+4HWX9fVz70us
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
44cT0J7kKeiUhjuDSYMvcya0N3FvzPlwxWDptMLTuWJetYvxTDed9oHp2jX7
vbaCpXLGcr5yduGHW3Yeg6+Ch4RVgemAV0Hjgc9HC7plXvF4zGu2ZFek3EsG
y660NL8Inv+R5i6aWpg5eDm4NnRn++OFoUHDinNvjh//EiYFT5MNXZgvGDN1
XJh6HjOvzovOijDm6Mboxc518JLwpewL88NYPpwzn/jH1itsIlyis6nzJSwo
zJT/dxaFbRTvzLkqdOmVYzV+d05ZsHz82h8eU/7Ok2wHa0P4NPOCDho8L+dF
dYZjh1Mwh52H2WuGh4OF8/7QpFH+0anb5FlZvxgXs5LnfoOlxwGtHm1vyWDR
ls2h/RLvnGl+0bXFHhhbYuyDsSXG/pnwEW3NeqGd4/6vPUd2yn2xr2yDSctW
GNtibIzRZ8NumDhhuE9319/3lf4T7qO5y4p37z6qU/m91PeKbT+2/tgUZFdt
0sYgl201NuLYVmM3DT+GvUByE5M2Dn3D3iCeJ/re6uTnHaznCykDLw8NEC2Q
zbk/J1/23tiu8//sobGLxpbawlbPZ/E02nM4ekFftcuiTsUJH9b8z/RVupWp
IxtvB6GDtLgn2/PL2aUvBvaMTh64J/LO7Js/0d7/oa9ssLHNpuyDW/xfWtxT
7TmkU+7TfWVDjy09dWXnTR3ZsmMXTj/I99BOpVWn2cExTchTdqofHusr23e+
kxdb6o/3VT3YUvdemD2/J9NG7Pj9JeEL0yfCcMHWUPesS0PnWT1Wd6r3Zl1l
4w6ucGbuTfzkj8iLSI/eZB7tmr1gt8HSpS8ebpbfOjChJ/pthX11Nzsp+biX
wWBukbvSh7KuGu9jWcNhIY37ibvVvPrW3W2PwdI5gv/FTp98YEFHBuudeBhP
ZTizPZN74BbB3KoPnQbuY6fFD4fL7wx5bGvPv7W2fLk9xzT/X/sqfHzoaGho
eLOvC2/9XZ1K+/f2vLtTMhvSLW7PWgkf3al5I6/jOpXWO/Q68tfobmQC0Ixg
ctjn/tPM0p9JrgcPCF3b/43ETyaRjXX0fxhs8eR9tL3+sDZfHf7RVWNl34md
JzrV2R6HNYE9kfafkn7yTmud+chgrUV4N/gJZ8RPrx//Q2OF3WLH2Vp3ULf0
l1kj7x9t86H57xstWQ1+8hp3tfD+zf/N0fruoKTnCpPfua29e3vz3zpaeBdY
R/vJ11t4tMXfOVp440O7tY8c1i3/hDxIc8e7dV4jjyIfsirsTu/TrXOWtL6x
Z5K/8c4Z6daUe8topd0735Ir2j91k/c7kr80+ybPpQOF/8QnvXJB1YX+tlUL
Su6HPrZ78u/aYPWCyo/utx1beFn79osjZQPn3OY/r+WzvLkrBgrXutNo+W8Y
KVzqmSlL2uVJr3z1gEH9VtpfPzzUnkXN/2Bz39ieD7U0/zFSeM8zBupsgM/r
e+eFMxfUf9Mb98GBSg9rembyV+61C0qugt44eXww+Zwev/R3pr/uGC1ZIf5z
0ob7TfrR6QdKVpeNLHjN2+IeNVCYzFnt+5Ob/zMjlXa/geKtj+Zb/hmjFX/h
SNm48Q4uwvvR5E+3694DJYu0bUt/YvN/qqU/YaD85D8/MFDYKucWfuXCWZ0y
UGHxn1kQ+ZK9av5Ib67Cc500UHP2Jy3/xe0ffzRa+b8v8d6fED/sCvkoWBS6
dcdTz70Tr570775zoGTADzQPBoo+w39A4r0/MP7NRivN6pHCBZ+SOj+YMfCd
0cLka3/3Dn11evqObRsYIPifwwbKvyZxwjAP+kTf0CGsjnul/n2j5V81UrZ+
1O2JuAemzvJYmHwWJU/500+8KP6Zo5XmoyM11pZlPMNQw3hvHXd55gX3nIx/
WI4J7PvUskPLDwNP7mRCFqXFr5xZOovpK3bWpacVfgl2Ai7Y+nn3vArDUbAR
LZ58B1wQWRNymh/LN9I7n3095aKtwTLTC8o2C+wwLDQ6HZoavZowxfxoa6cP
lr5X+C42i3xLvmaSTiefYwdLtxdMFHy0ePd9eXwseRp/sITGlfP7Jfkv5zR1
dp7Ceydji/+O9ysd/u9pg1UPdXghZzVnLRgKdwP4ih9HPvdHY3VXWJ587A/2
CTgu7tL4bwheynmPe1/8cFR3pw1/H3mx343VGRBOyDmQTI80eMp4yFdkjzty
WmGI8JCl/XbSbzGzdFsbk7A/ysMjnrCPt2ONK1hoOGj6Tt/ZqfOds9p18+od
Wg3d5NLAbLv3wuuQo4d95kcboSseNhou+sTBOr/iWcMywzqjf7qrw8y5p3M/
Hz9+NXl2PGsy7fz3jxU/XB9M6E94W+WvXPgiuOqFuY+7q18S+X5+acjKr5t4
vPH3pj5w2b5HO3V2Vk9txb6aPeb+Pcq2i/xhtt1XP5ey3EncDd1bL+4puSYy
TeK+lHiyyXTBkX+mD47/C2Nl1/3Qwepn7mH/4D8k6Z8K3h3WncyXeOOBDLz6
f22sbFwfmzF/c2SivzpWcd7BHpAF4zeuZvVUO8OW3zpYekvQbawXZDjsWfrr
pNw3tMeJ8Rv7p6VfYBmOSv76Uz3Jg+M9fDJ+dPCrM5b279Q94I99JWtCRoW8
yYH4qn11l2Dric2nfae+YttpLDay2MraPTag2ILaL3alpN0ndre8H45tKN+N
Tn3FBti8qa/YABNmh2Xn9uwyo2xKsUc1HptRbEexYcX2zfb0Ic4oGzezEmaD
hgwMPBf7UsrfO3a32N9aEJtgbIONxJ6YuD1iF0vek7aquL65NvnBhn089dp1
Rtni4fbPqDFlnBlX7Gax76Xel6SOO8wo2yU7tudNM6qvL0J76Ck7HZs3d7Oe
st8xs6fCbHZs2twZPWXvw3thtmlmp41WJ2/5spOyU3vePKPsGanXwIyys9NN
u1ydOOG7ZhcmB16JzB86gjlyWeoor48mP+WhYcPVoWPTcarf6FqE79s4eL8P
91Rba9cP9VRbGyMreqovjZFz00bCK3vKppgwm/EresuG/PKkNdZW9ZTNMenO
SZxxdH57nuwp22TnxZXugvb8Je/YgnI3Pre37pfntGd5X9EDzmzPWbkDn+sO
3VfjfVV7zmvPbW0OzGxr9ubTi5Yg7dmhKZydvP6Y71blHrsieT2ecoTJX7pP
Phf6GToaWs3Z+Q9z64NpJ3Pl9LjmxGlxzZVT42r7pT01H4zZM3tqvhnvH0mc
8XtG+kEfLEmcvtk59111uGN28Xtg/ciW4bX8NOPyqbSjcfp0wsaH+j+TdfWZ
vJubu5f78ln5J3XCe4LBxG86JXUXXpb6+gf2X4zxTk/ZVdmip+YAmylb9lSY
bZSteio8JW0hv560l3bCg8Pjwreamjb17g1Je3LGEDt25ueG+e7UjJ2Dpr5i
744rnbnyvU7pAuzNmJYvmUH8Pryzm2cXTw5GBiaHHls4HPJe5MnIf22Q8tUP
jkcadr3YJ2IPjC0y9omWJ7x92lfbP5a03t2bc+Ebe2sOqxe8pDOeuO17y/6x
ueSe/I2pZfeDnY+7mn9Wb9kCMb/vb9890Cnbz+7TbBKxHc0+Ebsh7EKLE6Yz
AO4Z5vn2Fr9Fb5VhDfpOy+PBTu2B9kn7oDVS3Hc7tUZyH+rUmsTVptYjdZ/Q
p/e2+i/nT3Kf9lTnXmuQOn6rU2vQtztV3t1T61/9j/XJe++mZdzrJzSyS+FT
2jO9p9Ym77bOemFduX528YTgc8l04hvhGeEr4eXiMbFhamwJT9p4Y/ONnVNj
S9+yf7pBxiDbphtmnLJ5OiVjkP2gjXqqLmwAbdxT4e1CQ7V32P/tDc5aN84r
+ruxwE6QepsDbCT1NXeTnrJbZN4Is2e0bXO36anzkHy266kzEtc7tpC2SRuw
W6Qu2oytIvmpE1tL4nrzvbXggsxDa/eKzE+udXrzuOekDGnPTz3OT1vL19q0
JHN4ZfLaKv0gvFnyODv/tjTf9GW9EGbXrzfzm+1R819bsyE7NesBW2Or0k/s
dq1M+A+ZZ8La7Mzka+05K+FNU/5Z6ZslGTf/kruzezQa50XtuTi0Tu4lzk6d
OjOhv9IjTcaXHkL26dBJ0V9va+8OSLo7O3WOR3O9I98Jfy1x6K/oufuj17bn
id5yx6cVrfeAafXu9OT98+yf0j1u7neKJotO/PXkJ7ymU2c+9SCDTIaZnPLD
s0vPFXnkuztFa0Z7/mbyQJO+K6539+Q9mv2tnaIpy5fODxhB8kTkSNaJnMvB
ra5fa8+d7TnE/S3hQ9vzjYQPa883E35n0t7RnkXtubs9d7VnYVzp3KPoOLuv
PYe3556kgy2n/xOmnDyJNO4m1oI3tWen9lwe983tuaqv9BjCrV8dF3Z9Se6C
eBkfTdrZ7fl4e3Zpz67t+Vjidm7PFXG9uzLv5csW4S8zDtiDQwdHU18aHgAe
iPXyuNBcrZHosMdnDV2csLXvXUn3QGiy6LvbhT5+QdbEixK27p8fnsO2eS+8
deLwN6ybxybf76VMmMpzw0+YHE/GHT6BcfPHnJW+lfJ9vzzp8BPg9vGgYTTp
lTk0MtnfT96wmuRFpkRmxFp+ceptH7skYXvC6oTpJ6DPA5/nI2kzfCR6P/B7
6DCku4Qfz+Gc1AVfhf3HX6UPzk4cPsay9IM+OCtx+obdyV/nmyUpR/iWTvEt
jHU0CbQJ+x19Hu5yaBT2rUtT72Ny/5ugIXSK/6TP7usUf0v45k7xP+T71dRd
+N7MLemOzBi/d1rJJeGxkeE4InHGvb1ux4xvPKhFmSunhS5i/ONFHZ75hEe1
MHPuB/PqDm8+oZ8ckfmEhnJkytkq48V5Gt1CvPv4C9ljLw/fjmuu4G8dOK3W
qb9lzlwZHsNVmWcvJ04Yj8ecP2ha8d8OzTqBx3ZY1gn8H3HWEvwhaZWBJ3Rw
1gz8sdXZ+/EMv9SeL04rPiGXnmnYWthcWFbyQ+TIYXTxwL7anq9MKz7VTe25
cVrxsZblzoDmckF7LuwrGsz5CT+VuItyZz4v70aT302ZPzenjN/OLj1vdDjQ
SUA3AR0F+Gkwg/TR7ZH6CuOPfjn/g194fcJ4cjckbI7ekjLsFbcmvE/+Q7q/
Zp3SH89m79JeL2UtuyJ8Hf1Dvsf3m7Y70Iz2PDG7dOXBx8p7s+n1bs20uicJ
+7dOc/umVz18J6wNxG0yvTDV8OKwx2QuyXHCjesD8X191V7Sbjy96r1Rc6dP
r3+e1tze6VX3N7Znh/zDDpkD/tV3vtFe0tJfri1hjel0MhbECWs7ecsXZhN2
k/4Nfbh1e7ZJX3K3zX1vq7wzvt0V12Qs3p6wO+Km7dksd8HN/Wtf7dlr0jew
6PQYw7XTmwVfPqEDuVNtT66KbOVrInd5TvKTl/vojJThzrlFe7bMeWT7tIux
OCvhC1L37TJOt8u7g7LHqvfK5LFVxnonZSxLnwivyH8o78XMdeMGfwBfAA+C
jhl0Q1hH55Bt25lrmxklz0eu7/7QfegRQUPotL1ixlvqfvHCeKXZd7jivCNn
R3aHDA+5MnJ44tFkjui2tahb2ARyWOS7yFnBhDnXw3rRoUsmijwUOUiYFXdg
tFkySOSF8CH50WlhqKZGDzk9qeSdyDq5A7jnuRegz8G+o9GRD5KGjBCZKWWR
lVL/TfNfbPWx2bdwv5LHRR92X9ImaO9o8M+Ol2zk24dLDpIfDd+dGZ3GPdp/
kz/UJviu+K8TshJvqX0X7gtdnNwUDAyZCGnwZ8k9w8PBzJCBMP6MPfJ3zkzO
S/S1amdyUtr1qLQtecdN0hfOVtKT3ROvPvrkkdF2523pfz5a8grq4wxgjCuL
zIU89RneG3o+mTp0+j+MV93+abhwa9qWrBq8M2w0vvlVba24em7xP8j8w02u
O1z4aPxxfPLj2hi8dG7R1G+aW3pt8F/EXTa36OxcYTpS8QylwTfk+gbeiI6a
/5xbGKCTW30/0C09ckua+5FuYQ3cC+gywLtQL/Uz/umZ++ekl4e88BOvm1vp
DwifUfxBW5QOtHO7hSswj+SDzwNz7R/x9GGx4QxguP48XvjgecMlc0eekNyd
MYOng7fz1HjhgEeGS9e4NK+K/CDZvEk98fxk9MwLecJ00dduHpGRhLkylvBb
yOnKE26KrmIyiuQT6R2AMX1V+oIfbkH9YRLgFNA+0JnQZ2C38YDwiJ7plg5T
GGi22th7o1+HTJz8/zvlwmahMWk/7YhXhIdj/ODjkEvGe8D3uLRbtveMh7Uj
47bWWNmA4Cfntrpb6aThCtPFOrkWkB/UJyu7hfugR0saGIzNNyveJ5l9dA96
aR+InlJ6UT+XPOAb6DyBOaG3dBJXwg9nQsfX1d3Cb8BI0NMKB0EmG3Yc7wOW
RJ7wJPDiZFnhk6XB78D3UMdVqSf9Y8d3C6/1nm758XrJzny5W3i/z3bL/pyx
9Jluhfm5wuT36Jhlh4hOXVgO49KYZJdI/NTmfqJb9deeXGF9rS/gcfGbxF2T
eLrj5A8nw6YR20bPj5bu24vT/urMtiJM3PqRX1tvrP7jPYn3v/qGbl46epfH
T8/udan/9d36X/WH7YaThpGGMdHO8Cd0Ki5O+xiTsMj4kjDKsOMwunTrGp90
QdH9Ic0WwyVbgH+JL0rfCsz09okn24A3StYF3h3WnYwBjDVcNJoP/df3BgdL
3zEMLJ4YHdN4YS93S4c1PPSvxks+4U3DJcegrFnhnUmPn0a+RJqLo1Oajmx4
W3hO+cPTwt6Kh6GVHj8IX4i8EGwxXDFdLeq/zXDtF3hm6FPuwmSh4Wfca8jQ
4jHB1Yh3J8EfJNfqLoG/Zl5M6EQcqvMAvuKPgiv4YXN/N17jfICtqPEaMzsP
151FPvhZviU74SyBdk2fL9wj3LI2RCPTJvhZ+FqPjVf6tw4XJlN6vA38MjK6
k/K5/PiKMP10AZAjwDvzX+5y1vilWefp69YXdE3RHWM/enl+4YLocoXlsT7D
1sPiwgHR5wsfQy/i3d3CI7Elyl4ee3vzgicfGit71z/tFjbWmDV24XPJ08D0
w/FaJ5/t1j/CotDJCwfB9p48txkrvBD9tjBBvoXvlQ/9MvJ5Q2uTe7pVH3Vg
P4kdpRljhaeQ5znBGskHhua2btmwhEFe060wv7o8l/rAI2kHmCH6erTD+sM1
d8hZWNth3MmHvW+DkvWBd38qbcImq3by/q1JI/9n8i19rnS80ieqDuySsufn
P3zrX+j6keemw2VflJ1ROiPZzeYnG2Pvlg85Wzr3bp9bvFX4KP01nH2Y7m/r
iXrCKusXdlbZW6W/kK1SNk3pStR3/GzCfbdbadiNI7cE/w0nTm8RvP5GwyVr
xQ8TSLe39vcv9LkuyrkItostSfiuX+ZM5Wy1uK3B7x6oc8u7Ihty7FidRfGM
6TN5qFv1UAfnTPpf4BDY8LNO/qm5W49WPteMtLYZqHzhSb6woM4s7NluObPO
Us5RbGIfM1D4BO5R8W/Z8jm6+a8cKRvaxycfdVmT+hyX/NWZe1zSyMO38FHa
VJ3h5BdG3uGwsdIBRycc3ePa/zv5L+s2PbmTex2/NVwb0plLz6gzJv+a6Fim
C5juWOc4fv9JjhBu3ng2rtekL96bcQZLb17+LHPTeDN/YAzZ6lOfncbK5h/b
f4Nj1f7suep3//RQ/PodLtG3xo/0E2NmvOQ9pg6/Mp5g45X7k6RRT2nIAij/
3tSBfi7yJ33t25fGq6/Hh0sWEE7d+HGWerxbGBtyh+QP4WbpvSI3+MT8ev9E
t/Yyc8w8gaG1BvKbL95Ld1jygbO1NjqzPZr4vSJ79faxkl+ERX848pdw5Pbu
X3drTpqPXGHnQGveDVn3pCe3uSLl/iF1o+tK/FPz67vf5NvJeX5I1oozUmd1
IEsJD0+/GP9z80t3IdnR38yv8eB8r570qZEdfWR+yY/yk2EhMwonDzM5OYZg
+MXLB36eLCbc/M2RyySfSS6AXCnM/P2RSSXTAm9J/l89fztaur2k//38V8Yu
jP3t49VfL86vtcqaBTOmvqekzuRuyd+SLaIrkx6TtfYouSLx1l13KNhj50Nr
4y/S/saJMUD+whmMTQLnXPuc8wesyN+75XcO0f/O5/ra+mbskXOBX1M3WBV7
5V+T3nmM/YPJcx+/s5k9js0GZ7MJuw+71R3I+VodnAOVqWznE2dL9nS3yrnU
t86z1k97gfnqbC+NMzW9aeR7/zS/8mBnUT77R+7vHWPVL9KQs3C2s9fAw/w/
yPnDEQ==
         "]], PolygonBox[CompressedData["
1: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
YQ7CXIQxtLF03/KwpdbMtqH//wGuTgn7
         "]]}]}, 
     {RGBColor[0.9305021169820366, 0.6962552924550913, 0.3845565626443132], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxMnXd8F+TV9qOCAsoOQyEhEdQoCnERCPmhhkBCGIG2j21t6x6ITEHErV12
2LonQ5ClqLiqtU/7aN2KgsgSBPesrV1uRX2vr9f1+/D+cT733uvc5z7n3JUn
TvvO1J1LSkou61ZSsovM9/qUlPxU8DPBgvKSklYydxHMrSgp2alSEQSL5d9W
fm0ES2Rv18fuZbLvIXN3wfxyp9tZMK/c5k6CpeUOJ80DtSUl3yjfmwQ3y791
H5d3S7nz3o08FbaHytxdsET2djLbCpZW2A/38rqSkjKZD8qv9bCSkpf7l5SU
y71Q+ezax/kuKnd+uN9S+MtVJSV9FOehESUl22Rf3lBSMlLp7xDcLhgRc4Xg
yArXgzJrBPMF8wSDBQviHhQ/+umwtOlGwVGC5UnfIrhf8AfB4YlLvHrBrYk3
RnCv4B7B6Jh3C5oEKwV3ChpjUteG1PE2wS2CNmrTboJRst+VNONS5n2C5uRH
2Nj4Ud7w5FGsR/tK9/viCvc3+S6qcN67ChZo7FapL08RnCZYLXhOcLrgecEa
wcSYhP26Wu0ZUFLylPr+1MR9VvBn9f8W9f9i9f/9sq+Xfa7sD8q+SfabZd+o
eENVdq1gQx+bQwSXK88JynNtf5dxqPwOoa9Vt4MrXMa1ivN9xdmiOC/08fgx
Vi/KXpBZJ1jfx/kxnpv62I/y1vWxX03KuznjvVL531Dh8hiHruqPLpXuuw6V
7jvitpbZinlY4T7DTXr8dqn0fNm50uuKvu9Y6fR/rPB87l3puUVc4jHOnSod
j/HcS+aelR5DzJ6VHtvuMrtVeowxSys9V6hj50rPCfyoN/OrR6XTPFDhMntV
ek6QH2HMWfwojzVBHtSDPmJO0L4jsj6WZJwWpr8O6a2+ElwvqBPcIlgkKAgW
xz1MsCTuRsGdgjsEhwpuTPomwcqEjUz47YKDk/d1gqHJe6GgOn7XCoYIbhYs
EAyOOV9wpfaNu2WOFjT3tv0uQW3yIM0gwTzBXEFN0uE+THBT6nd4wnFfonn2
F83be2Uflfyo94jUdwVt6Ke+30fjIVgpe+k+dv+noH1X6XuWaQ3Kv7389hD8
Rn4PK8895X9HP6frLLhb9u4yuwnu6meTvG7v5/BOgltl77CP87pN9o772N2Q
utwmOEKwNGMwPH63Cv6l+pyrsu+R/UjBssQ7SrA87vrExb2in8ukjIVavw+p
zhc1eA84LOvlb/LfLv9V8t+qtTlPa7PhQNVZ+3NnxeskuE32jjI7CFaU2w/3
reX2ay9YXm6T8+Ye2XvI7C64V/aefeyeq/x/ovzfUBvukn83+ZUK7i53XNwr
y+3XNfvB4uyjdTGZ38Myrwn7g+Lvpbh7CsZXeM2wPnbRubOhv9fu0jr7T2CP
Vvwufdy2O8tdDm7G6jzBuYKtSvdSlc+v+XXO//5yjyXh5wjaCqYJpmau4Dcn
8+BswezMpzlxd4rfWcyhoSUlk2XuJmiTPKZknAiflTmBOTNzBfNMQXWp1pHg
WsEfVc81qmdv1e9LzY275e4l+33l7g/6ffzearvg/r09d8ljhuA7cj8o+KOg
ndzT057dE457WT+nwW9tH+/TnJOT+tjNuXJUucceXOPImOAU9eWeH4Q1lHve
MI+GxyRscLlxGnCTQrnxGHCNI5IHuMyQcuMixKtJXPCXwwVzBTcJDhHcILhe
cKjgxrgPSzjugxN+neCXOi+ulVktGJT8yOsOrYVV6s/LtRbO1lwdorl6h/p0
WOpC/WrLjcdQp7rUF1zmDe2/TerLRsGbnPd72/2u7GNljhFsln2YzIJgk+x1
MocK3pK9eW+nuV3lTlG521XuM6rP26rPfarPa4ozUuEjBG/LPnpvp3m90mUS
9orsDTKHC16utFlPGakj9X6n0nUh/bZKhx8l2Fpp80jBS5U2jxC8WukyyXdL
pf1ow3uyj9vbbaPvwCVL+rhNtwgWCdaVeYwZt5FNwjPUroNGu6530Nb0151x
j4jfCsH6Mo896Rvid1vahnmr4B3FGaPw0Yxxne3vyu/tMvs1C96v9BpoEfyj
0vN+guCDobZ/kD4gv+WCv1c6nDSfak0t0DiMVT4byjz21Gmp/J7WuIyT/a0y
lzNK8GKlx7YuY78ybaOf/iC4L/27TLBUMFiwQDBfUCtYKLg5/btEsFgwJH7E
W6358K7Kvb/B82ZR0hQSl34/Qv18vPp5H/XzPZpLZ8reWvt5TcqZl7G/R3B3
xo963Zv5d1fq3ZzwuzJ3702ao9JPtOFvle5X2rdBa2quzEGZN0vThufkf5jM
5xX3hUrXgzgbK90G2v1SH+P04Cxb+thkj9/cxybnwGzZtwm2Cs4WvBw3d5cZ
gumCsxJOfnMEryQeZ9KZidcucaflPJslmJlz6FzBOTkP5qQczrrZyXtW8t6S
8+mcxOv4/4Vzjp0vOK+P72CUMzVn5MzUo3Pynh0/8tuceODT4L8XCd4WvJX8
3hC8LrhY8E7CLkz4m4ILYhJvSvIAXz6jj/Fs9uvJ8cP9jeb2o5rHf5P9GZkb
NK/el31Rne+cP0s/gX9vTN+9GPe0+G1IezYnjP54Nf1+Xur7Wvr1tYRdIng3
beBe+17cnCWcLeAlbdIXtGPX1Jt29Ep6+mBxne9v1Jk2tOReRX7jcpeivBG5
k91c57S9U7+G3LGoF/dM4u2VvOn7nYQ/PNvfOMWe8aO/11V63TKPN1R6/rJG
11Z6Xh++t+cld8ijuMtUOpw065Tfi1XGQ1g392df+Epj8af+7o+/ci+qcv/v
lj6g/cxj6ku+9Ct3TurNvst9jztcSUzugN+U2zxZcJ3W4Ekyv86dnr7kDG8V
kzvivdpb1qrc67W3/Ez7xgjtGw/1N82AcO6OO8ekvG4Z43Mz57gPUyfGkr7n
3sx85N5LWM/03wUZe8K5TzOPR+cezFzGJE2PxGXus6bpS/aIN8u81zaxD/cz
bgL+Mlr2e/oZB2d/at9X676vz4qOMjv09V7cVWaXvt7v8SMeZw9+nft6T91N
5q59fRbh16mvzx9M8rqgzPV4o8z7blv5tenr/a5dX7tLtA8foD58ubmk5PPG
kpJ+sm+UfbnsrxykfUP2VWXGQQZyNst/s/ynN3sfJz/qwT5LO3bv6z0VkzLY
96lj674+G1rJ3EVwlfJ5Tvkcr3zOTx1fF5wX8zXBuTFfFbykNEeqz44QbOlr
c5jgBc2H98GBuRfI/6h+jre5r8MLgtkq6w8q60iV9UfNmTlqYwedNT+X/1/l
P17+F2ruDVD7nlFZMxTnUMVZrHl1m/J/Svn/Vvn/V/HL5b9a8W+UfZ3STpT9
t7I/KfsPmn0G0lbauU157tzX59kFivO/itOkOB3U54OUzwey/13+PWV/Qvbd
5F8t+9vNHs+zBbMzP84UzMgY43dW5soswcyM91lxt48faTgXu8ks7etzsntf
u3dPftMFb6mep6fOjOUUweS+noPnCOYk/blxX19n3OXiMp/BpX13zNc5qXe7
5D0t8wxzauYreZ+RuTg15W0T1Pfz+K1Sn2xXXy1UP7wg+87qk1tl76v+aQJP
EM7QW/Z62b+S/wGyj5O9vfwHy36M7GWyHyz792TvJvtbyqeL7P+n+N3kXyf7
x7I/W2acm/n9suLsIf/75b9Z9jay3y37/bK/r/r8SvY1ZcbXwd8fk/8n8r9B
/s+XGdcnbG2Z8XXcf1GcfyvOFbSlzDgmYSvl/5b8L5b/6jLnx/3guTKb1Oll
9cnwfu6XV2Rv6Gf3G7I3yWwUnFrmNLTjlJis15NjMp9Pivm04GrN6UerPHan
l7netGmZ5vnj8r9U83xSmdtA2MSEU8fTYlLeearD64LXBDsljLps133+RJkn
CEriR71ma449Veawr3q7Tti/7u264v6mt+PivkD5vtnXbR3Rz7QJ6AQ7p06U
d4bW6UEao5vUpsllxuPp4xmCFwWbBNNjbhRcq3l7YZnpIdBKsLNH9ojJPjQt
ccGjWUPsNZuzljBfZG0pbItgs2Bq4nIPODN+lH2WYCv7Fm0XbIt7SuJS1zNS
X/r6bMHLiTdH8Erc52T/wz0r+VH2hzqLL1O7L5L9Y9mv7e97xinqk/3UJ1fK
vVvKo2/oy1H9PG/apV9oa5u04dt6Kc4QhQ8WtE04YRfL/x3B24KXNU8+1Dx5
RPPkI41pjeKuk/9FCX9LcIng3aTZPeNBea9mLJnHzB3m78h+7lP26TrBM6r/
b1T//Q/03CKcNBtlHyqzVrCpr+Pi3iP9Thkb+jqcNuyadtPH1Km5n9tPncb0
8znMXgO9DPrBhak7/bRYbXwE3EZtnKo2Hq88vtTcbFXmtcG6OTLpONtbpxzC
dkk4c5R1e2vK4CxaIlicNXxbwqjvQsHNaf8tgkVp26KE0a/UlzY8r/65Qv1z
iPrnddXzE9XzcdVzu+q5IG0/IvVakvNvcfLF3S40IeYNe/hbWQeY4ArvKv9b
lf/Ryr+37p61+6rvobloPj2gst7qpbYKXhCsFUyK+bxgk+LVKf5QwVS5NwjW
CyYL1iXNlPjhflHxC/s6zU1qy4PK/2y15WX5D5dfvWDbPjaPErwq+wiZDYKt
+9jvSMFL+9g8QvAf5bPz/qqT8tks/2H7uowt+zgc9zSVvTH1Oz11XyM4TbBa
8Jzgd9or3pB5gWAGdaV9gnMErwpeEZwteFmwTTBTsEWwWfB3rceJ6q83ZZ8l
eClhc5KONOf3cv6vC84VvJZ8z4sf7pMFqwTPCCamjtTvpPg9TX77uD/or1NT
92cF39U4dtM4zlY9TokfeZ2ZOtKe6WkTffFDxe+l+Bcp/rGaS1dpvh8kGCC4
RnB1aNLdNEdKy0y33il7PPTrkuzf0LjZowlbkDXDmoBG3r3M6aGPs2YIgy5O
OGmgF7MXE4+5D91xV0ErzcPW+3gtsIahWa/MXoZ5Z9bG3QmDtk5dOFuurnOe
0NVZB21Dy9yo9l6n9g490GujTeicb2v+fK55+JTmz+yM7dZefivg3Nqed4Wv
44bm3VH5dygzLbt9mfck3iTaZn+Fzk04YdDK2X8J482BPZq9Cvo4eyVh0MfJ
AzfvFl1ldinzewB9j5t3DPw6l/mtgv3pi7xdbI/7VI3j5xm/49TeSrX3Vxrf
gXnfwJ93FOpIPXi7oC6MDTT+TmVuG+8PlIP7rPQHc7oxfc/bwtEqq7/iPSn/
eSrjiSrTuAYLz7lIeM7no4Q/j9Q8lf022Uvk3yL7n2T/XP6jZL9H9t3k/z+y
PyL7SNl/K3tb4UhHyP4L2XcCf5b9R7I/ozjdZD9B9hdk7y37abJvGWXaGDRj
aMrU96i8RTCe9XmLGKv4Vyp+52afM3cEz+gr/ynyf32Uz6oV2a8Plv858v+P
/A+Qfabsfxvlvjgy7yHclXtpv96rr+/MmHsKevb1GQNe0yPm+X2Nj2Oel3gX
JR7pLo67dfDlSYLegp/mjO0Vk3j/p/G9UOPb40DTv3ok7xNUz8WqZ5XauFFz
+wONy58bTEsr1guaWc/Ui/7qnbzpv7KU+T3lc73y2VP5TJN9peyDZZ8o+62y
V8v+I9nny17Z7DvGebkzsOc15I2IvW943n94c2D/Yr8v1RpfnzeG19WWW9SW
sWrLB6rzN6rzatV5vux/lv28Br9VkI7z4QPttzP6+y1ujsw/VfltjreOV1MG
bwacYxvyNvJawnhD4BzalDeHzXGztw7IHsi5VZM3vemJuzHvHpw9W/LusSXp
Z6deW/NOsrUYr5fnCO+WnJmD8gbIOcTbIe+N7P28ZfJWyRkwMm+AnBW8ZRJ2
eZ3fCDmLOWOwE8a+Tt68kXKWkI5+Z6/Hj3dU9ntM3jyf6uX2Hdjb5wNvorx/
ch5SL94qORuIS/04t6kjb6Gc35j0C2cSb6682XJGkQ43Z9TAnCGcS4RTBucQ
5RDGvR8aSWO57/2YI8uNQxfydvGTbrprCR4VfPcA3e8EZ3QU3jtQc1Tz7b0D
vB/8WOZk+f9I8R4R/FXwwhjHP6Be9o6Os07m9xX2f4K/CH4geCjuV8c7L/aY
bUM03+R3tODmTpqbSrtQ5mDBKbIP6eT9Bv9a2TeqrMmyH6Ky3h7vMPakH6fu
1GmS5vCvNT8Haw6/rvi3KH6z4h+T+j4s+GFM6vTpeO+B7IUdJpiGUKQl/ENp
tynOv5TP67JPVD4vHWD7LPm/NU5rW/FmKv5R3R2/XuZW+d8h/8mNNjfJ/4NS
nTcTTCeBXvK8/C5RPZfJ/z/K/336tt59QX//j8y2XXWeyd6uq+uIfUkX983k
9M9Livem7FtlPpixok8pB/+zEv5+4nwwzvHOzb5OXus1Xu/K3V17wpwWj+FJ
GcfTlGa14DnBqTGfFZwoeFrwlOB51X+C4u+r+p8k9zMJmyhYk/QnC1Yl7JTk
gXtSR8855tvp5JU028b7nOK8+rDUY8Y8+rXiXiHY2Fnzs9RzkbFtPsB1aKV8
/lvquMzBF1W3s+Q/SHV7b7zPnb45Aym3dUfPr7My935V6vG6VOYkpV+bOk3T
nrClm8f9eMGTgicEx8V8XHBsTNbSP1VGb/XnJerPN8a7rzlLpypsg2C94PZ6
06bqNC/Wj3GfD5DfNIVtTLwpibtOMIP2CDZ189lOmxd0UP8WPMbMhZndXM/N
gjNYn2nDLh0dn/45M+HkdULGkPZMTjmkmZ5yqAfnzwtKu1x9skc329uTTuU+
JftS+U/XHL1T9hkyvxjvc5/znzl7e+bwm2NsH6c2Xq80Xwm2lzouaXdXnDPU
z7t387rYLL+fV7msRXLvJnNXwcJSm63ZN0ptthLMk31nmTsJ5su+Sze7X1S+
DyivzTJvkX+bbs7rBtm/Tj1uFHwTN3X5Q9pyk9wl3Rw2t9R54+asJs8zFeeZ
gvuEvqEvqH87+lJrbRlrLDgCfXVkqf2ek/2Xsn+ssL01B36jeVJZav+KUudD
fPrhN4J/C/4Vv+fjv8sE5wsO8uuE/1PwN+3bt2ffgT/gS8EX4RfYHveSUtex
rWBxqU365ZrE/VxwsvbSn6n/q7WX/k1j9wTngMbuuSHez1grDx9g/yNkf3mM
12Y9+/MY9+F3ZP9qvPsLHKef9scv5N9X5mGl7l/6/tCYjMnh6WvCPlbc7YLb
FP8b9efj0AmVz8GlnkO06ZCkw004+f9a8QulbhtjPixtxs2e/arifI82TzCu
Bc7FGG7O3P54jMudpfp/MMb+J9c7LmdAh27ub/Khz0+vc/70A2vwpZwRC0o9
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
v11ssp7+08Um++snLW5/c5N1aJIn+ja/7uJ5Spsp84Oso29aPF/HNfkdhXm7
JvSCf2W+oS8K+6WV5h8/u8p9zh3i9YN8jzhpguOhX2pRF9/TOPMXdrHJPezm
LjaZX+y77L+cg/3Huj6vwOvb4n4c3uTxfytz4IQ63/HgKeJ8IS379sMF87hz
F7yli+NQdpvxjvfdJvN9gp//aE/T/nkDKOqdop20sb/SXim4oovlMMHxkVne
T+7fCS4TVAl+HzdyyNyBkCWHB2pGlXmfkLHk7o5c5/WRv0S2c9h4uy9Qff5c
MK8UPFOLIweGbNhtkUtGJvknam9tF/OPwUuGfYjg8PG+g81uskkdkItGrox8
0F93ILxYac/6zk43WNA43vSFnzfZpJ7ovxs/3vX4rfxXKX614g4UPCv7wV3s
fl72w2UeJlgr+6Audh8kuDrl/XC823CV8hkg9zUJI/11gmsFjyvtATL372IZ
M9qLzNqTnV1vxuHpzk5P3i/IXtPF5a3r7Hbgfqyz82BMDhHcILi+i+t7fcp7
prPbQV5PdHbelP1UZ+dNeQeO9z1zWpPzXiCYz57R2fGo110KP071XBRZbuzI
gP+Ze6vs0/ZT/8k9EVlbmfcPsL2N/E8c7/Q3Npk3f2qVx/RQlXFj6v2ngnkF
Gecf1XnMpqa/5wpuEkzq7H5nHM7o7H7BDc8k8embM8a77IUq6/TEXdPZY3ZT
ypsYv9WCdvu5/m1lTk4eLyTs0PTrrPFu5/Imj8G81Kkm/YT7lM6eK8ydUwXP
xQ2/If3OmJ+ccMbk+PQrYSfFjzE/MeZT4VMkHeP8aGeP837hM2R/YV+ZoXqf
q/pP389z/OaM33kH2n+T/E9Le6jTT/6//Jg7l2c91yY/0v+xYD5R+vUb4Xdf
Vzu/Yj8emrVxbeY3+R6SebdLZ/c7fYw8K/cPZFr/rxCeSM6WOtefvQKe1ckZ
z73GG/8+ocm8k7OqvNd93cl9Rz9908l9jfsm2Uvit3PKpK3sTZwTnA/XK+wr
wXbBjZ0cl/z6jvcdaWKTywTfL+rHwY7+op2SH+N5WfLjnCmJH/VY21FzQvkd
LmiddjBPW8WkL+DtnVhlvtzPOnlcGQfqxHizzr7sZJN5wf7L2cmZOS9toy5z
O9mk/Pmd3NeEse9wHnNWL+jksgm7v2CeXvr48uT3Udb/Ff/f2H+U/qI/GK+1
avv369yehem/kzI3r0w5n2Rf+zxl35z2U/Yz6pOBcg8QPN/RfXNYJ8tm1nRy
f3Ff466G7qT/qXO9kSW8LmNFf/ywznODfrsh40Zd0LVEWu4U1ybuF4KDO3m8
yePQjDfpDolJGHKdlEX/odMEutoLfc0TfUaV9xz2QvzRe3J1J/MNM27M9S/S
ZtrA2DAmNclvXtp5U8o+POG4v1vneMgzXpP6ki8yf6dUuZ9Xd3S9qe+ajs4L
N3KWJ1a5f+hT0lMv9nfwOfC7zuPdp8doPt9TsEwlbeUc+Crx2LPAccGFf6a7
275a17/U3W2Vyqru5DG7NvnRzm/dKa86/Yr7voLlFRnz5zq6vvQ9eyv3ga+z
11IO7mc7Opw8bkg4dUI2DBkx3hG4w06t9l3zrWbfZVurLaPVb3M77HjT3Fl5
7dTR+PIvq31XGFtnf946iUt4SUfj3eiPAxdvNTp3IHDCDg7/RuaDwrUuVJy7
1R/bm32f2KvJb6PkRdzeo31fGST/bYp/neL/ZYR11oI/fVdwW8HvqtRxleL8
RnEeGOH3VfLifZb7DbrOuc/wTou8D+3iLnNxte8D1OtUwSkdzSuBDNH8tOm0
hAH0+7PxWx03cqzsR6y5CXW2I9N6V8HytC8kX9Ix5uhtQ2cgui/Bf9H3Cu6L
LDVyFqRF5xtvObz/gFPDc8m9AlwdHcrg1ugZ4M2jqFsUk3eqR9QPP1ec+9QP
n8p+q+xPyH5yymefQE8dOkaLejqPSHnosiskbFHqiC5T7nM3VBsvvj/l8ObW
Vvjz0dAv6n2v3js0Uu7Z0Ctxc//mvQo3d/V98n7FOzTv0eghgzbA+x9vU9CD
kVOCJkw4tMi7ZW/p77Lugp9b626T6vPOCMufwHePTAp0B2jb5AUfMPTxvzaa
rxr+6qfCZ038qvD0I3sEzz9v5tiRfeLtHPeaRtOMaBOyddwH0V/PnXC3sa7n
DfWmZ1TlPY27JHrwuU8il4wsGLK3e4w2zaAqOtUuqzYt4PaC5XN3ydpgrjBW
D6SPi/o2JmTe8zZ1VbXv3KWj/WY1UHmuV52vYD6PME2FuvAOCY0Ek36Hv5t+
HLWX8RXuQ9zFV6Z/6VtwK/y4Z8MLThr0xi3PfOQ9E1495iP8itCl0OeHjr+J
Hb2HsjZuydxhPj0+SOM0yPxJvGmgQ4c3mA7VpqFDP4eOTjh09d+qLccrbJHa
8niz3xD+1mga1Kxq06E2NJsO+im6QxT/e/Kfq/htqv1eyRvrGpW5epB5etCJ
d0vmeGm13594e9qs8BcHmVfsrYGW0YXWj2494rJWeI8lnHfqvar9dsb7LG9W
5M27FXr5lmQ9oeuP9UN5/2g2zWwPjdFHzaZLdW0yLRA9a9AK56v+k2kXPP6q
y5WDLLfz/kDzSyBzSz+jP5G+hkaKPjLopP8eaB4M5GeQ8yEdcqnQik+sNq33
GuV/quxLlP+2ZtNxv1a//UrlXDrI58FdijNHce4cYRraudWmIUEnQxc2tLll
inOm7CtGWN8AOiKQ3/lkoHkY0D8wT/nNHeQw6MYTq03jPD17JPODd2/483n7
/qnyPIYzaIR1HvJeyJskujob40YPJ++C8A6gh7Mh7jsLluVnD74r6Xj7/afy
vIVzClrpaNMPGtTnb8t/nvwfln+/0aZ/FJp8jk0s7vWq85Jq0x1uzXzn/Zz7
xs6hV92RulA/dMLwbs179d0pHzc0lgXVpnncm3D2a9b56SkPnY0Ls9dCe4AP
FZpLUc817YTfCL4jZGyh66NviPeGZerjpYMcht5NdHWCm/HG/eNqv1Hw5oj+
Kd4dtw80Lwf8x881+w383+i7UB5/GuTx4M3u6Gq/2+1cbZ43+IrQt4mOUfBz
6I3w0UJzRG8BMprgVy11bhd7HXgi+CJ45t3K+65BO/iWMJEjQPcOOj1pP/g/
+eNG5vVvkWlFtyLzHf2KhKNDF126R9WoHjXWq4WunftyBvLONbzab11FPUFF
vUGY7Kl3qJ7thplXenmzz5bnG62L54HstZw7R1b77Lmr2W9imxTn5mbvnU/L
fpLmUoPiXDXC85e+5m2XcwO5Vs6SPk3Gh6BHso/WVnufPUbuYbJfrrTP1huv
gh6JjAB1Y76WRU8Q+A7jR1t5U+a9q+MAv5HxDsD7PjwAvO2/e5B5Ff6h/v77
ILvRcQo+wf4N7gkfADwA6DLFjznOm/P4ar9jw1PwwUHmMShVH3etsYxuCeYg
y0j/pdlv5m80+j2Gd5kjtJ7aNXmf4r3iIMU/sMZ1LepCYpx4t+Fc5s26ncLb
1lh2DjoZeUMr4w2Kc5ozmrOacM73cdV+8+O9Dz1Id2XNoSOV/YL9Y/047+Mn
ql4Dm6274tToUnpnoGX9T2v2m+r1jd7veRvmXfgx1eXRGsu3wFP60kDzDKFr
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
DVk3P7WyaDly02lvqjWM3xs60PjwzzflW93fmGe+Ab5WP64smnNKxj5+H42G
VtuQ7+vzN87kAPzv+N7xeaQPZaNEF3lC1vI+vq8zHFJySXPzg13ZO9MvWnfY
Q7GFsoc92yv7trO7sudld8LHgu0MGxrfeUTkBvg2/mfs6NjT8SmkN/27yEOV
/YGucNngYaCBBqPr9F/5TPCd+FJoLLTWNeQrvSp7dlcYcLApZkVfDKPCPVm5
MtZ25UfIBoYcH/YhPDX8z5LovpULc5WPMwwHOKvwG87PnsH3lw/wnPDC+L/p
ocW8+4uVpQujE3ukV7KeGV3t6/yA+QP/uFdyh8O6orc8WxM6YG3SzYssQjp7
Kp9vvt/wZmHNwkVmB0JfyvYDjrI2uof7qu3a3ceY9j2P9YruP6IrmxH2Jjuz
tytbuvnhI6SbG/mAb2Bnwb6C/JRclXz1z7vS09DXXNiVXyk7A/evjZ6U7nR/
r86/25X9FDsqdnNw/mD10Z8+3yv7gN/uyveODx6/QDaebMDYhdGd0rnSn7IJ
YvtC90bXSueq3+3bvRVFd39mZcWi/sE5ZUvCpoRd8/GxN6D7of+jBzy/Kz2Q
Z+/sCkfQNZ04m2u6eOn4BLPFJfPlP8cvjH8Yewr6ZbofcnPy8492JVsnY/+j
rnyL2Ta756vHR4zMlOxYeX/alT8xewv52bCzUydP5zfMTli/81nhq0KOf0/0
0MY6vZRxfUlXtjz0zvTPu3tlkzHRlW0OGwl9vatX/bGyK/8Vfgt4xtfEdkKe
vb0q49yubHDY4pjzbPnZ9LPxR7fBK7govISx3Md3dPaOjp0+nJ79DaMVi/SX
k+0/rKx/+w607mjFIHx68iW8Y3NxbLTij/5qsjCp0Mr4FVhV6Dl0NDx5GPGw
6un0jWs2M/Cjbk268dGKs/hsK+ctoxU/8rnJwk42Po2r1e35p9rz3ZO1FppX
u7JGPp/76/JsZ9b0F/LuhrTXPWwr9CU69GMra7y/rX3jW1v5G1v5+yYLmwjd
jNaGoYRfQgsP5/v6cQO25N3p+Vbff0rSyg+z6NOpv4/hjmYfTFv7GO3XHv1S
HABnNpYXjze6obXn+6va2tHadnu7nnZuG1/t+uZ2PeXcijsAHwpeAhsfdgNs
BsRPE0eN/Q9bTXaa7EiPXVxjhs3Dha2cu1ve6ecWDtgd6Zd+zAP0O7xt2NXG
Mh9QvqAfX1Q2+Gwp2VT+b6/wRs7oyv+YH7J7PjR8aeg8ft2rvWVFV/6sdE50
UwPRYdGhPRKbELYqv+xVPaeSt/VKr7mkXb9mtOKcPTpZ/nDkLPQMP+3VeYE9
cbTiyf1ssvxB6VPZPvwiNhAnd+XTwP6eDwTbdvZG7N+Pib5bfSeNVtzEJyfL
n5Xsm+z8daMVS++xybJ1sp/pzz4WeR+b3NmeyU/0gO/SosJe84wsAa4aWQN+
/ew8c9+PP2FuvCHv/Zt+PADjiR6InOAvu5JBk7O9hpyyVzq5V3WFoalfB8kX
e9X2Y7rCYrA3TsMfjVb8yKcmy++Wbkj+/+jV/3kd/nS04nr+12T5i9N7qU+8
4usGK86M+IfkVOIvkhuTwZP9Ppj+nxX7H7jJNx1ba4q1ZUGvMIqm0D+044mh
inUkztGXw1O/eGzx1a75seKf8dHsEmG19/exr4e/Ziti7BircG/gJO2f18qZ
V2V8OeVI+/WUMzX+h/z9YCpJOyV4Rdo1NbhFUyOLV/ZVKX/VZMVmumSs1hHr
yZG94vthDbD3Q5+K74OuPW289vD5Le2bu9pLZ9MjhL87wAe+qvLyZ92eZ/ip
9ZMV+2btWGEIbs4esnayyr9srPhXfCz/XN/71fShPtVOMq6HwqPhcfCLaDd8
0Dld7T/2fHS1uETaTr/yq9Ynv55XGCrOv5lXMgk2TJuPLbyq3e3Znnll0+Q5
e6llXc2z6a3Mpd1Lc3Goqzk3rVcYMbBF4cvsavmva8en2vFczte349l2/E07
rk07PkGXmHZ8Mu9Wjtc4X9jK3tfuN7ZjUzuGuxoT1hVtvIGerR0vtGND7p9P
PRvyDd7f2I69OSvr4axvMBZO72qtmtErLKEN2bfR0b6FT4p2va4di+YVnrFY
dGKMwWUyfmCowvd6Pm2B//Vc2tLras+f26t4DL7HOIYFJq3vmOxqnz+ipdmZ
vtF3sHG1Wx5YuXvyHQ/nn+NVd2RMGQfkSvfmP2qfeHlkm+dN1vWascK13Bq6
Q1oyqU35z/fmekf2CFgBeERjFZ9mTPKp5k/94pxWTztuasc0+rw5pd+gY6Xf
oD89eG49cy+e8J8MVqzaKXMr35Ycp7ZjeE7py8SfpX/d3+43pY6D5la6rTmk
pXsZasf9s9vcbMfSdv0gu5h2nDynnrlf1q53tPND7ThlTr13P3VulXVzvmFZ
2kFvIjYS/Yp62Dmxcdrbrm9sx8Z8J50PndThXfEQeA4+/fAmTlpYPsrOQ+24
hB5o1pQDuCkfW1xYFHAk4FJIz8f/suhy6HHWzK60sH/oBMULozfSbunoVV4/
XvWq/+b0hzbtSxv1nXjCHxqsmGMvtPsN7bihHa8eL57j0K6+j36GLml33n+6
HXty9s1iQthL7eHiu140WLGkTmrv7ptd/4CvJ5kKf89vR75CrmL9JD+Ft/O+
yYr7dulYyaPEgSOT+m5kNmQ390fORN50X565fyDPrK3fSdnysNsnC+XLwNff
+IRrQPa3MWPVs41ZS8nUyIH4rpLnbsvarh3aRnZGrqpM9qLOd6f8+eOl/4M7
4vmdSQO72ry15t2YcXly+u+k3Psfxugp+T8n535zni1L35+YPMaiMftw9IzG
IL0e3KvfZB2lZxS3i87vmPGiB2A1wdn3Xpu2x7eBvwdswl1Zjx8bL9kAOyk4
83gg/0586XWDFU/M+msdRnfw+9fv/PfFUb9tsOJ+2WM3t+OmrL8ntuOkeYV5
B2/3sGDJwe2FuQu39MJ2vH9BYYI6XxRsUOeLFxTGpzhV4k3BOn1f8tyf95cs
KOzU97bjgjzbH5y5Ne0axtxBKXtvcOkuW1DYfzDz1uYMz+/ynKenjj3BnNOW
fcGcU9+Lwa67NGVPTbtg1cnzrbTFM9iu56d9D6U+9VyVPtAv/N/4db+7HUcu
Lt9uvtuwomEBw9mF+XpZ8sOVhpMLT/fSnKWDG/ue1Acv9YoFhQkL31p8NbHX
vpF6pHsg/aeftud71AEfUKw1eWACisfm/uG0XbkPJp88sAPFFZMOzvO9wyWb
UjdsuBn5vmeDs8jfll8sf15+yuIy8799eVsHZi2uWM2wZWHV8aOFCwtLDv7c
NXkmP4xY+HSw69bnvTwfzDN54MMaO9p39OrS1Y6OleyC3OIZNr3jRcOgZfgy
4LXwXj+PjEOaI1rbdgyXvhfeJCxn4/KooeLB8GZkIdLD/H9yVeH3njlW2LqH
pq1Pt+db2vMVY9WP09NH/seuYDf6f88FB9G4eT4YisbUC8FE/ED6Vbn/0+bg
9cOFGezf6mNlbRov2g8NeHXmHxvLnS391uHCdPxFu35isOLZou3Fl2Wruj5p
Zwb7UZvRRh8aL7oL/QVX/7PDxTPuaeXcOVzPnl1Vz89q33hp9i772dqMZRjY
l+cMq/vRyP7pAGDEw9qHd/xvkfnTE7yxqzF1WFt/fhKdAF3Az6J3oIf4Xugg
svvH8l5+dL81aUs7fpry5PnX1KmsHx1Tdth0E+hBbYDz/8PoGugkuq7kTzNb
G76feuggyM/FsEQf/Thl+J4f5L38cJ/Jcshx94eG3Zw2nYqeDa33+nYMhvZd
lHt06sntWBraeXE7TghduyTr7HXJtzh0rnV3KPTvCUm3NfWcFvp3KOWy5ROD
ln2DflqWNmnfKbm/OflOb8e2dpwxr2zcbsmzM/JNS5Pn1rxn//aZnNlOXJF/
Dmf9kWPK/l6/i6PwycgV4N3vCfY5TPz9wRSHkb8vmOKHjJfNCry0r8VeDB8D
U39v8MjPaf/lKngNi8uOgc2Dff7n4yV7ZkcAX18cR/WZ2+hzWCJwT2dkr1qX
9rqHuWEtg7Oxb1WtdW9obTio1fXF4Vr/YP1rrzVaPAHrrjiW4go4q+9fMqZ8
/5ldzaGX9crH/OkV5ePErmtb+pJdnX5kS8nO7Nb0K7tTsX7Z8LFd8p4tX2+8
+P5ju9J50n2KMYT33ZKxQKazPuMcH7w1/5lN2S35z2zf6DTpOp/MmQ4Rzs21
KfPxzD/p6FY9h4GDr745Y+S7bX24Z7BiGsOx/avImcQCI1tFS+CPt4U+hN+x
tB2nLKx4cn8cGQacS3PVPPMej42fhvNnzlszzINvNpr+W3NrPnwr9no3hgY/
OeVuD8+0bGGd8dBnjZfc6ehW5z+2Nm8erHjmsDsfyTqBTv9uaFL0O1rIvbLv
D31q7v5Tq/Of51Z9nmkrPuC+0LbmtvfaCrvTN1kLzVW2jOwNzeP7Yudovjqz
ZzRvndkqmnMPxrbxgrlF36PfzUPPdrTjw4uLFoe/ZEwYG2RL5ih7QLZJ5vxD
7fzw3Jrr32vn788t3M+fZE2FA2rddA9b9NGso9aYb8cG03qk7dpt7VC/cq09
ylauNUPZZEtzutIr0S+dsbDWTesuzFTzRL+z8cQH4jXZcjpPiY0mnnBq7DLx
PNKxzdwd3oWNpjO+be3c4lEPjo3nlOSHM/rT7Cd8M59ZUT6EbHHFUGb7qL3r
IgvbERvStfk258vTd85XxFZ0b/gwOJ7mD13g9/J+XcqYmjZdnnZNz9i9IDam
723H83Pqv566sMYpvt+aq//8v9MW1v5nXxpeWO/dw740J3wbuzVxotkln76w
0uprMX/0t76Gq6oPzGk2uuJGs8E1Ts9PW76Zs/b993jpT/gxTLY18KNtnF3N
t2+8/ql/+8U2jz4+WHG/fTOb6xnpg+m5Z3MufjG7wN35f8p/MDwwOgI2j+/3
fdvz7LLw82vDu27M/LY2wPTRL7515nj5zPBL3pz5b97DATLm9MH1rZ3vGqxY
yltTj/x4YzwyHeNNyacd5H3kfnR9t6QeZeGBL55dvL51pC/PfiDP1qS9+Hs2
kP8HvUaObA==
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.9593696304415178, 0.7684240761037946, 0.4740458543687052], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
vdjp6NPpwd1ewRHS7xa82TXu01P+rsG5vZLm3IzTXpkPe8QNTuwe952iTe2h
feATdaR/z0o5xLtDYQcn3u2CtrihiRt6aewEr/ZReYLzBPME5YIKwcWCSkGV
4KL44W5WGa/0cbpxsr8m8/Wk30uwdx/PpYMF7YJto4uKPhZsEc1/WWFnC84R
zBD0EvQWTE863D8VXr2gteMl4dX5Ce8jmCvoJygTXBiTus4RlCbsgsTt28f4
3ZZ6gN+tcTPOXYLujF9TX7fp3vgdEtoxQdApaOnrttJOxnxs0ixJeFdoE20t
hL6Qx8SMxyTBocEn8hoXHGqO+77EnRS8GZe6Qp86BONDp8anTnelHMJmq04l
af/MtLtYMCsmYQvDf4EPBP8e3g38y0vjBz9mQfg+8HIeC1/8mHLvF2/NOnBJ
wsmL/ePN2ctcljzgOV0R/tfA8MLgBVaEdwi/En7k5Yk7ILzAvtkXXpS41G9+
6kid2FfelvXnrT5uM2O+Ju3EvTZ+c4OL04NfG4O74PJmwXzBAsGm+M3PuJ6X
NK8EN5kPjPHL8ftc+PuZYKtw+OfCzzeFn68NNS681MfxVmcMqNObfYy74OMb
qQvuVfEj3rrUF1xmLGkP7duQeUi91ycc91lax9dpHT+3yuO/On0A3q1K+exZ
1mpOr+vleXPX/7f3WSO/t3p5jkE7CNs+V3vbvafst4VOMIcWZX/EnMaPePTN
Hn0ct0R5Ldlb80lQLPvive2eKXvfXvYr7eXwewWXqd9+qX57VP3Wr5f9lgpm
93JexH1Dffy64AX180LFv0bxVw41Xt+dfRk4vST7u6XZ67Fvu0bxlyn+3xX/
XeiNYJ3y2Sxzk2D1KO/51vcy7WNvRz/hJg9o4aZenjeLs09kb0if0afMsXuy
x7xBZf1NZT2vsj4ALyhjlGnQvakX9PJ+mct6m1YtzR7zOqV9TGn/NdT0Cz/i
LZD/Avkvl/+L9IHgWeX5isyXBc+NMp3YFFxmvRkTegTtwO/tPqZhG4L7y0J7
2Cufm3FjPKFPGzMPVvfymM3q5bjk8Y7gl6rPJtVn1VDTzTeC19Cm14PXO7K2
Cz4eZTr7ZnAcurgu+At9XB+8hn6tDe6vUnkXpOw1KR9cWMNY0eZRHqd5got6
eZ1bnbiM2YUJmxPc6Rdc6xJ0Bxc7454VfATP5iZuGfmAI+CcyrpK7b1L7f3L
UOdNeLngCvn/Uf5PDjUuzE6Za2POzXybmzpBp98KTWKtfbOX28oajEkbLguf
D37f08r/r9pHjRpm+d+6hD2v/fxpBxQVXY9sRbPlAcZ0CO/k/3357yf/9bLP
kP0E5FlkP0v2z+R/Y7NlGw5S/JubLRvTKPtvm30XP1L2Rc2WpWySfbHSTlHa
baK3n8g+X/ZhyPDJPkf2Pyv/XzVbruPbiv+4/E+Q/5Pcmcp+lOzHyn59s++g
v6U4P2v2vcYI2ZsGqwzF+X5tUdHVzb7r2Z+2NPvd2WTZfzXc9OH+vU0jsNP/
mIStG6i+m6D5I/vprZ4rlwj+b6BN3Bv3Eq1TWferrGeRk2v2265Dk/+vk8+1
w53Pa7FDZybubVqDHbq0cYLrclCTxnCCw7/T5PBrk5ZyF6YOL02w/VTV7STV
4S+qw1frlWez36GMVx2Gyv9P8v8FbznaVAfR9JMKRUX/HKI94IF+D3FQV1HR
l1X345v8Rm1vwXeUrlH+vWQ/X+nKD/Q7vlNqHd4rcXjXhz9yVrxtIz3vT/Ej
TYviXKn0f1Q5M1TuapU7+EC//yMf4lP2oV32n9Rl+a8BggmDnUdF8ulW2EDZ
Fyq/R5r9VqVTbewr/5OrtYdQ/V9Q/n0O9Hujxc2Wd21RnHKl/4X64a/IwDdb
LrQg//7y/638v6X+aZD9dtm/pPo83ux3It2K81Sz3y5NlH1cl/vgBJX1ZcW/
RPF/KrzdhXbKXqT8m7pch7Ey56iuP1ddfqi239vs9bRV+byt88nnogFDhcu9
lPZ6pT0J2fhmy2AfrDiTNUenCK5WnOea/fZ5qvyPUvzHD7B+gH80W6bucPn/
uNnn7mrZj1eaKsWZqj3MqbL3l/1h2c9rNn+yXnEukP8B8r8SvqfsDbJ/KPs0
2fvJ/j5nL8V/XPH3U/yzms3/qZX9H8KzH2u8/1nvt8SMPeM+dZjt9OGZymdf
5TOg1G/BJsv/lzV+I/8j2b+mtKcPcz4/qPf7Q96K8RaScZiafH6qfMbJ/Vg/
1VX20bIfBY9fc+C5/YUfmrMfy/5v2S9mzyH732S/T/NnR8V/XfbN8t9P9v/I
voX1bILn5nmaOwfK/yvKc4ro6EXNvvfZhzYe4PpRt+eU5yNKu0HzfU6z78IG
0YfNlnMYIPuqkY7/Q+5/lGdvpb9MfThG9p1lf5BzjPJ5Svkcorq1y393+dcV
+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
J3X7DdIq9lTdfpv0GHvIbr+d+AN77Ebb4QnsNNpx4D2e2uk9IveTpfKf0mjc
Azc5H3CWYBxYJ3p0rkKjoc975qyFPvbvd/s9yVsqq3i06wMP9itdzqs7NIO0
nIXe63S+jDPlsz9lz/opOlwafe85vNvvQH6rPD+W3x6Nvvu7IHto7oEHdft9
wjWKswUZoUbfa/Tv9ruIK+JPHPhmyGRTFrod4DnAb2DvPrLb7z1uSl/t1ej7
UOT5iPPb1I048KbO7HR67tuRF2Qvj7zf54pT2ui7e+qIP3v6PqP9Nox7gRO7
bX89fTWp0XP8b53mI/TII7POwV/YdbTfj8F/Rv8e/qx9h3Xb/xnl83in99nI
qu+m+KMbLRuMLkHOT+gGJJw9ODyIsdGXhw494vNGbr+U9Z1Gy+Ef3m3/Zzlb
dfvd2lOyr+j02axH7p782dODk8SBB35ct/eTL4+1vl7whz1GheIc0+h1p0r2
Exoti3tat98RvT3Wfy+wJ2A/0LvLfARk/8sUf1qj1wJwFXyDt0/fdjV6PsJn
IC1n5oouu5GlpVzy587lB91+77RhrPPEzn3Krl1eg3rWIs7BPX8WMCeZj7x7
Aq/g/VIv/Dm3c34mPrwLzoecEyeKhrxHfRt9J4WdNzPwTj9t9RmWsyxnPNYZ
9DXt1ObzMufm3ducD+fOPm0+I3NW5gyM/PvpGVveKzC+5W0+83L25ayLPP6o
6I5DxhxZ0+Zuv0FaorbvONp2+O1favP5l3Pwl9kfNlqW4PRuvz17b6z/VYGW
Qcd471XoucPq5/Ioa2urz6qcWV9o9bmS8yW4xpsM8K2uzTw3eG+Pt/o8y7mW
/mNtPzd0hfUQ2nJ4m/cD8E4OafMeBP4E8xi5BuYy8wwZDeYgZ29kUpDd/Ver
z7ycfZ9p9ZmXs+/mVp/HOZe/1upzOud15jpyCsz3t1p9NueMzhkbORrkh8Fb
+oR1EN4CbYcH8dPwGngb8V+KM6TRd4vt3X7vtEJ9WCT/ikbLxnx1tP25u4EX
wTjBH0GnIzgBPvw2fAreJdyYsWQcR3X7/dttynPfbuPVDbJvVd47NVoG44Bu
v4X79VjTJeJz5/Jho/3hIQ/t9luvnyctdu4miLNro2Uh2CtRH/g1tIv3WtxP
Le40X4b3GfA96Hd4EP+dMaD/L+50GPIy4FtNo+Vn4F3Qp/CJrgwvAzkj5Mjx
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
         "]], PolygonBox[CompressedData["
1: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
58G3RW7bgXJY90E2O9/fdDK4N+MtYbxvGW8FuCP44QLf4beTvkO6SyWYX5r5
PUD7dvm+83OT/kb6VlPxtxewtonI2+R7Di8m/c307Y4ifzvlb6JvM5L5nEHe
T290vu/sVHBX8N/Yu4bgCeDu4H8gj4MnJf0G6S3Smzgm6Tddb/tF4DvAOfBv
4GrgcUn7APIFaoPvAa9IeS3ySeWbjkWeT/93I5+VtE2UbezB/I6BB7Afqwoc
Q6wF38T52VKHM80378m3H0p/U1nfFMoO3rOHNKc8n5ki+u8P/rqedXYi35/1
Xvfm/P4ge6hvinw88s3I+6dcv5eyCfwpOlvQz6K/PmufUL7hL7QZRtuBzGdO
bdv0XpznweDhdXwHRoG/oc0O2neTPaH+JWUruDN4C/VB6J9dx3d4cM5vuN7y
k/Q/Muk3Xm99cdZ0C3gJeAr7U5L92QB+Rm8GeDXyJeDZ8tHybWPfBb8IHpnv
N3Kpvjf7ubzAPsYq8HT5ZMhfRf4a+An5vODl4IVJ2xTZloGMdxI8Q28WeDHy
N8Gvgsfl28auBC8CTwafBq9LOmZS7CSf+wtwO75ZoonXoLUspTxOvQLyLcjf
BE8A/0b7j8DzwGPy7VN8kPSd1d1VTLqBb/Uxvx1DtprfjiPrkPFbJhsgW1Cc
/f2et6dEc84Ya/+r0G/RafZgLPgU+CLwb+DbwWeh3573tTT648EPUKo2t4/8
O2Pdyjcqivsbz8X+XQuuH3fMpNhJMY1iG/3WmXoDdJ5jbrMom+RvRP52Z5jz
J4qtQu/1fyhvgc9l/LcY/0LGvK/Ic9BcFCMdTHoNWot8+h+T9nnk+2iMzTrP
jNky7jP5JGOfT38Va3sNWssQ5Km4z9xs5FWQZ6jnI38E+Tv0cU/MMVwl5GNC
3129wXqLtWfaO/m0e8GnKINZT5o+h9L3tZFtb03KdmSj0f+5wD71TvCctHU1
B81lAb+9RN9DGXMuY+8JbdufocxLeg+0F4oZf5GvwHz3sZ48fnsY2QXgu8G1
wFOKHHMp9mpEfyPlS6dcb0gZIf4hsq9/O/Mrjv++gt8ejDlmqM7cHqN9AfHw
QfqbQX/3h7Z98knkm8jHla87nDYLxFWg07/APuYL8l0i+xYLajIu9Ssiv/UJ
cF3qHULfbcVMip3+xR6UjtsnG834w0PbTvlE8o02aM4x+xzyPfSG6C2pR5si
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
bOLa/g+OsFjU
         "]]}]}, 
     {RGBColor[0.9882371439009991, 0.8405928597524979, 0.5635351460930973], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXecVdXZ7w8dEYMmmqgB5sCcmREpDscDZ2CEKTg6zBFnIGo0FKX3aseY
NybRJEZElN7B3hKTvOlFsYF0BAS7uXkTzb251xIjSJH7+87z2x/yx/qsvdde
ba+91lN+z7PW7jZu9ohZLVOp1AMdUqlWil/omUqNz6VSDxelUm2qU6nzq1Kp
5Ur7SbdU6mOFjxTuUfjE962UZ6meb+ySSu3N675XKvVW91TqAj1borBY4ZLh
kee3tanU6JpUqjqbSr2pPM8q/ydK/5Ku+zjvAwq9FO5XWKTQ0/F9Cv0UVims
VLhQYYXCcoWc07jvq7BMYalCb9dHXeVOo09ZlyNfD4WFCvcqXKm+Vahvp6k/
j+i+o+JTFVroHReon5V6x3m6P6hwQOEh5emg+BSFB7tF3F5hY7eI2ykMGR5l
/7s23u+IwufuF/FhhYe7RTvUdb3C626Ddrtr/O9S+WFV0Z9HPealul+o9CsV
v6H0GxVu6B7XlJ+tsF9hn8Jc9/c1hTmOeTbLz/cqnFYd357vfuXwuN6uPndS
+mC18ZLuq9xX3ntoVVxXKwzXuOWyMWaD/ZzxGOSY8bjbc+dDhQEK6xTWKlzk
5xsUBiqs9zPa3a42O6ZTqZnu46sKR9XuPKW37ZxKTdT9NoWtCuMUtihsVhjr
+GWFMQovKrygUK33+oHKPqP3us7PX1K41jH5Kt0X+vErzc9/9IwxH6Gyv9f1
FpXtr/vVnotlCgu8Js7zPOK+pFusGd671M+5zyuscfnzPa+Zf4z/QL3bH9VG
hceGfKcoPav0J3rG9c8VH+gaa3MdaboeOjyu/6i+nVod/RxcFOvmkMJnCu2U
/pjS5yj/ZcPj+rnaSO+j+jfovnF41P+i6+mv9F/2jPVz2HXd5/r+7fV0TOGo
wsG6VKqz1v481fHOpRq/r6dSv2lIpabVa/72UT6lv6U8Jcpzo67f03UfXd+i
65nqUw+1NUvxXOW/R/mPKz1bE/SHd4QGcd1e19MbNe76NlMV/4/qyaue25T/
A11X6/o7ur5omOah6NhAxeWVamuwaJLiW1T//ar/C+X5p/IPVf47dH2D6uqr
Oucpvkt51ipPaoRoyOAo27NMY07bCtMU2nWNfs9QWKD8Dyl/C+VfrTpvU18H
qc4JerZV4RWFcQpbFDYrjHca9zXFml8Kjyi8WKr61Z8XFNdUpFK1CpN0f+aQ
VOp5pTXpXTbWBT2BrkzU+NRr3T2usu+r72cp7xO6npGN8kPV5wv1HWcqvUHX
v1fZ/So7UmX/pm/UTmvo2YZoh/z/ozYergtaDc1eMDzKflXt91c9/RSKNRaj
9R0eUztDFAYOj/X4mObMf2kclmscTgyPb9XD3wta+4XCcdPoE76HZqe6xz1r
qUX3uP9Mc3eU1v3IdKyTlt3j2dvq3xC9R61CN/VlXFW8c1t/B74N66a18rbq
Hmu4reI23WNN/qtb8C3W6Ke+X+i5/Kl5w1HT6GXu7zGvQ+qjH9Am6qMN6AQ0
njagxdDkDeIRWzSGh3U/aXj0raQq5ksrhakKUxRaKExWmKTwRZeYK8yLE7qe
2DXun1M976uesaqnpctRZp/Sv6L3nq30lOugTGvPTdr4k/K8o7JjlOd4l6ib
OVilOfSE1sUgxduVp4Xqmao8fWqi//Dx8fqO39V3PKr0Ubqer+sjur5S1zfo
+nNd71bZDio7A16h64/U1oThUUeJx2GCafMrpttfVZiufA8o3zTFS1TukL71
6HR878O6HpOO+891fW067k/oeqLiCQotFCYrTFJIOebZKQqzFWYpDFI7cxSf
qtAhHdc8O6J6rktHvUd1PTYd9zVeZ6yXb8LDdX1V9xhfxvn/aW4v0/raqT7P
U/46jdV5WmNzdX1M9YxLR11fFEUfxyscL4qYZ+3gYQozFNq7j9y3ddr0dMhD
0IJqha9rbl+ldzii9t5Wux17xVobq3YvVru1ur6mKvK/ZZ5Puari4PODFF9U
HDLE4OK4P6c65mSn7jEvuf5rbcgKlCNfa/VjmsJUhVaOpyi0dMy4/7gm6Es9
9NB9n+bv97zCJsZBdad6Ba/nW77gZ19THy6vCp6KDEIfKxW6VMdceltpV2he
7tP8HKF4dzp4LXLfrnTEyHp70yFDwCd3pEMWRKbbmY7n3L+ajufw27qqkEte
V9q+dMgZlB+mdynPhlyzJx15aQ/Zobf61UvheV2fp7iMsR2oeaC+Fev6WaWX
KM4oPKfr0uK439Q98nL/pL7dez1DRjqjOmjv9emgv1zv0/gfTEffkJUOpCNG
JtqfDlmEvr4rulen8b5YoUj1jKmKOTFcY7RT/WkcFuuQMfzftbGeWdd/1/U7
pVEOusk4f6sqZHTmGHlu6h51Ms8vVp/fU/5LyqK9P+vZGUr/k+JdCv30PKew
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
MLM1XeI593w7+BPj8Wld0HboPZgt6XxTxhcMDux2XZeIaaO3xuD0bOByO/U+
OT27sEtgV+QHv+rh/sNXjtUFFgomulh9fkJ9bqk+b9T1r3XdWtcVGqe8wu3q
z+7OMZb9usTcObsy+OtEzcsq5Zmg+Mm6wOHB48/3u9LW2UOCd31D6+6ndYHJ
g83/d13YZbDPgMUyN36ufDOzUSf47c/rAv/HXjExH7j+bOPryJF8F74h35I5
xph0q4pxwtbENfP2/Jq4Z/4zl7s7va/Sz8yGvFmr/j2jtVGt+Dd1If+jB5TW
hMyNzoju2tWyN/OYPp87JPrA917jOcc3XgVmmI21wLrme6xQWN4lvs9K3+dd
jjLMTeYoNK2f61jpd+Ld6HPynrQ3UfX39ForqN/Pq/9DLef09pzETtDb82dX
56iX9ofnA+dlbtyluV6n+x8o/kZT1DmiKfpSUnGSxqJXQNcfqwsbDbaaqepD
P8+TUU1xPZK4KuRL6NggjWE6G7IkvGGjZcwKy3NrTLvX+X5TRnRIbT6XCR5C
3vXmJeudb29p0K0Khe/nw9b0kPkQ9a0231puGbPccucS857VljF7W+6833L5
Yt+n9F2fVfs1w4LXkRcZ+QLXQT4wg3MUZmhcV9SF7QAbwiLLwmD/H9UGxtZP
9bxVGnh/jcKbpRFXlwXWdm6vwN/eKI00aHGx1sUk1d/Vtiho8ie1gT2fpdAG
LKhzXE/vHHj0V52+X/VUlgV971oT6dgZD5YGjR+k8GltyIkVw4JfLvMYIS8W
9wp58jXlv6gs6jpQGuUuct+wf305EzYwrj9TfVOyQTfAvnIeM2T/bbrvWxZy
MPpNZnDoONhiuEbuJS7xNbIw1+TFHoAuhM6EfY95ONv2A2SU7bYbbHc+6D/f
Bb7BesMmcdxrKWW7BPRtQEXI7azRPubBxBf4mveocB76Vuw+/1M8ZZbq3twQ
a/iE22C9Qtdpo6w6bHnvaXz26N3zvKvCt3TfT+nXKH61NOYvz9CbsCHemomy
s9T/ct13r4l5Bu4HPnWu59vjotV/FK2+SWttu+rJlsX4YoOkniP6FocVPkYX
1/f9F/ow8wcswWUXF0QTVLafyuUUdpdGH7nHBkn/v6gNmW+F19IOaFlZtLez
NMpxjy4zDzqsMnXDQtYdoviYyl/Neh4WON9hy+NfqQ6bzhvpsF33so5+o973
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
         "]], PolygonBox[CompressedData["
1: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

         "]]}]}, 
     {RGBColor[1., 0.9247349035535372, 0.7026279441628822], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], PolygonBox[CompressedData["
1:eJwtlVmIz1EUxw9jLYqieDT2/BuDv90w/jP/mcvfnTF/M0OWB8uLmbJmS1ke
mJTxMjxYypaiiRI1IVuiRAmJCA/I2MluDD7fjodfnc899557lnvOr8+Cpdkl
bc2slq8dX13G7GO+2ck8s+5FZgE+C6+H36XMNsGv4Ua4K/od8De4Ce4Jz4Nv
wvXwT/aXw5fgzfAneBF8B26AW+F18HP4CNyZ8yvgJ/B+uD1cDV+D6+Cv7K8M
ZudyzSYUYL/CrDSanU9yT8KsE/t78NUkPAbF0gtemXAf5Wsh36l8tyFbpfAZ
OLev2Rx4OfwY3t7fbEvwO3RX8yCzKngt+mfoP6PfDv9CX4D+Dfq58Fb0H9Bf
HmC2B25BPxH9e/QL4bnob6Cf2c9sGVwD34f7Y28D3A5/S/D3AWu16HYEz43u
/JA22xU896/kA7yQPbeRL2BvDbounJ+V8Jwqt93g+QmvmWq3k68FuWqM2VH2
V8FX4Y/Evxgugy/C2+AFcF3wWignb7ivHv1X5EEDzQ6iayW+QuL7QnzLg5/R
WcWs2OWTfJsM/4Eb4NnkJg23zXqOlesi2LLug3yZBP+u8JwoNyn4b4XnXLkv
httkvWaqnWqgWiinyq18km+yIVuf8K8m/I+Z2Cv5Vk/HL+I5TTyrlNOU+yTf
cgaTK/bmwCVwB3iv6gOXwp3hQ/AabFRjqwv8sNhsY8ZroxgVq2JW7N+5f23w
GBTLL3hj8JgVeyu8NXhMis2wVw/vC96LelPfyb+V4GvCa/gXPhy891STFjgv
+lutpyfykYdGlztyppn4hkV/qw2sjUBORn+bu+FRyCOjy73VQ+wfA++Hc+Ev
8OjoudTaWOSi6L43wWnkwuixnYRTyJOjywWcN97i8Oh3d4PfYq8keqzq4YA8
ne9W0ntYvTwDvpf0HlYvZ6PnWmuVyMXR71bPqHfKo9dGNiqQp0Wv3XW4DDlG
l9UT6o0p0Wt9hbUM8tTosnpIvTQRboST8G/8HRf9rR9hbQJyQfTaas8k5Org
b0kz5hb1mBd8dmrG3IVrg88y9dwjeFHw2aieu5/2maHZoTent7ci+CzVzHiK
vhxeCh+Hb8Cb4N15PkNewuuCz1bNhGdpn4majZqpmq2qqWqrma7ZrpqqtprR
mtWaOZo9stmmyHtEvaI3fgzb46PHPoQzPzg7NuO+dBhmdiDjb0xv7QRr4zJe
c9VeM1+zXzVX7dVz6j3ZkC3NeM165Vi51j9E/xLZkC3F/CLlM0ezRz2oXvwH
kOZCcw==
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV0ktLlHEYhvFnSqGgIMEgl32Bzict86xTpqOTukk36qIcMEei0aAUopFA
bZFtqkWHTX6BICiCIAiCIgqCWrSIqMioqCjL028WN/fDzXXxLv7v5t6T6cFE
RDyQsrqIS+2OxojlhoiZ5og7yYjTbRGzOqff1EekWyI65Khs4kzjNupJ7m3c
f+6U7aa7KB1xS7/mpfDt0ial+AlMib7Iu475w8vbrrpX867pV7wj+FZpkQ34
ccx6neddwfzkjdkuu1fxZvQL3iF8sxyWdfhRzFp9njeN+cYbsU26E7wp/YzX
iE9Kk6zBD2OKC9/lTWC+8LK2C+7g5fVTXh2+QeqlCJ/BJPRZ3jjmI2/Ads69
bBvTT3jV+FqpkcD3YxZrI85gRjHveX22nHvJNqIf8yrxVXJQFvA9mHmdwwxj
3vG6bUPuRVtWP+JV4A/IfvmL78L81qcwGcxbXqfthHvBNqAf8vbiy2Wf/MKn
MD90FtNfeGNeq6238A/Y+vR93i78Htkt3/FJzFc9iOnBvOQ12Y65/9m69T3e
dvxO2SFz+BrMZ53BdGGe86ptHe55W6e+y9uC3yZb5RO+AvNBH8ekCm/FK7fd
kBX09pMr
         "]]},
       "5"],
      Annotation[#, 5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV1HlM13UYwPEvdqmV2oXV8loZOitEMwNjiXhxOAEjcKRU8yyEFGwNzA00
r6VQDaxWmCwVtTk1NpJkWZjpIqWGRcuMVhE6SzxWSK56ff94+zwf97w2+f2Y
w54tyMiPCILguD8qpwTBG+lBUGUumxwE96YGwaKZQbBYz+s51ScHwelpQZBn
/8k84P2RaicFQRz7FvsiO5xd6maZilSoT9z9xiy3d5ifeh/SB2w8+w5bzEax
xW5K9LJW6At355iV9j/MY95HtZedyG5hV7Ij2VVuVmuNXtEJd5eYtfbL5tfe
LapjE9katowdxb7qZqPKtUnfuethKuz/mN97t4U/MzuV3cauYR9kK91U6U1t
Dj8fdxHTfSb2XubP3u06yCaxtewGNpqtdrNFW/WefnfXm6mx9zHPeHeGnxeb
yu5mN7Ex7A43tdqlnTrvrj+z2z7AvODdpcPsTHYP+zo7lt3rZp8+1H797S6S
qbMPNK94d4efNZvB7mOr2HHsATcNOqiP9Z+7QUyjfbAZkeIXS81sJlvHvs2O
Zz9z06TPdVg3uLuPOWIfbvbx7q0WNputZ6vZWPZLN806rq/U390o5oT9AfMW
7wFqZXPYBraGncC2ujkZfq/6NvwZ3Y1h2uxjzbu871QbO5dtZLez8eyPbk6r
PfxuNcRdbPi92uPMYd5DdYp9hj3E7mIfZzvC71Rn1KkodxOZs/YEc6T3CLWz
89gmdg+bwJ5306WLuqBod9OYS/bpZoz3aP3CLmCPsvvZRLbbzZXwd1c9ethd
CnPVnmo+4j1OHexitpmtY6ewEWl+b3WtrtEEd2nMdfZ0M977MZ1l89gWtp6d
xvZ1c6Nu1k2a5C6L6WfPNid7J+pPtoBtZRvYJPY2N7crUncoyd1cZqA910zx
TtZFdhnbxjayKew9bgZpiAYrzd18Zqh9gZnhna6/2OXsKfYQO4Md7uZ+jVCU
stzlhd+NfYk52ztbPexLbDvbxM5kH3ITrRiN1lx3hcwYe5H5tHeu/mVL2F/Z
I2w6O97No4pTrOa7K2Ym2EvMhd4L1CvR/3FsJ3uMncVOdJOgxPAzVp670vDz
tZeZ+d5LdD1byp5jm9lMNslNslKVokJ365gZ9vXmcu8i9WVXs13sCTaLzXAz
S5l6QsXuypkn7RXmCu8S9WPXspfZb9jZbI6bp8LPSHNU6q6KybVvNld5l+lW
dgPbzZ5kc9h54eejheH3qXXu3mUW2avNDd7rFcluZK+ybewcdombfL2gApW7
e59Zat9mvuZdobvZCjZiahD8wG71d9u1QztVq8rw3xx+J27+B46Kbsw=
         "]]},
       "4"],
      Annotation[#, 4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV1XmQzgUcx/FfbSVMI0wHW1OOjnFNx9pMtiXtRbtrndlNjmWtc1c2K1Ir
UmrFoFJJKtdE0jFKl6NLNJqcM0s1EalE04EpSa/vHzvv7/F5P36eeZ7n26K0
snfFOUmS7D43SQZ3S5L2PZJkeG6S7CxMkjLchaXZSdLBfJh9vV72+huykiQl
P0nq7DvfkST7sKPMGM5+9Vj8Jl5DNt28nNuAW65P457PPWifwf0Bb5OZwDmk
rsLDOFI2M16TexF3tL4Ttx73aDjcXzFbZjLnmHoKHscxsjnmldyLueP0Gdz6
3L/sM7knsEBmGuek+mE8hRWyheZV3Kbc8fqu3IbcM/ZduP9hP5nHOGfVszDp
mST3yvY3n8S9lFulz+JexL3Aviu3Ht4jM4dzoXou1sf7ZAeZP8Btxq3W53Eb
cRvZ3869GMtknuY0Vj+DTXCS7AjzGu4V3Mn6fG5j7uX23bjNcJzMC5zm6sWY
ilNkK8xncK/iTtUXcZtyW9jfwW2JE2WWclqpl2FrfFC2Ot4Hbktujb4v9xJu
G/ssbtvIyazitFOvxvY4TfYh81ruNdzp+gHcy7g322dz03CmzJucjuq3MB1n
yD5qPpd7PXemfiC3GTfDPod7Gz4ps56TqX4Pu+CjsnPMF3Dbcmfph3BTudn2
udwcfFpmIydXvQnz8HHZZ8wXcjtwa/XDuVdyC+3zuD3jvZX5nFOk3oK9cLbs
i+aLuDdy5+hHcq/i3mXfnTsAl8ts5xSrv8KS+IzIrjBfwk3jztOP5bbgDrHv
wR2Ka2R2c0rVe3AYzpd93fwVbjp3gb6S25I73P5Oblm8tzJ1nBHqfViOT8m+
bb6c24m7UF/Fbc0dZ5/PrcD3Zb7nVKoP4Hh8VvYD81e5nbnP6ydxr+VW2xdw
J+HHMkc496t/wsm4SPYT8zXcTO5i/QPc67k19oXcabhN5jjnYfVvOB1flP0y
PjPc27kv6Wu4bbiz7HtyH8edMic4T6hPYi2+LLvLfB03i7tUP4PbjjvPvog7
P94fmX85C9Rn8Kn4TsjuN3+Pm8tdoX+M24H7vH0v7iI8KJOS53uoPg8X40rZ
H8w/4vbgvqqv5d7AXWrfm7sMf5FpwFmubogrcJXsUfPN3ALua/q53Ju4r9n3
4a7BP2Qac15XN8G18XmR/dP8M24Rd61+ATeNu86+L/cd/Efmcs676ma4Ht+Q
PW2+lduH+5Z+ITedu8G+H3cjnnunzzhnk/pq3Ixvy6aYb+f2567TL+J24m6x
78/9AhvIXMvZqr4Ot+E7sg3Nd3CLuev1S7i3cr+2v4u7I/6PMu05O9UdcFf8
Bsg2Nd/DHcj9QL+UmxG3zH5A3DJsLpPG2a/uiN/gh7Kp5nXcwdwN+pXczLhl
9sVxy7ClTGfOIXUGHsaNsq3Mv+WWcjfrV3O7xi2zL4lbhm1kunGOxe8uHo/v
h2xb8wPcMu6n+rXcbnHL7O+OW4Y3yXTnnIzfAzyFn8nebH6IW87dGt9nblbc
MvuBccvwFpkCztn4bmFS5L2Oe2t+hDuau12/jpsTt8z+nrhlmCnTm3Ohug/W
x69ku5gf5Y7j7tCv5+bFLbMfFLcMs2WKOY3VJdgEd8btNv+NO567J35HuD3i
ltkPjluG+TJDOM3VQzEV98oWmP/JreLW6Tdw8+OW2Q+JWxbPKVPOaaUeia1x
X9wu81Pcau63+s3cwrhl8W/ELYvnlKngtFNXYnv8TvZu89PcydwD+k+5RXHL
7EvjlsVryEzkdFRXYzoelC01P8udyj2s38LtHbfMfljcsnhOmamcTPWD2AV/
lB1lniJTw/1Zv43bN26Z/fC4ZfGcMjM4uepHMA9/kR1vXk9mOveYfju3f9wy
+7K4ZfGcMk9witS12AuPx2+5eUOZmdzf9V9zB8Qtsx8RtyyeU2Yep1g9H0vw
j7j75o1kZnFPxG8utyRumX153LJ4TplnOaXq53AYnpSdad5Uppb7t34vdyB3
VLxH5qPjOWWWcMaoX8Kx+I/sbPPLZOZwz+jruIO4E+xHmVfFc8qs4NynXokT
8b/4XTRPlZnHTcnxm8B9xWyVv8FeY7TdavXCeG5//wOhDCmj
         "]]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV1nmQz2UcwPGvY53ryrrXsVbuu3EWG7GuyFGEFIpoyjFDMTFRTHRMNJns
DGGi6BAqFVIose5rXetoHbntrmXX3ev54zPv5/PM65u1+2t9E4aP7TsmXxRF
G/NH0dbOUZTSJ4r+0dWdoqhhzyhapY00o2MUNe4RRaf0ZSa5q3t7Q9PJOc9d
Z/2er89/pw30JF+bOa5DmSTmUXst08451117XcHX5ZdrPT3GV2MO6xCmNVPV
Hm9aOt9y10qX8bX5pVpH0/jyzAEdxDRjytnjTBPnm+6a6hK+Fr9YH9X9fElm
jw5g6jMl7LGmrnOOu3q6kK/JL9BE3c0XYnbos0wiE2MvaBKcb7irqSl8DX6+
Jmgq/6C777X2YeKZ+/Z7prJztrsqOo+vxn+m1XUrf4vZor2YcuHvZM8xZZ2z
3MXpXD6en6NVdTN/jflDezAlmav2KybWOdNdCf2Yr8x/pFV0I3+eWa9dmcLM
OftZE+N83V0hnc1X5GdpJV3Hn2R+0c5MxJywp5sHXXwt7h7qTL48P0Mr6Fo+
jflROzK3mUP2gybX+aq7PJ3Ox/HTtJyu4XczP2gSk83ssu80mc5X3GXpVP4R
foqW1ZX8VuZbfYK5zPxt/8tcdL7s7pJO5kvzk7SMfsNvZL7WNsxZ5nf7BpPh
fMndGZ3Il+QnaCn9il/LLNVWzAnmZ/tP5rjzRXfpOp6P5cdpCf2SX80s0RbM
EWZV+PuaNOcL7g7rGL4Y/4YWD59vfgWzUJsz+5jl4es2e5z/c7dXX+OL8KO1
aPh880uYFG3CpDKL7YvMNufz7rbrSL4QP0ILh883n8LM04bMFma+/XOzyfmc
u806nC/ID9OY8Pnm5zJztR6zgZlj/8Sscz7rbr2+yOfnh2iB8PnmZzMfh98z
zM/MLPv74TPkfMbdTzqIj/iBmi98vvnpzGxNZFYy0+zvmO+cM9x9r/35B09H
0XP6UGfxk5mZWoP5mplkf8ssc/7X3Vfal7/H99H7OoMfz0zXqsxiZpx9rPnC
+bS7RdqLv8P31Ls6jR/NTNXKTAozyv5q+J46n3I3X7vzeXw3va1T+GHMZK3A
fMoMtb9k5jifdDdXk/lbfGfN1Un8QGaixjEfMs/bB4TvlfMJdx9oRz6H76A3
dUL4PcaM1zLMDKa3/RnzrnO6u/e0PZ/Nt9MbOo7vxrwRfv8yU5mu9i7mbefj
7qZoWz6Tb6NZ+jrfgRmtxZk3mSftSWaC8zF3E7Ulf41vodd1VPj/lRmhRZix
TGt7q/A1OB91N0ab81f4ZnpVX+GbMcM0hhnFNLU3MSOdj7h7VRvzl/hGelmH
hs8z84IWYIYxde11ws/C+bC7odqAv8DX14s6mK8Zvu8aMYOZBHsNM9A5zd2g
8N/iz/N19D/tHz4nTD+939u/SUwle0XTN/wu9Vw/rcWf5RP1nPblHwk/L73j
uZ5MGXtp08P5oOee1hp8Bl9dz2gvvlgwmuu5ZKaovYjp5HwgvBdoPH+ar6L/
anc+f/g5a47nkph89si0c94f3gu0In+Sr6CnNDl8fd2i6CnN8lxr5rY9z7R0
3hfeCzSOT+fL6gntyGczSeHfQc81Y7LsmaaJ897wXqCl+WN8KT2u7flLzON6
2XP1w+9o+wVT13lPeC/QWP4IX1yPals+g2mlFzyXGH432E+bBOfd4b1Ai/Bp
fGE9rC35Y8xjes5z8eEzaT9iKod/08J7gRbkD/IF9JA25/eHv0v4cz1XLnwv
7HtNWeed4b1AI34///ApPxttzKcyDfSU50oy2+3bTKzzjvBeoPf4vfxd3Rc+
p/xmpo6me64ws8n+p4lxTg3vBZrH7+ZzdY/W5tcxiXrUcxHzm/1X8yDZnx3e
CzSH38nf0F1ak1/DVA/vB567zay2rzK5ztvCe4Fm8qn8dd2h1fhvmCp6wHPZ
zAr7crPQO9oC8z8CyiqE
         "]]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1: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
77zJnONeqPe9Y2bqf8G2SV4=
         "]]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV1XmUzWUcx/EnaTicRtQxODGGTMlom6FkaLONkHFIFJVTnawdS5vtZC1S
IkPphKmsaYihsaRC2bOULTWT0LTYCiOF6fX88ZzP5/k+7/f93bn397uT0uu5
TgOuCCGsKxNCzLkPhlC2VQij0kLo90AII2VfOVz+1CKELu1DmJYdwrPYR/RC
s9ecFclu9jnOdjrrrh82S6kfwmB+vtftbXa93keuahNCZdfpq1eR/eQv+NXm
M+9z3Y4hHLV/Eb+SO8h5TX2w/ApTjTNEry6fl8ew6a41DFOAH2ZWK75vuRmf
jBuh15YjZTF+i3mua41xrVTz380edTbd39DX5/GY/qdZQ2dzzNLkPs5xs1v0
8by5/P1mC2X/diEMsPpZ41y7EeYDXoYsxJzkNdYn8Bbhi8zy5CD8YGugNYHX
DPMRL1P+ijnNa65P4i3BF5stly/iX7JesN7gtcTM47WQJzF/81rpk3n5+FNm
BXI4foQ1zJrCa49ZwGsnSzBneR30qbxV+PNmn8tR+NHWK1YOrwtmEa+zvIwp
4T2s5/DW4UvN1svx+FfjZ2K9y+uBWcx7TCZkhfAPr6f+Dm8DvpzZJvk6fpI1
0Xqf9zQmj/eUTMT8y3tGf4+3GV/JbLt8K/5d1mQrl9cfs5TXT1bFXOQN0Gfx
duCTzHbLHPx0a5o1l/c8ZhlviKyFucx7Qc/l7cEnm+2VM/Hvxb/NWsAbhsnn
DZV1MaW84fqHvH34G8wOytn4OdYsazFvDGYlb7RsgCnTMoSx+lzeD/g0s0L5
UXx/1ofWUt7rmALeRJmOKcubFL9TXhE+w+yIXIhfFN+jlc97G7OaN1U2xSTw
pukfx2cPn2n2m8zDL7E+sQp4JZ738tgeno8Z8fMp7/vTK5ht9gyuxWzxDO40
S9Z3ySyvNdtr79bnyD2yIr6t+SnXWOaaV9t/id/GPRCfVf2gzMbM4/ygz5eH
ZCK2k/kZ7gruNfYb8Tu4h52n6L/IbphPOEf0PHlUVsZ2Nz/PLeBeG983fif3
D+d19D/lk5h8znF9hTwhr8P2Mv+Pu4Zb1X47fjf3jPO6+lnZG7OGc05fG58r
mYTtE+8H7jpudftd+O+4F53foF+SAzHr4zOlb5ClsgZ2kPmV9/v9415v/z1+
L/eqDiHU0xPky5gtnHL6Vlle1sQONS/H3chNtj+A389NdJ6qV5KjMLs41+i7
ZWVZGzvavCJ3E7eO/Y/xe+EmOb9RryYnYPZzqusHZA1ZFzvRvBJ3K7ee/c/4
Q9zazm/SU+SUeF9z6uhF8ZmJ7wk71fxa7g7uTfZH8T9x6zuvr98s38Uci8+L
/qtMi2fYmeZJ3F3cBva/4Yu4dzi/WU+XuZjjnAz9hGwk07AfmNfg7uHeZn8c
f5jb1HkDPVPOw5zmNNP/ks3l7dj55jW5e7np9ifxR7gt4mvH32iZhznHaaWX
yNYyA7vEPIV7gNvY/m/8MW575w31DnJl/P3iPKRfkh3lndjPzOtxD3Gb2Jfg
i7kPO79F7yrXxfuntf/belnZTd6N/cK8PreQm2n/L/537uPOb9WfkN9gKnCe
1CvKXrIZdpN5Q+5h7j32l+Ozw33W+W16b/ktpjKnj15F9pX3Ynea3849yr3f
vozfyRPcgfGz5A6S+zDVOIP16nKIfAC737wRt5jb0j6Be4o71Pkd8TdYFmKS
OcPjfSxHyFbYIvMm3D+4bewrcP/ijnGezh0b7yVMKmdcvMfleJmFLTZvxj3B
fdA+kXuGOyl+h9w35Mn4mXDejJ+9nCzbYU+Z38c9ze1gX4V7jpvjvBF3erwf
MBmcGXEm35EPYc+bt+Se4WbbV+We585y3pg7W17GNOXM0TNlruyELTXP4pZw
O9vX4F7gzo/3DneBTGjrO+AsjJ+vXCS7YMuZt+de4Ha1r8X9j7vU+V3cT2Ui
JouzTG8rl8tHsJXMs7kXud3t63AvcVc5b8JdLatiOnLW6NlyrXwUm2TehVvK
7WGfyi3lro/3LHeDrIXpytkYrye/lj2xyebduGX8b+pp/oTZNmfbraVe41Or
u/NUXE/5P/0kLos=
         "]]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV1VtMlwUYgPGPloVNm5ZuZl2ErawLtS7Kuigzs3Ta0qxVq5bH1CzBBQsM
pEKlNLBADgrIBIM4KYiAoBwFVFDKQyVYDdgyZbVpq01bbf2+i5fnfdnzXPD/
PiBqefRL6yOCIDjly7S5QZC7OAim48icIDixMAiu4Emc9EwQFMwPgonYt8j3
nwuCfHee+c1+XHcZL/G7+b/icZzAz+KMx17dMGenO9MM2rt1QzjM7+QPYReO
46dxxuIJ3UXOF+7tpt/epRvAX/gd/J/xGI7hb+GMxi7dec5md4o5a+/UncMB
fhu/H9sxkp/EGYUdutOcRPdHptd+THcKf+C38L/HVryZH8eJwFZdNyfW/YHp
tHfouvAs/yj/DDZjwH+f899s39e1ct5zrzPN9nZdC/bxm/in8Qj+y1/FuYGN
usOcle4Vpt7epmvAHv5h/klsxOv8tzh/Y72uhvOm+w1zwN6qqw6fB7+e34UN
+Bf/Fc41rNWVc152LzHf2Ft0ZeHPyT/Eb8c6vMp/gfMHVuuKOQvdC8xee7Ou
KOz5B/nNWIu/8+dyRnC/Lp/zrHuO2W0/qsvDJn41vxFrwveUP4tzCSt1OZyn
3E+aLPsRXTbW8yv4dVgZvqf8mZwhLNPt4DzmftSk2Rt16XiQX8KvwVIc5M/g
/IQlulTOdPc0s8XeoNuK+/l7+VVYhBf5UzkXcJ8umfOA+36TZK/TbcJyfj6/
DAvwR/4Uznks0iVwotz3mg/ttbp4LOXn8EswF8/xJ3O+xULdBs5d7kkm2l6j
i8Fifga/CDOxj38HpwfzdWs5493jzGr7Ad0aLOSn8fdgevi+8W/jdOEu3TLO
aHekedtepVuKefzP+Lvxc+zk38Rpw2zd65wId2BetVfoXsMcfgo/GzdjK/+f
eZ4vZuoWc264r5sX7WW6RZjJ38TPwGRs4v/JqccvdfM519xXzfPh56ibhzv4
Cfx03Bi+N/wRTg2m6WZzrrgvm1n2r3VP43Z+LH8bxmE1f5hTidt0T3CG3INm
Zvj56x7HVH40fyvGYAV/gFOKqbpHOP3uC2aGfa/uYUzhv8v/FNeFz59/llOM
m3UPcc64vzNTw+emexA/5q/hJ+Pa8PnzT3EK8RPdfZxed4+Jsu/RTcEk/jv8
RFwdPn9+Jycfk3X3hH8z3R1msr1Adzcm8Ffy43EV5vGbObmYqJsY/o6Hz9Pc
Gf6P0U3AOP5yfiyuwBx+HScLN+pu5xxy15ox4fulG4sb+Ev5MbgMd/KrOBkY
r4vkVLorzC323bpbcT2/eIG/0bgPK81XmnLeLvsozv91cYi1
         "]]},
       RowBox[{"-", "1"}]],
      Annotation[#, -1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], LineBox[CompressedData["
1:eJwV0ltoj3Ecx/GfcOEU5XTBlOKGO+64YpJDSlMUF9icIhtTYxO22Rib2Wx2
Hn8Mc9jpPzOH2YHMhRwKVyg1pLGkWdKsvHbx7vP91Of99NTzzI5PikscEULo
RdGSEFLXhjBmeQgNK0KoR8NqiTpsWBPCeiTFhhDVN7u3IB5b0Wg/lpvgHiej
ehNKPPew535aFkIyt5m7zWY7dmIH7tpN5OxyT5L39FaUc49we7gp3BbuXptE
7Bt+F7TbTePsd0+XnXoHqrnp3K/cNG4rN8XmIFJxCE/tYjhp7lnymd6NCDeT
+417lHufe8wmHZnIwAu7OZzj7rnylf4SNdxsbi83g/uAm2WTjZM4gTd28zg5
7vnynf4Wtdwcbh83i/uQe8rmNPKQi/d2Czhn3AvlR/0D6ri53J/cHG4bN9/m
LApRgB67RZxz7sXyi/4ZUW4+9xc3j/uIW2RTjBKcx3e7pZxSd6zs038Mfydu
IbefW8Bt55bZlKMSFei3W8Wpcq+WA/pvtHGLuQPcYm4Ht9rmAiK4iEG7OM4l
9zo5pP9DF7eU+4dbxu3kXra5gquowciVIWzkXHNvkqP1UejmVnD/cqu4Xdzr
NrW4iRvD/7BdPOeWO0FO0MfjObeaO8iNcB9zb9vUoQH1mGy3m9Po3iOn6lPw
mhvhDnFruE+4TTZR3EEzZtglc1rcB2SMPhOVthX4D/Odyh0=
         "]]},
       RowBox[{"-", "2"}]],
      Annotation[#, -2, "Tooltip"]& ], {}, {}, {}, {}, {}}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.617961305411049*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transform from moving frame to rest frame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{"lorentz", ".", "k"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"c", " ", "m", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "h"], "-", 
    FractionBox[
     RowBox[{"m", " ", 
      SuperscriptBox["v", "2"], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], 
     RowBox[{"c", " ", "h"}]]}], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.617961305582649*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"k", "/.", 
   RowBox[{"\[Gamma]", "\[Rule]", "gamma"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", "m"}], "h"], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179613055982494`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"k", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6179613056606493`*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.6179613056606493`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["In rest frame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", " ", "\[Gamma]", " ", "c"}], ",", 
       RowBox[{"m", " ", "\[Gamma]", " ", "v"}], ",", "0", ",", "0"}], "}"}], 
     "/", "h"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"\[Gamma]", "[", "v", "]"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"v", "\[Rule]", "0"}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", "m"}], "h"], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179613056606493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"k", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6179613057230496`*^9}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.6179613057230496`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transform from rest frame to moving frame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{"lorentz", ".", "k"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"c", " ", "m", " ", "\[Gamma]"}], "h"], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"m", " ", "v", " ", "\[Gamma]"}], "h"]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6179613057386494`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"k", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["h", 
   RowBox[{"m", " ", "v", " ", "\[Gamma]"}]]}]], "Output",
 CellChangeTimes->{3.6179613057386494`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Doppler stuff", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", "1"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ab", "=", 
   RowBox[{"lor", "[", 
    RowBox[{"-", ".5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vb", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vbp", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vc", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vcp", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vr", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vrp", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{".3", ",", "0", ",", "0"}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vu", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vup", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", ".3"}], ",", "0"}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vl", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vlp", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".3"}], ",", "0", ",", "0"}], "}"}], "]"}]}], ")"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vd", "=", 
   RowBox[{"ab", ".", 
    RowBox[{"(", 
     RowBox[{"vdp", "=", 
      RowBox[{"vel4", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", ".3", ",", "0"}], "}"}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"va", "=", 
   RowBox[{"vel4", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"{", 
    RowBox[{"e", ",", 
     RowBox[{"-", "e"}], ",", "0", ",", "0"}], "}"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"vb", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vc", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"vb", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vr", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"vb", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vu", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"vb", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vl", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"vb", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vd", ",", "p"}], "]"}]]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox[
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.7320508075688776`", " ", "e"}]}], 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"2.3603873774083297`", " ", "e"}]}]], ",", 
   FractionBox[
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.7320508075688776`", " ", "e"}]}], 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.8156825980064073`", " ", "e"}]}]], ",", 
   FractionBox[
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.7320508075688776`", " ", "e"}]}], 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.2709778186044853`", " ", "e"}]}]], ",", 
   FractionBox[
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.7320508075688776`", " ", "e"}]}], 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.8156825980064073`", " ", "e"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6179613057854495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"va", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vc", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"va", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vr", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"va", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vu", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"va", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vl", ",", "p"}], "]"}]], ",", 
   FractionBox[
    RowBox[{"mink", "[", 
     RowBox[{"va", ",", "p"}], "]"}], 
    RowBox[{"mink", "[", 
     RowBox[{"vd", ",", "p"}], "]"}]]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["e", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.7320508075688776`", " ", "e"}]}]], ",", 
   FractionBox["e", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"2.3603873774083297`", " ", "e"}]}]], ",", 
   FractionBox["e", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.8156825980064073`", " ", "e"}]}]], ",", 
   FractionBox["e", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.2709778186044853`", " ", "e"}]}]], ",", 
   FractionBox["e", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"1.8156825980064073`", " ", "e"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6179613058010497`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{972, 913},
WindowMargins->{{Automatic, 221}, {26, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 92, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[684, 27, 202, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[911, 34, 67, 1, 31, "Input"],
Cell[981, 37, 394, 9, 39, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412, 51, 140, 2, 31, "Input"],
Cell[1555, 55, 397, 9, 39, "Message"]
}, Open  ]],
Cell[1967, 67, 99, 2, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2103, 74, 194, 3, 49, "Subsection"],
Cell[2300, 79, 220, 8, 45, "Input"],
Cell[2523, 89, 284, 9, 31, "Input"],
Cell[2810, 100, 125, 3, 31, "Input"],
Cell[2938, 105, 616, 18, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3591, 128, 153, 2, 49, "Subsection"],
Cell[3747, 132, 647, 21, 31, "Input"],
Cell[4397, 155, 2723, 78, 77, "Input"],
Cell[7123, 235, 255, 7, 31, "Input"],
Cell[7381, 244, 1429, 38, 76, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8847, 287, 203, 3, 49, "Subsection"],
Cell[9053, 292, 474, 13, 31, "Input"],
Cell[9530, 307, 520, 14, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[10087, 326, 197, 3, 41, "Subsection"],
Cell[10287, 331, 281, 8, 31, "Input"],
Cell[10571, 341, 267, 7, 31, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10887, 354, 120, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[11032, 359, 249, 5, 31, "Input"],
Cell[11284, 366, 800, 11, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12133, 383, 83, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[12241, 388, 146, 2, 49, "Subsection"],
Cell[12390, 392, 1331, 42, 152, "Input"],
Cell[CellGroupData[{
Cell[13746, 438, 257, 8, 35, "Input"],
Cell[14006, 448, 99, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14142, 454, 257, 8, 35, "Input"],
Cell[14402, 464, 124, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14563, 471, 251, 8, 35, "Input"],
Cell[14817, 481, 121, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14975, 488, 1511, 41, 72, "Input"],
Cell[16489, 531, 1119, 28, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17645, 564, 1783, 51, 92, "Input"],
Cell[19431, 617, 1136, 28, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20616, 651, 155, 2, 41, "Subsection"],
Cell[CellGroupData[{
Cell[20796, 657, 324, 7, 31, "Input"],
Cell[21123, 666, 587, 18, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21747, 689, 304, 7, 31, "Input"],
Cell[22054, 698, 1664, 52, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23755, 755, 239, 5, 31, "Input"],
Cell[23997, 762, 1253, 41, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25287, 808, 418, 11, 31, "Input"],
Cell[25708, 821, 13297, 401, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39042, 1227, 183, 4, 31, "Input"],
Cell[39228, 1233, 1062, 36, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40327, 1274, 373, 10, 33, "Input"],
Cell[40703, 1286, 839, 27, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41591, 1319, 165, 2, 41, "Subsection"],
Cell[CellGroupData[{
Cell[41781, 1325, 47, 0, 27, "Subsubsection"],
Cell[41831, 1327, 588, 18, 31, "Input"],
Cell[42422, 1347, 374, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[42821, 1363, 347, 11, 31, "Input"],
Cell[43171, 1376, 196, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43404, 1387, 349, 11, 31, "Input"],
Cell[43756, 1400, 427, 15, 70, "Output"]
}, Open  ]],
Cell[44198, 1418, 656, 20, 31, "Input"],
Cell[44857, 1440, 374, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[45256, 1456, 392, 12, 31, "Input"],
Cell[45651, 1470, 462, 13, 70, "Output"]
}, Open  ]],
Cell[46128, 1486, 1629, 45, 152, "Input"],
Cell[CellGroupData[{
Cell[47782, 1535, 164, 4, 31, "Input"],
Cell[47949, 1541, 89, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48075, 1547, 169, 4, 31, "Input"],
Cell[48247, 1553, 90, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48374, 1559, 164, 4, 31, "Input"],
Cell[48541, 1565, 89, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48667, 1571, 165, 4, 31, "Input"],
Cell[48835, 1577, 88, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48960, 1583, 685, 20, 72, "Input"],
Cell[49648, 1605, 98, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49783, 1612, 747, 22, 92, "Input"],
Cell[50533, 1636, 188, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50758, 1647, 207, 7, 31, "Input"],
Cell[50968, 1656, 533, 11, 70, "Message"],
Cell[51504, 1669, 614, 20, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52155, 1694, 543, 16, 55, "Input"],
Cell[52701, 1712, 15368, 264, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68106, 1981, 1037, 30, 97, "Input"],
Cell[69146, 2013, 342, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69525, 2029, 89, 2, 31, "Input"],
Cell[69617, 2033, 87, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69741, 2039, 945, 33, 66, "Input"],
Cell[70689, 2074, 89, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70815, 2080, 1976, 56, 157, "Input"],
Cell[72794, 2138, 361, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73192, 2155, 89, 2, 31, "Input"],
Cell[73284, 2159, 88, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73409, 2165, 118, 3, 31, "Input"],
Cell[73530, 2170, 88, 1, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73667, 2177, 90, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[73782, 2182, 748, 20, 31, "Input"],
Cell[74533, 2204, 323, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74893, 2218, 1037, 27, 52, "Input"],
Cell[75933, 2247, 717, 24, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76687, 2276, 564, 17, 52, "Input"],
Cell[77254, 2295, 73, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77364, 2301, 834, 24, 52, "Input"],
Cell[78201, 2327, 669, 21, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78907, 2353, 564, 17, 52, "Input"],
Cell[79474, 2372, 73, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79584, 2378, 164, 3, 31, "Input"],
Cell[79751, 2383, 70, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79858, 2389, 170, 4, 31, "Input"],
Cell[80031, 2395, 72, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80140, 2401, 462, 13, 31, "Input"],
Cell[80605, 2416, 744, 24, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81386, 2445, 479, 15, 52, "Input"],
Cell[81868, 2462, 994, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82899, 2500, 1147, 29, 92, "Input"],
Cell[84049, 2531, 992, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85078, 2569, 412, 12, 31, "Input"],
Cell[85493, 2583, 73, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85603, 2589, 946, 26, 92, "Input"],
Cell[86552, 2617, 1100, 36, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87689, 2658, 464, 13, 31, "Input"],
Cell[88156, 2673, 73, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88266, 2679, 369, 10, 31, "Input"],
Cell[88638, 2691, 1439, 43, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90114, 2739, 357, 7, 31, "Input"],
Cell[90474, 2748, 2461, 75, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92972, 2828, 571, 17, 58, "Input"],
Cell[93546, 2847, 405, 14, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93988, 2866, 2776, 64, 206, "Input"],
Cell[96767, 2932, 588, 19, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97392, 2956, 2903, 66, 206, "Input"],
Cell[100298, 3024, 590, 19, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[100937, 3049, 136, 2, 21, "Subsubsection"],
Cell[CellGroupData[{
Cell[101098, 3055, 638, 15, 31, "Input"],
Cell[101739, 3072, 359, 10, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102135, 3087, 744, 20, 31, "Input"],
Cell[102882, 3109, 1037, 34, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103956, 3148, 186, 4, 31, "Input"],
Cell[104145, 3154, 1082, 35, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105264, 3194, 715, 19, 31, "Input"],
Cell[105982, 3215, 892, 27, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106911, 3247, 333, 9, 31, "Input"],
Cell[107247, 3258, 1732, 55, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[109028, 3319, 116, 1, 21, "Subsubsection"],
Cell[109147, 3322, 335, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[109507, 3332, 511, 15, 31, "Input"],
Cell[110021, 3349, 642, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110700, 3369, 782, 21, 31, "Input"],
Cell[111485, 3392, 1330, 40, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112852, 3437, 734, 23, 52, "Input"],
Cell[113589, 3462, 189, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113815, 3470, 158, 3, 31, "Input"],
Cell[113976, 3475, 285, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114298, 3485, 684, 19, 31, "Input"],
Cell[114985, 3506, 990, 30, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116012, 3541, 719, 22, 52, "Input"],
Cell[116734, 3565, 177, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116948, 3572, 419, 13, 33, "Input"],
Cell[117370, 3587, 474, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117881, 3607, 184, 4, 31, "Input"],
Cell[118068, 3613, 361, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118466, 3629, 739, 22, 33, "Input"],
Cell[119208, 3653, 197, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119442, 3661, 150, 3, 31, "Input"],
Cell[119595, 3666, 139, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119771, 3673, 350, 7, 31, "Input"],
Cell[120124, 3682, 1830, 56, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121991, 3743, 862, 27, 52, "Input"],
Cell[122856, 3772, 2113, 65, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125006, 3842, 568, 17, 33, "Input"],
Cell[125577, 3861, 145, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125759, 3869, 710, 21, 33, "Input"],
Cell[126472, 3892, 266, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126775, 3901, 815, 26, 52, "Input"],
Cell[127593, 3929, 1824, 58, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129454, 3992, 619, 19, 33, "Input"],
Cell[130076, 4013, 493, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130606, 4033, 591, 18, 33, "Input"],
Cell[131200, 4053, 122, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131359, 4060, 710, 21, 33, "Input"],
Cell[132072, 4083, 266, 4, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[132387, 4093, 247, 3, 21, "Subsubsection"],
Cell[132637, 4098, 2878, 81, 188, "Text"],
Cell[CellGroupData[{
Cell[135540, 4183, 1001, 27, 33, "Input"],
Cell[136544, 4212, 1243, 33, 70, "Output"]
}, Open  ]],
Cell[137802, 4248, 368, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[138195, 4259, 460, 8, 31, "Input"],
Cell[138658, 4269, 602, 10, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139297, 4284, 577, 18, 52, "Input"],
Cell[139877, 4304, 188, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140102, 4313, 114, 2, 31, "Input"],
Cell[140219, 4317, 284, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140540, 4327, 503, 9, 31, "Input"],
Cell[141046, 4338, 691, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141774, 4355, 996, 27, 52, "Input"],
Cell[142773, 4384, 619, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143429, 4401, 124, 2, 31, "Input"],
Cell[143556, 4405, 320, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143913, 4417, 548, 15, 33, "Input"],
Cell[144464, 4434, 763, 22, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145276, 4462, 320, 5, 21, "Subsubsection"],
Cell[145599, 4469, 2500, 69, 119, "Text"],
Cell[CellGroupData[{
Cell[148124, 4542, 193, 4, 31, "Input"],
Cell[148320, 4548, 191, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148548, 4557, 1126, 31, 54, "Input"],
Cell[149677, 4590, 1466, 39, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151180, 4634, 2422, 59, 202, "Input"],
Cell[153605, 4695, 2329, 65, 70, "Output"]
}, Open  ]],
Cell[155949, 4763, 368, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[156342, 4774, 484, 8, 31, "Input"],
Cell[156829, 4784, 674, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157540, 4800, 765, 17, 52, "Input"],
Cell[158308, 4819, 1195, 27, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159540, 4851, 296, 8, 31, "Input"],
Cell[159839, 4861, 672, 18, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160548, 4884, 503, 9, 31, "Input"],
Cell[161054, 4895, 765, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161856, 4913, 1273, 37, 101, "Input"],
Cell[163132, 4952, 500, 14, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163669, 4971, 129, 2, 31, "Input"],
Cell[163801, 4975, 96, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163934, 4981, 124, 2, 31, "Input"],
Cell[164061, 4985, 619, 17, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164717, 5007, 548, 15, 33, "Input"],
Cell[165268, 5024, 346, 5, 70, "Output"]
}, Open  ]],
Cell[165629, 5032, 289, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[165943, 5039, 756, 14, 31, "Input"],
Cell[166702, 5055, 350, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167089, 5068, 1311, 30, 52, "Input"],
Cell[168403, 5100, 4330, 121, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172770, 5226, 984, 21, 31, "Input"],
Cell[173757, 5249, 956, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174750, 5269, 2366, 60, 122, "Input"],
Cell[177119, 5331, 14854, 408, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192010, 5744, 525, 15, 31, "Input"],
Cell[192538, 5761, 198, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192773, 5769, 967, 26, 31, "Input"],
Cell[193743, 5797, 1468, 40, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195248, 5842, 1273, 38, 98, "Input"],
Cell[196524, 5882, 260, 5, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[196845, 5894, 163, 4, 71, "Subsection"],
Cell[CellGroupData[{
Cell[197033, 5902, 612, 13, 31, "Input"],
Cell[197648, 5917, 668, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198353, 5934, 441, 10, 31, "Input"],
Cell[198797, 5946, 417, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199251, 5960, 229, 5, 31, "Input"],
Cell[199483, 5967, 295, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199815, 5976, 588, 13, 31, "Input"],
Cell[200406, 5991, 813, 16, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201256, 6012, 441, 10, 31, "Input"],
Cell[201700, 6024, 461, 10, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202198, 6039, 229, 5, 31, "Input"],
Cell[202430, 6046, 294, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202761, 6055, 179, 4, 31, "Input"],
Cell[202943, 6061, 732, 22, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203712, 6088, 490, 16, 31, "Input"],
Cell[204205, 6106, 793, 14, 70, "Message"],
Cell[205001, 6122, 2426, 73, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207464, 6200, 498, 16, 31, "Input"],
Cell[207965, 6218, 754, 14, 70, "Message"],
Cell[208722, 6234, 2424, 73, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211183, 6312, 40, 0, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[211248, 6316, 231, 7, 31, "Input"],
Cell[211482, 6325, 268, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211787, 6338, 101, 3, 31, "Input"],
Cell[211891, 6343, 130, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212058, 6351, 466, 15, 31, "Input"],
Cell[212527, 6368, 177, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212741, 6378, 530, 16, 52, "Input"],
Cell[213274, 6396, 440806, 7279, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[654129, 13681, 66, 0, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[654220, 13685, 78, 2, 31, "Input"],
Cell[654301, 13689, 404, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654742, 13707, 126, 3, 31, "Input"],
Cell[654871, 13712, 187, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655095, 13723, 101, 3, 31, "Input"],
Cell[655199, 13728, 447, 10, 70, "Message"],
Cell[655649, 13740, 86, 1, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[655784, 13747, 38, 0, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[655847, 13751, 450, 14, 31, "Input"],
Cell[656300, 13767, 187, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656524, 13778, 101, 3, 31, "Input"],
Cell[656628, 13783, 447, 10, 70, "Message"],
Cell[657078, 13795, 86, 1, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[657213, 13802, 66, 0, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[657304, 13806, 78, 2, 31, "Input"],
Cell[657385, 13810, 289, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657711, 13824, 101, 3, 31, "Input"],
Cell[657815, 13829, 151, 4, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[658027, 13840, 35, 0, 41, "Subsection"],
Cell[658065, 13842, 67, 2, 31, "Input"],
Cell[658135, 13846, 1688, 60, 152, "Input"],
Cell[659826, 13908, 324, 11, 52, "Input"],
Cell[CellGroupData[{
Cell[660175, 13923, 812, 27, 49, "Input"],
Cell[660990, 13952, 963, 23, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661990, 13980, 812, 27, 49, "Input"],
Cell[662805, 14009, 712, 18, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
